{
  "body": {
    "bound": {
      "height": 18015,
      "left": 16,
      "top": 7,
      "width": 1568
    },
    "computed": {
      "alignment-baseline": "auto",
      "background-attachment": "scroll",
      "background-clip": "border-box",
      "background-color": "rgb(255, 255, 255)",
      "background-image": "none",
      "background-origin": "padding-box",
      "background-position": "0% 0%",
      "background-repeat": "repeat",
      "background-size": "auto auto",
      "baseline-shift": "baseline",
      "border-bottom-color": "rgb(0, 0, 0)",
      "border-bottom-left-radius": "0px",
      "border-bottom-right-radius": "0px",
      "border-bottom-style": "none",
      "border-bottom-width": "0px",
      "border-collapse": "separate",
      "border-left-color": "rgb(0, 0, 0)",
      "border-left-style": "none",
      "border-left-width": "0px",
      "border-right-color": "rgb(0, 0, 0)",
      "border-right-style": "none",
      "border-right-width": "0px",
      "border-top-color": "rgb(0, 0, 0)",
      "border-top-left-radius": "0px",
      "border-top-right-radius": "0px",
      "border-top-style": "none",
      "border-top-width": "0px",
      "bottom": "auto",
      "box-shadow": "none",
      "box-sizing": "content-box",
      "caption-side": "top",
      "clear": "none",
      "clip": "auto",
      "clip-path": "none",
      "clip-rule": "nonzero",
      "color": "rgb(0, 0, 0)",
      "color-interpolation": "srgb",
      "color-interpolation-filters": "linearrgb",
      "color-rendering": "auto",
      "cursor": "auto",
      "direction": "ltr",
      "display": "block",
      "dominant-baseline": "auto",
      "empty-cells": "show",
      "fill": "#000000",
      "fill-opacity": "1",
      "fill-rule": "nonzero",
      "filter": "none",
      "float": "none",
      "flood-color": "rgb(0, 0, 0)",
      "flood-opacity": "1",
      "font-family": "'Lucida Grande', Arial, sans-serif",
      "font-size": "16px",
      "font-style": "normal",
      "font-variant": "normal",
      "font-weight": "normal",
      "glyph-orientation-horizontal": "0deg",
      "glyph-orientation-vertical": "auto",
      "height": "18015px",
      "image-rendering": "auto",
      "kerning": "0",
      "left": "auto",
      "letter-spacing": "normal",
      "lighting-color": "rgb(255, 255, 255)",
      "line-height": "normal",
      "list-style-image": "none",
      "list-style-position": "outside",
      "list-style-type": "disc",
      "margin-bottom": "0px",
      "margin-left": "16px",
      "margin-right": "16px",
      "margin-top": "0px",
      "marker-end": "none",
      "marker-mid": "none",
      "marker-start": "none",
      "mask": "none",
      "max-height": "none",
      "max-width": "none",
      "min-height": "0px",
      "min-width": "0px",
      "opacity": "1",
      "orphans": "2",
      "outline-color": "rgb(0, 0, 0)",
      "outline-style": "none",
      "outline-width": "0px",
      "overflow-x": "visible",
      "overflow-y": "visible",
      "padding-bottom": "0px",
      "padding-left": "0px",
      "padding-right": "0px",
      "padding-top": "0px",
      "page-break-after": "auto",
      "page-break-before": "auto",
      "page-break-inside": "auto",
      "pointer-events": "auto",
      "position": "static",
      "resize": "none",
      "right": "auto",
      "shape-rendering": "auto",
      "speak": "normal",
      "stop-color": "rgb(0, 0, 0)",
      "stop-opacity": "1",
      "stroke": "none",
      "stroke-dasharray": "none",
      "stroke-dashoffset": "0",
      "stroke-linecap": "butt",
      "stroke-linejoin": "miter",
      "stroke-miterlimit": "4",
      "stroke-opacity": "1",
      "stroke-width": "1",
      "table-layout": "auto",
      "text-align": "-webkit-auto",
      "text-anchor": "start",
      "text-decoration": "none",
      "text-indent": "0px",
      "text-overflow": "clip",
      "text-rendering": "auto",
      "text-shadow": "none",
      "text-transform": "none",
      "top": "auto",
      "unicode-bidi": "normal",
      "vector-effect": "none",
      "vertical-align": "baseline",
      "visibility": "visible",
      "white-space": "normal",
      "widows": "2",
      "width": "1568px",
      "word-break": "normal",
      "word-spacing": "0px",
      "word-wrap": "normal",
      "writing-mode": "lr-tb",
      "z-index": "auto",
      "zoom": "1"
    },
    "scroll": {
      "left": 0,
      "top": 0
    }
  },
  "descriptions": [],
  "titles": [
    "2. Built-in Functions — Python v3.3.2 documentation"
  ],
  "url": "http://docs.python.org/3.3/library/functions.html",
  "links": [
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/constants.html",
    "http://docs.python.org/3.3/library/intro.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/library/functions.html#built-in-functions",
    "http://docs.python.org/3.3/library/functions.html#abs",
    "http://docs.python.org/3.3/library/functions.html#func-dict",
    "http://docs.python.org/3.3/library/functions.html#help",
    "http://docs.python.org/3.3/library/functions.html#min",
    "http://docs.python.org/3.3/library/functions.html#setattr",
    "http://docs.python.org/3.3/library/functions.html#all",
    "http://docs.python.org/3.3/library/functions.html#dir",
    "http://docs.python.org/3.3/library/functions.html#hex",
    "http://docs.python.org/3.3/library/functions.html#next",
    "http://docs.python.org/3.3/library/functions.html#slice",
    "http://docs.python.org/3.3/library/functions.html#any",
    "http://docs.python.org/3.3/library/functions.html#divmod",
    "http://docs.python.org/3.3/library/functions.html#id",
    "http://docs.python.org/3.3/library/functions.html#object",
    "http://docs.python.org/3.3/library/functions.html#sorted",
    "http://docs.python.org/3.3/library/functions.html#ascii",
    "http://docs.python.org/3.3/library/functions.html#enumerate",
    "http://docs.python.org/3.3/library/functions.html#input",
    "http://docs.python.org/3.3/library/functions.html#oct",
    "http://docs.python.org/3.3/library/functions.html#staticmethod",
    "http://docs.python.org/3.3/library/functions.html#bin",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#open",
    "http://docs.python.org/3.3/library/functions.html#func-str",
    "http://docs.python.org/3.3/library/functions.html#bool",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#isinstance",
    "http://docs.python.org/3.3/library/functions.html#ord",
    "http://docs.python.org/3.3/library/functions.html#sum",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/functions.html#filter",
    "http://docs.python.org/3.3/library/functions.html#issubclass",
    "http://docs.python.org/3.3/library/functions.html#pow",
    "http://docs.python.org/3.3/library/functions.html#super",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/functions.html#iter",
    "http://docs.python.org/3.3/library/functions.html#print",
    "http://docs.python.org/3.3/library/functions.html#func-tuple",
    "http://docs.python.org/3.3/library/functions.html#callable",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://docs.python.org/3.3/library/functions.html#len",
    "http://docs.python.org/3.3/library/functions.html#property",
    "http://docs.python.org/3.3/library/functions.html#type",
    "http://docs.python.org/3.3/library/functions.html#chr",
    "http://docs.python.org/3.3/library/functions.html#func-frozenset",
    "http://docs.python.org/3.3/library/functions.html#func-list",
    "http://docs.python.org/3.3/library/functions.html#func-range",
    "http://docs.python.org/3.3/library/functions.html#vars",
    "http://docs.python.org/3.3/library/functions.html#classmethod",
    "http://docs.python.org/3.3/library/functions.html#getattr",
    "http://docs.python.org/3.3/library/functions.html#locals",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/functions.html#zip",
    "http://docs.python.org/3.3/library/functions.html#compile",
    "http://docs.python.org/3.3/library/functions.html#globals",
    "http://docs.python.org/3.3/library/functions.html#map",
    "http://docs.python.org/3.3/library/functions.html#reversed",
    "http://docs.python.org/3.3/library/functions.html#__import__",
    "http://docs.python.org/3.3/library/functions.html#complex",
    "http://docs.python.org/3.3/library/functions.html#hasattr",
    "http://docs.python.org/3.3/library/functions.html#max",
    "http://docs.python.org/3.3/library/functions.html#round",
    "http://docs.python.org/3.3/library/functions.html#delattr",
    "http://docs.python.org/3.3/library/functions.html#hash",
    "http://docs.python.org/3.3/library/functions.html#func-memoryview",
    "http://docs.python.org/3.3/library/functions.html#func-set",
    "http://docs.python.org/3.3/library/functions.html#abs",
    "http://docs.python.org/3.3/library/functions.html#all",
    "http://docs.python.org/3.3/library/functions.html#any",
    "http://docs.python.org/3.3/library/functions.html#ascii",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/functions.html#bin",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__index__",
    "http://docs.python.org/3.3/library/functions.html#bool",
    "http://docs.python.org/3.3/library/stdtypes.html#truth",
    "http://docs.python.org/3.3/library/functions.html#bool",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/stdtypes.html#typesnumeric",
    "http://docs.python.org/3.3/library/functions.html#bool",
    "http://docs.python.org/3.3/library/stdtypes.html#bltin-boolean-values",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-mutable",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes-methods",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#str.encode",
    "http://docs.python.org/3.3/library/stdtypes.html#binaryseq",
    "http://docs.python.org/3.3/library/stdtypes.html#typebytearray",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#strings",
    "http://docs.python.org/3.3/library/stdtypes.html#binaryseq",
    "http://docs.python.org/3.3/library/stdtypes.html#typebytes",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes-methods",
    "http://docs.python.org/3.3/library/functions.html#callable",
    "http://docs.python.org/3.3/library/constants.html#True",
    "http://docs.python.org/3.3/library/constants.html#False",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__call__",
    "http://docs.python.org/3.3/library/functions.html#chr",
    "http://docs.python.org/3.3/library/functions.html#ord",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/functions.html#classmethod",
    "http://docs.python.org/3.3/glossary.html#term-decorator",
    "http://docs.python.org/3.3/reference/compound_stmts.html#function",
    "http://docs.python.org/3.3/library/functions.html#staticmethod",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/library/functions.html#compile",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/library/ast.html#module-ast",
    "http://www.python.org/dev/peps/pep-0236",
    "http://docs.python.org/3.3/library/__future__.html#module-__future__",
    "http://docs.python.org/3.3/using/cmdline.html#cmdoption-O",
    "http://docs.python.org/3.3/library/exceptions.html#SyntaxError",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/code.html#module-code",
    "http://docs.python.org/3.3/library/functions.html#complex",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#typesnumeric",
    "http://docs.python.org/3.3/library/functions.html#delattr",
    "http://docs.python.org/3.3/library/functions.html#setattr",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#typesmapping",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/collections.html#module-collections",
    "http://docs.python.org/3.3/library/functions.html#dir",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__dir__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__getattr__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__getattribute__",
    "http://docs.python.org/3.3/library/functions.html#dir",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__dir__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__getattr__",
    "http://docs.python.org/3.3/library/functions.html#dir",
    "http://docs.python.org/3.3/library/functions.html#dir",
    "http://docs.python.org/3.3/library/functions.html#divmod",
    "http://docs.python.org/3.3/library/functions.html#enumerate",
    "http://docs.python.org/3.3/glossary.html#term-iterator",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator.__next__",
    "http://docs.python.org/3.3/library/functions.html#enumerate",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/library/builtins.html#module-builtins",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/library/functions.html#compile",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#globals",
    "http://docs.python.org/3.3/library/functions.html#locals",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/ast.html#ast.literal_eval",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#id2",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/builtins.html#module-builtins",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#globals",
    "http://docs.python.org/3.3/library/functions.html#locals",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#locals",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#filter",
    "http://docs.python.org/3.3/library/itertools.html#itertools.filterfalse",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-floatnumber",
    "http://docs.python.org/3.3/library/functions.html#grammar-token-infinity",
    "http://docs.python.org/3.3/library/functions.html#grammar-token-nan",
    "http://docs.python.org/3.3/library/string.html#grammar-token-sign",
    "http://docs.python.org/3.3/library/functions.html#grammar-token-numeric_value",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#floating",
    "http://docs.python.org/3.3/library/exceptions.html#OverflowError",
    "http://docs.python.org/3.3/library/stdtypes.html#typesnumeric",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://docs.python.org/3.3/library/string.html#formatspec",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__format__",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#types-set",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/collections.html#module-collections",
    "http://docs.python.org/3.3/library/functions.html#getattr",
    "http://docs.python.org/3.3/library/exceptions.html#AttributeError",
    "http://docs.python.org/3.3/library/functions.html#globals",
    "http://docs.python.org/3.3/library/functions.html#hasattr",
    "http://docs.python.org/3.3/library/exceptions.html#AttributeError",
    "http://docs.python.org/3.3/library/functions.html#hash",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__hash__",
    "http://docs.python.org/3.3/library/functions.html#hash",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__hash__",
    "http://docs.python.org/3.3/library/functions.html#help",
    "http://docs.python.org/3.3/library/site.html#module-site",
    "http://docs.python.org/3.3/library/functions.html#hex",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__index__",
    "http://docs.python.org/3.3/library/stdtypes.html#float.hex",
    "http://docs.python.org/3.3/library/functions.html#id",
    "http://docs.python.org/3.3/library/functions.html#id",
    "http://docs.python.org/3.3/library/functions.html#input",
    "http://docs.python.org/3.3/library/exceptions.html#EOFError",
    "http://docs.python.org/3.3/library/readline.html#module-readline",
    "http://docs.python.org/3.3/library/functions.html#input",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__int__",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#integers",
    "http://docs.python.org/3.3/library/stdtypes.html#typesnumeric",
    "http://docs.python.org/3.3/library/functions.html#isinstance",
    "http://docs.python.org/3.3/glossary.html#term-abstract-base-class",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/functions.html#issubclass",
    "http://docs.python.org/3.3/glossary.html#term-abstract-base-class",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/functions.html#iter",
    "http://docs.python.org/3.3/glossary.html#term-iterator",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__iter__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__getitem__",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator.__next__",
    "http://docs.python.org/3.3/library/exceptions.html#StopIteration",
    "http://docs.python.org/3.3/library/stdtypes.html#typeiter",
    "http://docs.python.org/3.3/library/functions.html#iter",
    "http://docs.python.org/3.3/library/readline.html#module-readline",
    "http://docs.python.org/3.3/library/functions.html#len",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-list",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq",
    "http://docs.python.org/3.3/library/functions.html#locals",
    "http://docs.python.org/3.3/library/functions.html#locals",
    "http://docs.python.org/3.3/library/functions.html#map",
    "http://docs.python.org/3.3/library/itertools.html#itertools.starmap",
    "http://docs.python.org/3.3/library/functions.html#max",
    "http://docs.python.org/3.3/library/stdtypes.html#list.sort",
    "http://docs.python.org/3.3/library/stdtypes.html#typememoryview",
    "http://docs.python.org/3.3/library/functions.html#min",
    "http://docs.python.org/3.3/library/stdtypes.html#list.sort",
    "http://docs.python.org/3.3/library/functions.html#next",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator.__next__",
    "http://docs.python.org/3.3/library/exceptions.html#StopIteration",
    "http://docs.python.org/3.3/library/functions.html#object",
    "http://docs.python.org/3.3/library/functions.html#object",
    "http://docs.python.org/3.3/library/functions.html#object",
    "http://docs.python.org/3.3/library/functions.html#object",
    "http://docs.python.org/3.3/library/functions.html#oct",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__index__",
    "http://docs.python.org/3.3/library/functions.html#open",
    "http://docs.python.org/3.3/glossary.html#term-file-object",
    "http://docs.python.org/3.3/library/exceptions.html#OSError",
    "http://docs.python.org/3.3/library/io.html#io-overview",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/io.html#io.DEFAULT_BUFFER_SIZE",
    "http://docs.python.org/3.3/library/locale.html#locale.getpreferredencoding",
    "http://docs.python.org/3.3/library/codecs.html#module-codecs",
    "http://docs.python.org/3.3/library/codecs.html#codecs.register_error",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/glossary.html#term-universal-newlines",
    "http://docs.python.org/3.3/library/os.html#os.linesep",
    "http://docs.python.org/3.3/library/os.html#os.open",
    "http://docs.python.org/3.3/library/os.html#dir-fd",
    "http://docs.python.org/3.3/library/os.html#os.open",
    "http://docs.python.org/3.3/glossary.html#term-file-object",
    "http://docs.python.org/3.3/library/functions.html#open",
    "http://docs.python.org/3.3/library/functions.html#open",
    "http://docs.python.org/3.3/library/io.html#io.TextIOBase",
    "http://docs.python.org/3.3/library/io.html#io.TextIOWrapper",
    "http://docs.python.org/3.3/library/io.html#io.BufferedIOBase",
    "http://docs.python.org/3.3/library/io.html#io.BufferedReader",
    "http://docs.python.org/3.3/library/io.html#io.BufferedWriter",
    "http://docs.python.org/3.3/library/io.html#io.BufferedRandom",
    "http://docs.python.org/3.3/library/io.html#io.RawIOBase",
    "http://docs.python.org/3.3/library/io.html#io.FileIO",
    "http://docs.python.org/3.3/library/fileinput.html#module-fileinput",
    "http://docs.python.org/3.3/library/io.html#module-io",
    "http://docs.python.org/3.3/library/functions.html#open",
    "http://docs.python.org/3.3/library/os.html#module-os",
    "http://docs.python.org/3.3/library/os.path.html#module-os.path",
    "http://docs.python.org/3.3/library/tempfile.html#module-tempfile",
    "http://docs.python.org/3.3/library/shutil.html#module-shutil",
    "http://docs.python.org/3.3/library/exceptions.html#IOError",
    "http://docs.python.org/3.3/library/exceptions.html#OSError",
    "http://docs.python.org/3.3/library/exceptions.html#FileExistsError",
    "http://docs.python.org/3.3/library/functions.html#ord",
    "http://docs.python.org/3.3/library/functions.html#chr",
    "http://docs.python.org/3.3/library/functions.html#pow",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#print",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/functions.html#print",
    "http://docs.python.org/3.3/library/sys.html#sys.stdout",
    "http://docs.python.org/3.3/library/functions.html#property",
    "http://docs.python.org/3.3/library/functions.html#property",
    "http://docs.python.org/3.3/glossary.html#term-decorator",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-range",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__repr__",
    "http://docs.python.org/3.3/library/functions.html#reversed",
    "http://docs.python.org/3.3/glossary.html#term-iterator",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__reversed__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__len__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__getitem__",
    "http://docs.python.org/3.3/library/functions.html#round",
    "http://docs.python.org/3.3/library/functions.html#round",
    "http://docs.python.org/3.3/library/functions.html#round",
    "http://docs.python.org/3.3/tutorial/floatingpoint.html#tut-fp-issues",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#types-set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/collections.html#module-collections",
    "http://docs.python.org/3.3/library/functions.html#setattr",
    "http://docs.python.org/3.3/library/functions.html#getattr",
    "http://docs.python.org/3.3/library/functions.html#slice",
    "http://docs.python.org/3.3/glossary.html#term-slice",
    "http://docs.python.org/3.3/library/itertools.html#itertools.islice",
    "http://docs.python.org/3.3/library/functions.html#sorted",
    "http://docs.python.org/3.3/library/functools.html#functools.cmp_to_key",
    "http://wiki.python.org/moin/HowTo/Sorting/",
    "http://docs.python.org/3.3/library/functions.html#staticmethod",
    "http://docs.python.org/3.3/glossary.html#term-decorator",
    "http://docs.python.org/3.3/reference/compound_stmts.html#function",
    "http://docs.python.org/3.3/library/functions.html#classmethod",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/glossary.html#term-class",
    "http://docs.python.org/3.3/library/stdtypes.html#textseq",
    "http://docs.python.org/3.3/library/functions.html#sum",
    "http://docs.python.org/3.3/library/functions.html#sum",
    "http://docs.python.org/3.3/library/math.html#math.fsum",
    "http://docs.python.org/3.3/library/itertools.html#itertools.chain",
    "http://docs.python.org/3.3/library/functions.html#super",
    "http://docs.python.org/3.3/library/functions.html#getattr",
    "http://docs.python.org/3.3/library/functions.html#getattr",
    "http://docs.python.org/3.3/library/functions.html#super",
    "http://docs.python.org/3.3/library/functions.html#super",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__getattribute__",
    "http://docs.python.org/3.3/library/functions.html#super",
    "http://docs.python.org/3.3/library/functions.html#super",
    "http://docs.python.org/3.3/library/functions.html#super",
    "http://rhettinger.wordpress.com/2011/05/26/super-considered-super/",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq",
    "http://docs.python.org/3.3/library/functions.html#type",
    "http://docs.python.org/3.3/library/functions.html#isinstance",
    "http://docs.python.org/3.3/reference/compound_stmts.html#class",
    "http://docs.python.org/3.3/library/functions.html#type",
    "http://docs.python.org/3.3/library/stdtypes.html#bltin-type-objects",
    "http://docs.python.org/3.3/library/functions.html#vars",
    "http://docs.python.org/3.3/library/functions.html#vars",
    "http://docs.python.org/3.3/library/functions.html#locals",
    "http://docs.python.org/3.3/library/functions.html#zip",
    "http://docs.python.org/3.3/library/functions.html#zip",
    "http://docs.python.org/3.3/library/itertools.html#itertools.zip_longest",
    "http://docs.python.org/3.3/library/functions.html#zip",
    "http://docs.python.org/3.3/library/functions.html#__import__",
    "http://docs.python.org/3.3/library/importlib.html#importlib.import_module",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/library/builtins.html#module-builtins",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://www.python.org/dev/peps/pep-0302",
    "http://docs.python.org/3.3/library/functions.html#__import__",
    "http://docs.python.org/3.3/library/importlib.html#importlib.import_module",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/library/functions.html#__import__",
    "http://www.python.org/dev/peps/pep-0328",
    "http://docs.python.org/3.3/library/functions.html#__import__",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/library/functions.html#__import__",
    "http://docs.python.org/3.3/library/importlib.html#importlib.import_module",
    "http://docs.python.org/3.3/library/functions.html#id1",
    "http://docs.python.org/3.3/library/intro.html",
    "http://docs.python.org/3.3/library/constants.html",
    "http://docs.python.org/3.3/bugs.html",
    "http://docs.python.org/3.3/_sources/library/functions.txt",
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/constants.html",
    "http://docs.python.org/3.3/library/intro.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/copyright.html",
    "http://www.python.org/psf/donations/",
    "http://docs.python.org/3.3/bugs.html",
    "http://sphinx.pocoo.org/"
  ],
  "texts": [
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 14,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 14,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 14,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"constants.html\" title=\"3. Built-in Constants\" accesskey=\"N\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 14,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"intro.html\" title=\"1. Introduction\" accesskey=\"P\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 14,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"constants.html\" title=\"3. Built-in Constants\" accesskey=\"N\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"intro.html\" title=\"1. Introduction\" accesskey=\"P\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\" accesskey=\"U\">The Python Standard Library</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »"
      ]
    },
    {
      "bound": {
        "height": 56,
        "left": 265,
        "top": 69,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "32px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "9px",
        "padding-top": "9px"
      },
      "element": "h1:nth-of-type(1)",
      "html": "2. Built-in Functions<a class=\"headerlink\" href=\"#built-in-functions\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > h1",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > h1:nth-of-type(1)",
      "text": [
        "2. Built-in Functions",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 141,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The Python interpreter has a number of functions and types built into it that\nare always available.  They are listed here in alphabetical order.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The Python interpreter has a number of functions and types built into it that\nare always available.  They are listed here in alphabetical order."
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 592,
        "top": 179,
        "width": 163
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Built-in Functions",
      "path": "div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Built-in Functions"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 207,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#abs\" title=\"abs\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">abs()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "abs()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 207,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#func-dict\"><tt class=\"docutils literal\"><span class=\"pre\">dict()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "dict()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 207,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#help\" title=\"help\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">help()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(3)",
      "text": [
        "help()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 207,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#min\" title=\"min\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">min()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(4)",
      "text": [
        "min()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 207,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#setattr\" title=\"setattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">setattr()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(5)",
      "text": [
        "setattr()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 236,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#all\" title=\"all\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">all()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "all()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 236,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#dir\" title=\"dir\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">dir()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "dir()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 236,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#hex\" title=\"hex\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">hex()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(3)",
      "text": [
        "hex()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 236,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#next\" title=\"next\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">next()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(4)",
      "text": [
        "next()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 236,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#slice\" title=\"slice\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">slice()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(5)",
      "text": [
        "slice()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 265,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#any\" title=\"any\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">any()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "any()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 265,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#divmod\" title=\"divmod\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">divmod()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "divmod()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 265,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#id\" title=\"id\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">id()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(3)",
      "text": [
        "id()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 265,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#object\" title=\"object\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">object()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(4)",
      "text": [
        "object()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 265,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#sorted\" title=\"sorted\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sorted()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(5)",
      "text": [
        "sorted()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 294,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#ascii\" title=\"ascii\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ascii()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "ascii()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 294,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#enumerate\" title=\"enumerate\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">enumerate()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "enumerate()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 294,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#input\" title=\"input\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">input()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(3)",
      "text": [
        "input()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 294,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#oct\" title=\"oct\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">oct()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(4)",
      "text": [
        "oct()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 294,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#staticmethod\" title=\"staticmethod\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">staticmethod()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(5)",
      "text": [
        "staticmethod()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 323,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#bin\" title=\"bin\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bin()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "bin()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 323,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "eval()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 323,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#int\" title=\"int\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">int()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(3)",
      "text": [
        "int()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 323,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#open\" title=\"open\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(4)",
      "text": [
        "open()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 323,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#func-str\"><tt class=\"docutils literal\"><span class=\"pre\">str()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(5)",
      "text": [
        "str()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 352,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#bool\" title=\"bool\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bool()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "bool()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 352,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "exec()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 352,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#isinstance\" title=\"isinstance\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">isinstance()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(3)",
      "text": [
        "isinstance()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 352,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#ord\" title=\"ord\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ord()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(4)",
      "text": [
        "ord()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 352,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#sum\" title=\"sum\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sum()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(5)",
      "text": [
        "sum()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 381,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#bytearray\" title=\"bytearray\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bytearray()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "bytearray()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 381,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#filter\" title=\"filter\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">filter()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "filter()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 381,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#issubclass\" title=\"issubclass\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">issubclass()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(3)",
      "text": [
        "issubclass()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 381,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#pow\" title=\"pow\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">pow()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(4)",
      "text": [
        "pow()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 381,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#super\" title=\"super\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(5)",
      "text": [
        "super()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 410,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#bytes\" title=\"bytes\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bytes()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "bytes()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 410,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#float\" title=\"float\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">float()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "float()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 410,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#iter\" title=\"iter\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">iter()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(3)",
      "text": [
        "iter()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 410,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#print\" title=\"print\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">print()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(4)",
      "text": [
        "print()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 410,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#func-tuple\"><tt class=\"docutils literal\"><span class=\"pre\">tuple()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(5)",
      "text": [
        "tuple()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 439,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#callable\" title=\"callable\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">callable()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(1)",
      "text": [
        "callable()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 439,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#format\" title=\"format\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">format()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(2)",
      "text": [
        "format()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 439,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#len\" title=\"len\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">len()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(3)",
      "text": [
        "len()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 439,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#property\" title=\"property\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">property()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(4)",
      "text": [
        "property()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 439,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#type\" title=\"type\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">type()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(5)",
      "text": [
        "type()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 468,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#chr\" title=\"chr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">chr()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(1)",
      "text": [
        "chr()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 468,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#func-frozenset\"><tt class=\"docutils literal\"><span class=\"pre\">frozenset()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(2)",
      "text": [
        "frozenset()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 468,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#func-list\"><tt class=\"docutils literal\"><span class=\"pre\">list()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(3)",
      "text": [
        "list()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 468,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#func-range\"><tt class=\"docutils literal\"><span class=\"pre\">range()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(4)",
      "text": [
        "range()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 468,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#vars\" title=\"vars\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">vars()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(5)",
      "text": [
        "vars()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 497,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#classmethod\" title=\"classmethod\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">classmethod()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(1)",
      "text": [
        "classmethod()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 497,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#getattr\" title=\"getattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(2)",
      "text": [
        "getattr()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 497,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#locals\" title=\"locals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(3)",
      "text": [
        "locals()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 497,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(4)",
      "text": [
        "repr()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 497,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#zip\" title=\"zip\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">zip()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(5)",
      "text": [
        "zip()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 526,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#compile\" title=\"compile\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(1)",
      "text": [
        "compile()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 526,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#globals\" title=\"globals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">globals()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(2)",
      "text": [
        "globals()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 526,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#map\" title=\"map\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">map()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(3)",
      "text": [
        "map()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 526,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#reversed\" title=\"reversed\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">reversed()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(4)",
      "text": [
        "reversed()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 901,
        "top": 526,
        "width": 179
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#__import__\" title=\"__import__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(5)",
      "text": [
        "__import__()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 555,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#complex\" title=\"complex\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">complex()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(1)",
      "text": [
        "complex()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 555,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#hasattr\" title=\"hasattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">hasattr()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(2)",
      "text": [
        "hasattr()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 555,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#max\" title=\"max\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">max()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(3)",
      "text": [
        "max()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 555,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#round\" title=\"round\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">round()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(4)",
      "text": [
        "round()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 584,
        "width": 172
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#delattr\" title=\"delattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">delattr()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(1)",
      "text": [
        "delattr()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 437,
        "top": 584,
        "width": 155
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#hash\" title=\"hash\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">hash()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(2)",
      "text": [
        "hash()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 592,
        "top": 584,
        "width": 163
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#func-memoryview\"><tt class=\"docutils literal\"><span class=\"pre\">memoryview()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(3)",
      "text": [
        "memoryview()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 755,
        "top": 584,
        "width": 146
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#func-set\"><tt class=\"docutils literal\"><span class=\"pre\">set()</span></tt></a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(4)",
      "text": [
        "set()"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 630,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#abs:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">abs</tt><big>(</big><em>x</em><big>)</big><a class=\"headerlink\" href=\"#abs\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(1) > dt#abs:nth-of-type(1)",
      "text": [
        "abs",
        "(",
        "x",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 658,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the absolute value of a number.  The argument may be an\ninteger or a floating point number.  If the argument is a complex number, its\nmagnitude is returned.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the absolute value of a number.  The argument may be an\ninteger or a floating point number.  If the argument is a complex number, its\nmagnitude is returned."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 696,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#all:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">all</tt><big>(</big><em>iterable</em><big>)</big><a class=\"headerlink\" href=\"#all\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(2) > dt#all:nth-of-type(1)",
      "text": [
        "all",
        "(",
        "iterable",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 724,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return True if all elements of the <em>iterable</em> are true (or if the iterable\nis empty).  Equivalent to:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return True if all elements of the ",
        "iterable",
        " are true (or if the iterable\nis empty).  Equivalent to:"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 295,
        "top": 762,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">all</span><span class=\"p\">(</span><span class=\"n\">iterable</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">element</span> <span class=\"ow\">in</span> <span class=\"n\">iterable</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">element</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"k\">False</span>\n    <span class=\"k\">return</span> <span class=\"k\">True</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "all",
        "(",
        "iterable",
        "):",
        "for",
        "element",
        "in",
        "iterable",
        ":",
        "if",
        "not",
        "element",
        ":",
        "return",
        "False",
        "return",
        "True"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 880,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#any:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">any</tt><big>(</big><em>iterable</em><big>)</big><a class=\"headerlink\" href=\"#any\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(3) > dt#any:nth-of-type(1)",
      "text": [
        "any",
        "(",
        "iterable",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 908,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return True if any element of the <em>iterable</em> is true.  If the iterable\nis empty, return False.  Equivalent to:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return True if any element of the ",
        "iterable",
        " is true.  If the iterable\nis empty, return False.  Equivalent to:"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 295,
        "top": 946,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">any</span><span class=\"p\">(</span><span class=\"n\">iterable</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">element</span> <span class=\"ow\">in</span> <span class=\"n\">iterable</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">element</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"k\">True</span>\n    <span class=\"k\">return</span> <span class=\"k\">False</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(3) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "any",
        "(",
        "iterable",
        "):",
        "for",
        "element",
        "in",
        "iterable",
        ":",
        "if",
        "element",
        ":",
        "return",
        "True",
        "return",
        "False"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 1064,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#ascii:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">ascii</tt><big>(</big><em>object</em><big>)</big><a class=\"headerlink\" href=\"#ascii\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(4) > dt#ascii:nth-of-type(1)",
      "text": [
        "ascii",
        "(",
        "object",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1092,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "As <a class=\"reference internal\" href=\"#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a>, return a string containing a printable representation of an\nobject, but escape the non-ASCII characters in the string returned by\n<a class=\"reference internal\" href=\"#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a> using <tt class=\"docutils literal\"><span class=\"pre\">\\x</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">\\u</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">\\U</span></tt> escapes.  This generates a string\nsimilar to that returned by <a class=\"reference internal\" href=\"#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a> in Python 2.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "As ",
        "repr()",
        ", return a string containing a printable representation of an\nobject, but escape the non-ASCII characters in the string returned by\n",
        "repr()",
        " using ",
        "\\x",
        ", ",
        "\\u",
        " or ",
        "\\U",
        " escapes.  This generates a string\nsimilar to that returned by ",
        "repr()",
        " in Python 2."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 1152,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bin:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">bin</tt><big>(</big><em>x</em><big>)</big><a class=\"headerlink\" href=\"#bin\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(5) > dt#bin:nth-of-type(1)",
      "text": [
        "bin",
        "(",
        "x",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1180,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Convert an integer number to a binary string. The result is a valid Python\nexpression.  If <em>x</em> is not a Python <a class=\"reference internal\" href=\"#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> object, it has to define an\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__index__\" title=\"object.__index__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__index__()</span></tt></a> method that returns an integer.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Convert an integer number to a binary string. The result is a valid Python\nexpression.  If ",
        "x",
        " is not a Python ",
        "int",
        " object, it has to define an\n",
        "__index__()",
        " method that returns an integer."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 1240,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bool:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">bool</tt><big>(</big><span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#bool\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(6) > dt#bool:nth-of-type(1)",
      "text": [
        "bool",
        "(",
        "[",
        "x",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1269,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Convert a value to a Boolean, using the standard <a class=\"reference internal\" href=\"stdtypes.html#truth\"><em>truth testing\nprocedure</em></a>.  If <em>x</em> is false or omitted, this returns <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>;\notherwise it returns <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>. <a class=\"reference internal\" href=\"#bool\" title=\"bool\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bool</span></tt></a> is also a class, which is a\nsubclass of <a class=\"reference internal\" href=\"#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> (see <a class=\"reference internal\" href=\"stdtypes.html#typesnumeric\"><em>Numeric Types — int, float, complex</em></a>).  Class <a class=\"reference internal\" href=\"#bool\" title=\"bool\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bool</span></tt></a>\ncannot be subclassed further.  Its only instances are <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> and\n<tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> (see <a class=\"reference internal\" href=\"stdtypes.html#bltin-boolean-values\"><em>Boolean Values</em></a>).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Convert a value to a Boolean, using the standard ",
        "truth testing\nprocedure",
        ".  If ",
        "x",
        " is false or omitted, this returns ",
        "False",
        ";\notherwise it returns ",
        "True",
        ". ",
        "bool",
        " is also a class, which is a\nsubclass of ",
        "int",
        " (see ",
        "Numeric Types — int, float, complex",
        ").  Class ",
        "bool",
        "\ncannot be subclassed further.  Its only instances are ",
        "False",
        " and\n",
        "True",
        " (see ",
        "Boolean Values",
        ")."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 1329,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytearray:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">bytearray</tt><big>(</big><span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>, <em>encoding</em><span class=\"optional\">[</span>, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#bytearray\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dt#bytearray:nth-of-type(1)",
      "text": [
        "bytearray",
        "(",
        "[",
        "source",
        "[",
        ", ",
        "encoding",
        "[",
        ", ",
        "errors",
        "]",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1358,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new array of bytes.  The <a class=\"reference internal\" href=\"#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a> type is a mutable\nsequence of integers in the range 0 &lt;= x &lt; 256.  It has most of the usual\nmethods of mutable sequences, described in <a class=\"reference internal\" href=\"stdtypes.html#typesseq-mutable\"><em>Mutable Sequence Types</em></a>, as well\nas most methods that the <a class=\"reference internal\" href=\"#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> type has, see <a class=\"reference internal\" href=\"stdtypes.html#bytes-methods\"><em>Bytes and Bytearray Operations</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new array of bytes.  The ",
        "bytearray",
        " type is a mutable\nsequence of integers in the range 0 <= x < 256.  It has most of the usual\nmethods of mutable sequences, described in ",
        "Mutable Sequence Types",
        ", as well\nas most methods that the ",
        "bytes",
        " type has, see ",
        "Bytes and Bytearray Operations",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1418,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The optional <em>source</em> parameter can be used to initialize the array in a few\ndifferent ways:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The optional ",
        "source",
        " parameter can be used to initialize the array in a few\ndifferent ways:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 1456,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "If it is a <em>string</em>, you must also give the <em>encoding</em> (and optionally,\n<em>errors</em>) parameters; <a class=\"reference internal\" href=\"#bytearray\" title=\"bytearray\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bytearray()</span></tt></a> then converts the string to\nbytes using <a class=\"reference internal\" href=\"stdtypes.html#str.encode\" title=\"str.encode\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.encode()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "If it is a ",
        "string",
        ", you must also give the ",
        "encoding",
        " (and optionally,\n",
        "errors",
        ") parameters; ",
        "bytearray()",
        " then converts the string to\nbytes using ",
        "str.encode()",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 1476,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "If it is an <em>integer</em>, the array will have that size and will be\ninitialized with null bytes.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "If it is an ",
        "integer",
        ", the array will have that size and will be\ninitialized with null bytes."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 1496,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "If it is an object conforming to the <em>buffer</em> interface, a read-only buffer\nof the object will be used to initialize the bytes array.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "If it is an object conforming to the ",
        "buffer",
        " interface, a read-only buffer\nof the object will be used to initialize the bytes array."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 1516,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "If it is an <em>iterable</em>, it must be an iterable of integers in the range\n<tt class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">256</span></tt>, which are used as the initial contents of the array.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "If it is an ",
        "iterable",
        ", it must be an iterable of integers in the range\n",
        "0",
        "<=",
        "x",
        "<",
        "256",
        ", which are used as the initial contents of the array."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1546,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Without an argument, an array of size 0 is created.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Without an argument, an array of size 0 is created."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1584,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "See also <a class=\"reference internal\" href=\"stdtypes.html#binaryseq\"><em>Binary Sequence Types — bytes, bytearray, memoryview</em></a> and <a class=\"reference internal\" href=\"stdtypes.html#typebytearray\"><em>Bytearray Objects</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "See also ",
        "Binary Sequence Types — bytes, bytearray, memoryview",
        " and ",
        "Bytearray Objects",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 1622,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytes:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">bytes</tt><big>(</big><span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>, <em>encoding</em><span class=\"optional\">[</span>, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#bytes\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(8) > dt#bytes:nth-of-type(1)",
      "text": [
        "bytes",
        "(",
        "[",
        "source",
        "[",
        ", ",
        "encoding",
        "[",
        ", ",
        "errors",
        "]",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1651,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new “bytes” object, which is an immutable sequence of integers in\nthe range <tt class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">256</span></tt>.  <a class=\"reference internal\" href=\"#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> is an immutable version of\n<a class=\"reference internal\" href=\"#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a> – it has the same non-mutating methods and the same\nindexing and slicing behavior.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new “bytes” object, which is an immutable sequence of integers in\nthe range ",
        "0",
        "<=",
        "x",
        "<",
        "256",
        ".  ",
        "bytes",
        " is an immutable version of\n",
        "bytearray",
        " – it has the same non-mutating methods and the same\nindexing and slicing behavior."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1711,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Accordingly, constructor arguments are interpreted as for <a class=\"reference internal\" href=\"#bytearray\" title=\"bytearray\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bytearray()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Accordingly, constructor arguments are interpreted as for ",
        "bytearray()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1749,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Bytes objects can also be created with literals, see <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#strings\"><em>String and Bytes literals</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Bytes objects can also be created with literals, see ",
        "String and Bytes literals",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1787,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "See also <a class=\"reference internal\" href=\"stdtypes.html#binaryseq\"><em>Binary Sequence Types — bytes, bytearray, memoryview</em></a>, <a class=\"reference internal\" href=\"stdtypes.html#typebytes\"><em>Bytes</em></a>, and <a class=\"reference internal\" href=\"stdtypes.html#bytes-methods\"><em>Bytes and Bytearray Operations</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "See also ",
        "Binary Sequence Types — bytes, bytearray, memoryview",
        ", ",
        "Bytes",
        ", and ",
        "Bytes and Bytearray Operations",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 1825,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#callable:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">callable</tt><big>(</big><em>object</em><big>)</big><a class=\"headerlink\" href=\"#callable\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(9) > dt#callable:nth-of-type(1)",
      "text": [
        "callable",
        "(",
        "object",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1853,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return <a class=\"reference internal\" href=\"constants.html#True\" title=\"True\"><tt class=\"xref py py-const xref docutils literal\"><span class=\"pre\">True</span></tt></a> if the <em>object</em> argument appears callable,\n<a class=\"reference internal\" href=\"constants.html#False\" title=\"False\"><tt class=\"xref py py-const xref docutils literal\"><span class=\"pre\">False</span></tt></a> if not.  If this returns true, it is still possible that a\ncall fails, but if it is false, calling <em>object</em> will never succeed.\nNote that classes are callable (calling a class returns a new instance);\ninstances are callable if their class has a <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__call__\" title=\"object.__call__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__call__()</span></tt></a> method.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return ",
        "True",
        " if the ",
        "object",
        " argument appears callable,\n",
        "False",
        " if not.  If this returns true, it is still possible that a\ncall fails, but if it is false, calling ",
        "object",
        " will never succeed.\nNote that classes are callable (calling a class returns a new instance);\ninstances are callable if their class has a ",
        "__call__()",
        " method."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1913,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2:</span> This function was first removed in Python 3.0 and then brought back\nin Python 3.2.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(9) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.2:",
        " This function was first removed in Python 3.0 and then brought back\nin Python 3.2."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 1951,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#chr:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">chr</tt><big>(</big><em>i</em><big>)</big><a class=\"headerlink\" href=\"#chr\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(10) > dt#chr:nth-of-type(1)",
      "text": [
        "chr",
        "(",
        "i",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1979,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the string representing a character whose Unicode codepoint is the integer\n<em>i</em>.  For example, <tt class=\"docutils literal\"><span class=\"pre\">chr(97)</span></tt> returns the string <tt class=\"docutils literal\"><span class=\"pre\">'a'</span></tt>. This is the\ninverse of <a class=\"reference internal\" href=\"#ord\" title=\"ord\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ord()</span></tt></a>.  The valid range for the argument is from 0 through\n1,114,111 (0x10FFFF in base 16).  <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> will be raised if <em>i</em> is\noutside that range.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the string representing a character whose Unicode codepoint is the integer\n",
        "i",
        ".  For example, ",
        "chr(97)",
        " returns the string ",
        "'a'",
        ". This is the\ninverse of ",
        "ord()",
        ".  The valid range for the argument is from 0 through\n1,114,111 (0x10FFFF in base 16).  ",
        "ValueError",
        " will be raised if ",
        "i",
        " is\noutside that range."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 2039,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#classmethod:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">classmethod</tt><big>(</big><em>function</em><big>)</big><a class=\"headerlink\" href=\"#classmethod\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dt#classmethod:nth-of-type(1)",
      "text": [
        "classmethod",
        "(",
        "function",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2067,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a class method for <em>function</em>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a class method for ",
        "function",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2105,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A class method receives the class as implicit first argument, just like an\ninstance method receives the instance. To declare a class method, use this\nidiom:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "A class method receives the class as implicit first argument, just like an\ninstance method receives the instance. To declare a class method, use this\nidiom:"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 2143,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">cls</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "C",
        ":",
        "@classmethod",
        "def",
        "f",
        "(",
        "cls",
        ",",
        "arg1",
        ",",
        "arg2",
        ",",
        "...",
        "):",
        "..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2224,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <tt class=\"docutils literal\"><span class=\"pre\">@classmethod</span></tt> form is a function <a class=\"reference internal\" href=\"../glossary.html#term-decorator\"><em class=\"xref std std-term\">decorator</em></a> – see the description\nof function definitions in <a class=\"reference internal\" href=\"../reference/compound_stmts.html#function\"><em>Function definitions</em></a> for details.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "@classmethod",
        " form is a function ",
        "decorator",
        " – see the description\nof function definitions in ",
        "Function definitions",
        " for details."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 2262,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "It can be called either on the class (such as <tt class=\"docutils literal\"><span class=\"pre\">C.f()</span></tt>) or on an instance (such\nas <tt class=\"docutils literal\"><span class=\"pre\">C().f()</span></tt>).  The instance is ignored except for its class. If a class\nmethod is called for a derived class, the derived class object is passed as the\nimplied first argument.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "It can be called either on the class (such as ",
        "C.f()",
        ") or on an instance (such\nas ",
        "C().f()",
        ").  The instance is ignored except for its class. If a class\nmethod is called for a derived class, the derived class object is passed as the\nimplied first argument."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2322,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Class methods are different than C++ or Java static methods. If you want those,\nsee <a class=\"reference internal\" href=\"#staticmethod\" title=\"staticmethod\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">staticmethod()</span></tt></a> in this section.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Class methods are different than C++ or Java static methods. If you want those,\nsee ",
        "staticmethod()",
        " in this section."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2360,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "For more information on class methods, consult the documentation on the standard\ntype hierarchy in <a class=\"reference internal\" href=\"../reference/datamodel.html#types\"><em>The standard type hierarchy</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "For more information on class methods, consult the documentation on the standard\ntype hierarchy in ",
        "The standard type hierarchy",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 2398,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#compile:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">compile</tt><big>(</big><em>source</em>, <em>filename</em>, <em>mode</em>, <em>flags=0</em>, <em>dont_inherit=False</em>, <em>optimize=-1</em><big>)</big><a class=\"headerlink\" href=\"#compile\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dt#compile:nth-of-type(1)",
      "text": [
        "compile",
        "(",
        "source",
        ", ",
        "filename",
        ", ",
        "mode",
        ", ",
        "flags=0",
        ", ",
        "dont_inherit=False",
        ", ",
        "optimize=-1",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 2426,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Compile the <em>source</em> into a code or AST object.  Code objects can be executed\nby <a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a> or <a class=\"reference internal\" href=\"#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a>.  <em>source</em> can either be a string or an AST\nobject.  Refer to the <a class=\"reference internal\" href=\"ast.html#module-ast\" title=\"ast: Abstract Syntax Tree classes and manipulation.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">ast</span></tt></a> module documentation for information on how\nto work with AST objects.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Compile the ",
        "source",
        " into a code or AST object.  Code objects can be executed\nby ",
        "exec()",
        " or ",
        "eval()",
        ".  ",
        "source",
        " can either be a string or an AST\nobject.  Refer to the ",
        "ast",
        " module documentation for information on how\nto work with AST objects."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2486,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <em>filename</em> argument should give the file from which the code was read;\npass some recognizable value if it wasn’t read from a file (<tt class=\"docutils literal\"><span class=\"pre\">'&lt;string&gt;'</span></tt> is\ncommonly used).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The ",
        "filename",
        " argument should give the file from which the code was read;\npass some recognizable value if it wasn’t read from a file (",
        "'<string>'",
        " is\ncommonly used)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 2524,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <em>mode</em> argument specifies what kind of code must be compiled; it can be\n<tt class=\"docutils literal\"><span class=\"pre\">'exec'</span></tt> if <em>source</em> consists of a sequence of statements, <tt class=\"docutils literal\"><span class=\"pre\">'eval'</span></tt> if it\nconsists of a single expression, or <tt class=\"docutils literal\"><span class=\"pre\">'single'</span></tt> if it consists of a single\ninteractive statement (in the latter case, expression statements that\nevaluate to something other than <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> will be printed).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "mode",
        " argument specifies what kind of code must be compiled; it can be\n",
        "'exec'",
        " if ",
        "source",
        " consists of a sequence of statements, ",
        "'eval'",
        " if it\nconsists of a single expression, or ",
        "'single'",
        " if it consists of a single\ninteractive statement (in the latter case, expression statements that\nevaluate to something other than ",
        "None",
        " will be printed)."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 2584,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The optional arguments <em>flags</em> and <em>dont_inherit</em> control which future\nstatements (see <span class=\"target\" id=\"index-1\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0236\"><strong>PEP 236</strong></a>) affect the compilation of <em>source</em>.  If neither\nis present (or both are zero) the code is compiled with those future\nstatements that are in effect in the code that is calling compile.  If the\n<em>flags</em> argument is given and <em>dont_inherit</em> is not (or is zero) then the\nfuture statements specified by the <em>flags</em> argument are used in addition to\nthose that would be used anyway. If <em>dont_inherit</em> is a non-zero integer then\nthe <em>flags</em> argument is it – the future statements in effect around the call\nto compile are ignored.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "The optional arguments ",
        "flags",
        " and ",
        "dont_inherit",
        " control which future\nstatements (see ",
        "PEP 236",
        ") affect the compilation of ",
        "source",
        ".  If neither\nis present (or both are zero) the code is compiled with those future\nstatements that are in effect in the code that is calling compile.  If the\n",
        "flags",
        " argument is given and ",
        "dont_inherit",
        " is not (or is zero) then the\nfuture statements specified by the ",
        "flags",
        " argument are used in addition to\nthose that would be used anyway. If ",
        "dont_inherit",
        " is a non-zero integer then\nthe ",
        "flags",
        " argument is it – the future statements in effect around the call\nto compile are ignored."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 2688,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Future statements are specified by bits which can be bitwise ORed together to\nspecify multiple statements.  The bitfield required to specify a given feature\ncan be found as the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">compiler_flag</span></tt> attribute on the <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">_Feature</span></tt>\ninstance in the <a class=\"reference internal\" href=\"__future__.html#module-__future__\" title=\"__future__: Future statement definitions\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">__future__</span></tt></a> module.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Future statements are specified by bits which can be bitwise ORed together to\nspecify multiple statements.  The bitfield required to specify a given feature\ncan be found as the ",
        "compiler_flag",
        " attribute on the ",
        "_Feature",
        "\ninstance in the ",
        "__future__",
        " module."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 2748,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The argument <em>optimize</em> specifies the optimization level of the compiler; the\ndefault value of <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt> selects the optimization level of the interpreter as\ngiven by <a class=\"reference internal\" href=\"../using/cmdline.html#cmdoption-O\"><em class=\"xref std std-option\">-O</em></a> options.  Explicit levels are <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt> (no optimization;\n<tt class=\"docutils literal\"><span class=\"pre\">__debug__</span></tt> is true), <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt> (asserts are removed, <tt class=\"docutils literal\"><span class=\"pre\">__debug__</span></tt> is false)\nor <tt class=\"docutils literal\"><span class=\"pre\">2</span></tt> (docstrings are removed too).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "The argument ",
        "optimize",
        " specifies the optimization level of the compiler; the\ndefault value of ",
        "-1",
        " selects the optimization level of the interpreter as\ngiven by ",
        "-O",
        " options.  Explicit levels are ",
        "0",
        " (no optimization;\n",
        "__debug__",
        " is true), ",
        "1",
        " (asserts are removed, ",
        "__debug__",
        " is false)\nor ",
        "2",
        " (docstrings are removed too)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2808,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "This function raises <a class=\"reference internal\" href=\"exceptions.html#SyntaxError\" title=\"SyntaxError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">SyntaxError</span></tt></a> if the compiled source is invalid,\nand <a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> if the source contains null bytes.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "This function raises ",
        "SyntaxError",
        " if the compiled source is invalid,\nand ",
        "TypeError",
        " if the source contains null bytes."
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 295,
        "top": 2846,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">When compiling a string with multi-line code in <tt class=\"docutils literal\"><span class=\"pre\">'single'</span></tt> or\n<tt class=\"docutils literal\"><span class=\"pre\">'eval'</span></tt> mode, input must be terminated by at least one newline\ncharacter.  This is to facilitate detection of incomplete and complete\nstatements in the <a class=\"reference internal\" href=\"code.html#module-code\" title=\"code: Facilities to implement read-eval-print loops.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">code</span></tt></a> module.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "When compiling a string with multi-line code in ",
        "'single'",
        " or\n",
        "'eval'",
        " mode, input must be terminated by at least one newline\ncharacter.  This is to facilitate detection of incomplete and complete\nstatements in the ",
        "code",
        " module."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2916,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(8)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.2:</span> Allowed use of Windows and Mac newlines.  Also input in <tt class=\"docutils literal\"><span class=\"pre\">'exec'</span></tt> mode\ndoes not have to end in a newline anymore.  Added the <em>optimize</em> parameter.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(12) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(8)",
      "text": [
        "Changed in version 3.2:",
        " Allowed use of Windows and Mac newlines.  Also input in ",
        "'exec'",
        " mode\ndoes not have to end in a newline anymore.  Added the ",
        "optimize",
        " parameter."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 2954,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#complex:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">complex</tt><big>(</big><span class=\"optional\">[</span><em>real</em><span class=\"optional\">[</span>, <em>imag</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#complex\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(13) > dt#complex:nth-of-type(1)",
      "text": [
        "complex",
        "(",
        "[",
        "real",
        "[",
        ", ",
        "imag",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 2983,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Create a complex number with the value <em>real</em> + <em>imag</em>*j or convert a string or\nnumber to a complex number.  If the first parameter is a string, it will be\ninterpreted as a complex number and the function must be called without a second\nparameter.  The second parameter can never be a string. Each argument may be any\nnumeric type (including complex). If <em>imag</em> is omitted, it defaults to zero and\nthe function serves as a numeric conversion function like <a class=\"reference internal\" href=\"#int\" title=\"int\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">int()</span></tt></a>\nand <a class=\"reference internal\" href=\"#float\" title=\"float\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">float()</span></tt></a>.  If both arguments are omitted, returns <tt class=\"docutils literal\"><span class=\"pre\">0j</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(13) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Create a complex number with the value ",
        "real",
        " + ",
        "imag",
        "*j or convert a string or\nnumber to a complex number.  If the first parameter is a string, it will be\ninterpreted as a complex number and the function must be called without a second\nparameter.  The second parameter can never be a string. Each argument may be any\nnumeric type (including complex). If ",
        "imag",
        " is omitted, it defaults to zero and\nthe function serves as a numeric conversion function like ",
        "int()",
        "\nand ",
        "float()",
        ".  If both arguments are omitted, returns ",
        "0j",
        "."
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 295,
        "top": 3087,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">When converting from a string, the string must not contain whitespace\naround the central <tt class=\"docutils literal\"><span class=\"pre\">+</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">-</span></tt> operator.  For example,\n<tt class=\"docutils literal\"><span class=\"pre\">complex('1+2j')</span></tt> is fine, but <tt class=\"docutils literal\"><span class=\"pre\">complex('1</span> <span class=\"pre\">+</span> <span class=\"pre\">2j')</span></tt> raises\n<a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a>.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(13) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "When converting from a string, the string must not contain whitespace\naround the central ",
        "+",
        " or ",
        "-",
        " operator.  For example,\n",
        "complex('1+2j')",
        " is fine, but ",
        "complex('1",
        "+",
        "2j')",
        " raises\n",
        "ValueError",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3157,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The complex type is described in <a class=\"reference internal\" href=\"stdtypes.html#typesnumeric\"><em>Numeric Types — int, float, complex</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(13) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The complex type is described in ",
        "Numeric Types — int, float, complex",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 3195,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#delattr:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">delattr</tt><big>(</big><em>object</em>, <em>name</em><big>)</big><a class=\"headerlink\" href=\"#delattr\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(14) > dt#delattr:nth-of-type(1)",
      "text": [
        "delattr",
        "(",
        "object",
        ", ",
        "name",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 3223,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This is a relative of <a class=\"reference internal\" href=\"#setattr\" title=\"setattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">setattr()</span></tt></a>.  The arguments are an object and a\nstring.  The string must be the name of one of the object’s attributes.  The\nfunction deletes the named attribute, provided the object allows it.  For\nexample, <tt class=\"docutils literal\"><span class=\"pre\">delattr(x,</span> <span class=\"pre\">'foobar')</span></tt> is equivalent to <tt class=\"docutils literal\"><span class=\"pre\">del</span> <span class=\"pre\">x.foobar</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(14) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This is a relative of ",
        "setattr()",
        ".  The arguments are an object and a\nstring.  The string must be the name of one of the object’s attributes.  The\nfunction deletes the named attribute, provided the object allows it.  For\nexample, ",
        "delattr(x,",
        "'foobar')",
        " is equivalent to ",
        "del",
        "x.foobar",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 3283,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">dict</tt><big>(</big><em>**kwarg</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(15) > dt:nth-of-type(1)",
      "text": [
        "dict",
        "(",
        "**kwarg",
        ")"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 3308,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">dict</tt><big>(</big><em>mapping</em>, <em>**kwarg</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(15) > dt:nth-of-type(2)",
      "text": [
        "dict",
        "(",
        "mapping",
        ", ",
        "**kwarg",
        ")"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 3333,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(3)",
      "html": "\n<tt class=\"descname\">dict</tt><big>(</big><em>iterable</em>, <em>**kwarg</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(15) > dt:nth-of-type(3)",
      "text": [
        "dict",
        "(",
        "iterable",
        ", ",
        "**kwarg",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3361,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Create a new dictionary.  The <a class=\"reference internal\" href=\"stdtypes.html#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> object is the dictionary class.\nSee <a class=\"reference internal\" href=\"stdtypes.html#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> and <a class=\"reference internal\" href=\"stdtypes.html#typesmapping\"><em>Mapping Types — dict</em></a> for documentation about this\nclass.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(15) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Create a new dictionary.  The ",
        "dict",
        " object is the dictionary class.\nSee ",
        "dict",
        " and ",
        "Mapping Types — dict",
        " for documentation about this\nclass."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3399,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For other containers see the built-in <a class=\"reference internal\" href=\"stdtypes.html#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a>, <a class=\"reference internal\" href=\"stdtypes.html#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a>, and\n<a class=\"reference internal\" href=\"stdtypes.html#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a> classes, as well as the <a class=\"reference internal\" href=\"collections.html#module-collections\" title=\"collections: Container datatypes\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></tt></a> module.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(15) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For other containers see the built-in ",
        "list",
        ", ",
        "set",
        ", and\n",
        "tuple",
        " classes, as well as the ",
        "collections",
        " module."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 3437,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#dir:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">dir</tt><big>(</big><span class=\"optional\">[</span><em>object</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#dir\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dt#dir:nth-of-type(1)",
      "text": [
        "dir",
        "(",
        "[",
        "object",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3466,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Without arguments, return the list of names in the current local scope.  With an\nargument, attempt to return a list of valid attributes for that object.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Without arguments, return the list of names in the current local scope.  With an\nargument, attempt to return a list of valid attributes for that object."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 3504,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If the object has a method named <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__dir__\" title=\"object.__dir__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__dir__()</span></tt></a>, this method will be called and\nmust return the list of attributes. This allows objects that implement a custom\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__getattr__\" title=\"object.__getattr__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__getattr__()</span></tt></a> or <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__getattribute__\" title=\"object.__getattribute__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__getattribute__()</span></tt></a> function to customize the way\n<a class=\"reference internal\" href=\"#dir\" title=\"dir\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">dir()</span></tt></a> reports their attributes.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If the object has a method named ",
        "__dir__()",
        ", this method will be called and\nmust return the list of attributes. This allows objects that implement a custom\n",
        "__getattr__()",
        " or ",
        "__getattribute__()",
        " function to customize the way\n",
        "dir()",
        " reports their attributes."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 3564,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If the object does not provide <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__dir__\" title=\"object.__dir__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__dir__()</span></tt></a>, the function tries its best to\ngather information from the object’s <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt> attribute, if defined, and\nfrom its type object.  The resulting list is not necessarily complete, and may\nbe inaccurate when the object has a custom <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__getattr__\" title=\"object.__getattr__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__getattr__()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If the object does not provide ",
        "__dir__()",
        ", the function tries its best to\ngather information from the object’s ",
        "__dict__",
        " attribute, if defined, and\nfrom its type object.  The resulting list is not necessarily complete, and may\nbe inaccurate when the object has a custom ",
        "__getattr__()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3624,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The default <a class=\"reference internal\" href=\"#dir\" title=\"dir\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">dir()</span></tt></a> mechanism behaves differently with different types of\nobjects, as it attempts to produce the most relevant, rather than complete,\ninformation:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "The default ",
        "dir()",
        " mechanism behaves differently with different types of\nobjects, as it attempts to produce the most relevant, rather than complete,\ninformation:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 3662,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "If the object is a module object, the list contains the names of the module’s\nattributes.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "If the object is a module object, the list contains the names of the module’s\nattributes."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 3682,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "If the object is a type or class object, the list contains the names of its\nattributes, and recursively of the attributes of its bases.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "If the object is a type or class object, the list contains the names of its\nattributes, and recursively of the attributes of its bases."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 3702,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "Otherwise, the list contains the object’s attributes’ names, the names of its\nclass’s attributes, and recursively of the attributes of its class’s base\nclasses.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "Otherwise, the list contains the object’s attributes’ names, the names of its\nclass’s attributes, and recursively of the attributes of its class’s base\nclasses."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3732,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "The resulting list is sorted alphabetically.  For example:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "The resulting list is sorted alphabetically.  For example:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 3770,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 295,
        "top": 3770,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">struct</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">dir</span><span class=\"p\">()</span>   <span class=\"c\"># show the names in the module namespace</span>\n<span class=\"go\">['__builtins__', '__name__', 'struct']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"n\">struct</span><span class=\"p\">)</span>   <span class=\"c\"># show the names in the struct module </span>\n<span class=\"go\">['Struct', '__all__', '__builtins__', '__cached__', '__doc__', '__file__',</span>\n<span class=\"go\"> '__initializing__', '__loader__', '__name__', '__package__',</span>\n<span class=\"go\"> '_clearcache', 'calcsize', 'error', 'pack', 'pack_into',</span>\n<span class=\"go\"> 'unpack', 'unpack_from']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Shape</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__dir__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"s\">'area'</span><span class=\"p\">,</span> <span class=\"s\">'perimeter'</span><span class=\"p\">,</span> <span class=\"s\">'location'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Shape</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"go\">['area', 'location', 'perimeter']</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "struct",
        ">>> ",
        "dir",
        "()",
        "# show the names in the module namespace",
        "['__builtins__', '__name__', 'struct']",
        ">>> ",
        "dir",
        "(",
        "struct",
        ")",
        "# show the names in the struct module ",
        "['Struct', '__all__', '__builtins__', '__cached__', '__doc__', '__file__',",
        " '__initializing__', '__loader__', '__name__', '__package__',",
        " '_clearcache', 'calcsize', 'error', 'pack', 'pack_into',",
        " 'unpack', 'unpack_from']",
        ">>> ",
        "class",
        "Shape",
        ":",
        "... ",
        "def",
        "__dir__",
        "(",
        "self",
        "):",
        "... ",
        "return",
        "[",
        "'area'",
        ",",
        "'perimeter'",
        ",",
        "'location'",
        "]",
        ">>> ",
        "s",
        "=",
        "Shape",
        "()",
        ">>> ",
        "dir",
        "(",
        "s",
        ")",
        "['area', 'location', 'perimeter']"
      ]
    },
    {
      "bound": {
        "height": 82,
        "left": 295,
        "top": 4049,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(2)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Because <a class=\"reference internal\" href=\"#dir\" title=\"dir\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">dir()</span></tt></a> is supplied primarily as a convenience for use at an\ninteractive prompt, it tries to supply an interesting set of names more\nthan it tries to supply a rigorously or consistently defined set of names,\nand its detailed behavior may change across releases.  For example,\nmetaclass attributes are not in the result list when the argument is a\nclass.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(16) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(2)",
      "text": [
        "Note",
        "Because ",
        "dir()",
        " is supplied primarily as a convenience for use at an\ninteractive prompt, it tries to supply an interesting set of names more\nthan it tries to supply a rigorously or consistently defined set of names,\nand its detailed behavior may change across releases.  For example,\nmetaclass attributes are not in the result list when the argument is a\nclass."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4147,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#divmod:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">divmod</tt><big>(</big><em>a</em>, <em>b</em><big>)</big><a class=\"headerlink\" href=\"#divmod\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(17) > dt#divmod:nth-of-type(1)",
      "text": [
        "divmod",
        "(",
        "a",
        ", ",
        "b",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 4175,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Take two (non complex) numbers as arguments and return a pair of numbers\nconsisting of their quotient and remainder when using integer division.  With\nmixed operand types, the rules for binary arithmetic operators apply.  For\nintegers, the result is the same as <tt class=\"docutils literal\"><span class=\"pre\">(a</span> <span class=\"pre\">//</span> <span class=\"pre\">b,</span> <span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b)</span></tt>. For floating point\nnumbers the result is <tt class=\"docutils literal\"><span class=\"pre\">(q,</span> <span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b)</span></tt>, where <em>q</em> is usually <tt class=\"docutils literal\"><span class=\"pre\">math.floor(a</span> <span class=\"pre\">/</span>\n<span class=\"pre\">b)</span></tt> but may be 1 less than that.  In any case <tt class=\"docutils literal\"><span class=\"pre\">q</span> <span class=\"pre\">*</span> <span class=\"pre\">b</span> <span class=\"pre\">+</span> <span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b</span></tt> is very\nclose to <em>a</em>, if <tt class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b</span></tt> is non-zero it has the same sign as <em>b</em>, and <tt class=\"docutils literal\"><span class=\"pre\">0</span>\n<span class=\"pre\">&lt;=</span> <span class=\"pre\">abs(a</span> <span class=\"pre\">%</span> <span class=\"pre\">b)</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">abs(b)</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(17) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Take two (non complex) numbers as arguments and return a pair of numbers\nconsisting of their quotient and remainder when using integer division.  With\nmixed operand types, the rules for binary arithmetic operators apply.  For\nintegers, the result is the same as ",
        "(a",
        "//",
        "b,",
        "a",
        "%",
        "b)",
        ". For floating point\nnumbers the result is ",
        "(q,",
        "a",
        "%",
        "b)",
        ", where ",
        "q",
        " is usually ",
        "math.floor(a",
        "/",
        "b)",
        " but may be 1 less than that.  In any case ",
        "q",
        "*",
        "b",
        "+",
        "a",
        "%",
        "b",
        " is very\nclose to ",
        "a",
        ", if ",
        "a",
        "%",
        "b",
        " is non-zero it has the same sign as ",
        "b",
        ", and ",
        "0",
        "<=",
        "abs(a",
        "%",
        "b)",
        "<",
        "abs(b)",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4257,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#enumerate:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">enumerate</tt><big>(</big><em>iterable</em>, <em>start=0</em><big>)</big><a class=\"headerlink\" href=\"#enumerate\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(18) > dt#enumerate:nth-of-type(1)",
      "text": [
        "enumerate",
        "(",
        "iterable",
        ", ",
        "start=0",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4285,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an enumerate object. <em>iterable</em> must be a sequence, an\n<a class=\"reference internal\" href=\"../glossary.html#term-iterator\"><em class=\"xref std std-term\">iterator</em></a>, or some other object which supports iteration.\nThe <a class=\"reference internal\" href=\"stdtypes.html#iterator.__next__\" title=\"iterator.__next__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__next__()</span></tt></a> method of the iterator returned by\n<a class=\"reference internal\" href=\"#enumerate\" title=\"enumerate\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">enumerate()</span></tt></a> returns a tuple containing a count (from <em>start</em> which\ndefaults to 0) and the values obtained from iterating over <em>iterable</em>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(18) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an enumerate object. ",
        "iterable",
        " must be a sequence, an\n",
        "iterator",
        ", or some other object which supports iteration.\nThe ",
        "__next__()",
        " method of the iterator returned by\n",
        "enumerate()",
        " returns a tuple containing a count (from ",
        "start",
        " which\ndefaults to 0) and the values obtained from iterating over ",
        "iterable",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 4345,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(18) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 295,
        "top": 4345,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">seasons</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'Spring'</span><span class=\"p\">,</span> <span class=\"s\">'Summer'</span><span class=\"p\">,</span> <span class=\"s\">'Fall'</span><span class=\"p\">,</span> <span class=\"s\">'Winter'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">seasons</span><span class=\"p\">))</span>\n<span class=\"go\">[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">seasons</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"go\">[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(18) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "seasons",
        "=",
        "[",
        "'Spring'",
        ",",
        "'Summer'",
        ",",
        "'Fall'",
        ",",
        "'Winter'",
        "]",
        ">>> ",
        "list",
        "(",
        "enumerate",
        "(",
        "seasons",
        "))",
        "[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]",
        ">>> ",
        "list",
        "(",
        "enumerate",
        "(",
        "seasons",
        ",",
        "start",
        "=",
        "1",
        "))",
        "[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4462,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Equivalent to:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(18) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Equivalent to:"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 295,
        "top": 4500,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">enumerate</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">start</span>\n    <span class=\"k\">for</span> <span class=\"n\">elem</span> <span class=\"ow\">in</span> <span class=\"n\">sequence</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">elem</span>\n        <span class=\"n\">n</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(18) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "enumerate",
        "(",
        "sequence",
        ",",
        "start",
        "=",
        "0",
        "):",
        "n",
        "=",
        "start",
        "for",
        "elem",
        "in",
        "sequence",
        ":",
        "yield",
        "n",
        ",",
        "elem",
        "n",
        "+=",
        "1"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4618,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#eval:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">eval</tt><big>(</big><em>expression</em>, <em>globals=None</em>, <em>locals=None</em><big>)</big><a class=\"headerlink\" href=\"#eval\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dt#eval:nth-of-type(1)",
      "text": [
        "eval",
        "(",
        "expression",
        ", ",
        "globals=None",
        ", ",
        "locals=None",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4646,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The arguments are a string and optional globals and locals.  If provided,\n<em>globals</em> must be a dictionary.  If provided, <em>locals</em> can be any mapping\nobject.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The arguments are a string and optional globals and locals.  If provided,\n",
        "globals",
        " must be a dictionary.  If provided, ",
        "locals",
        " can be any mapping\nobject."
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 295,
        "top": 4684,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <em>expression</em> argument is parsed and evaluated as a Python expression\n(technically speaking, a condition list) using the <em>globals</em> and <em>locals</em>\ndictionaries as global and local namespace.  If the <em>globals</em> dictionary is\npresent and lacks ‘__builtins__’, the current globals are copied into <em>globals</em>\nbefore <em>expression</em> is parsed.  This means that <em>expression</em> normally has full\naccess to the standard <a class=\"reference internal\" href=\"builtins.html#module-builtins\" title=\"builtins: The module that provides the built-in namespace.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">builtins</span></tt></a> module and restricted environments are\npropagated.  If the <em>locals</em> dictionary is omitted it defaults to the <em>globals</em>\ndictionary.  If both dictionaries are omitted, the expression is executed in the\nenvironment where <a class=\"reference internal\" href=\"#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a> is called.  The return value is the result of\nthe evaluated expression. Syntax errors are reported as exceptions.  Example:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The ",
        "expression",
        " argument is parsed and evaluated as a Python expression\n(technically speaking, a condition list) using the ",
        "globals",
        " and ",
        "locals",
        "\ndictionaries as global and local namespace.  If the ",
        "globals",
        " dictionary is\npresent and lacks ‘__builtins__’, the current globals are copied into ",
        "globals",
        "\nbefore ",
        "expression",
        " is parsed.  This means that ",
        "expression",
        " normally has full\naccess to the standard ",
        "builtins",
        " module and restricted environments are\npropagated.  If the ",
        "locals",
        " dictionary is omitted it defaults to the ",
        "globals",
        "\ndictionary.  If both dictionaries are omitted, the expression is executed in the\nenvironment where ",
        "eval()",
        " is called.  The return value is the result of\nthe evaluated expression. Syntax errors are reported as exceptions.  Example:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 4810,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 4810,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"s\">'x+1'</span><span class=\"p\">)</span>\n<span class=\"go\">2</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "x",
        "=",
        "1",
        ">>> ",
        "eval",
        "(",
        "'x+1'",
        ")",
        "2"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4891,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "This function can also be used to execute arbitrary code objects (such as\nthose created by <a class=\"reference internal\" href=\"#compile\" title=\"compile\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></tt></a>).  In this case pass a code object instead\nof a string.  If the code object has been compiled with <tt class=\"docutils literal\"><span class=\"pre\">'exec'</span></tt> as the\n<em>mode</em> argument, <a class=\"reference internal\" href=\"#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a>‘s return value will be <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "This function can also be used to execute arbitrary code objects (such as\nthose created by ",
        "compile()",
        ").  In this case pass a code object instead\nof a string.  If the code object has been compiled with ",
        "'exec'",
        " as the\n",
        "mode",
        " argument, ",
        "eval()",
        "‘s return value will be ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4951,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Hints: dynamic execution of statements is supported by the <a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a>\nfunction.  The <a class=\"reference internal\" href=\"#globals\" title=\"globals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">globals()</span></tt></a> and <a class=\"reference internal\" href=\"#locals\" title=\"locals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></tt></a> functions\nreturns the current global and local dictionary, respectively, which may be\nuseful to pass around for use by <a class=\"reference internal\" href=\"#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a> or <a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Hints: dynamic execution of statements is supported by the ",
        "exec()",
        "\nfunction.  The ",
        "globals()",
        " and ",
        "locals()",
        " functions\nreturns the current global and local dictionary, respectively, which may be\nuseful to pass around for use by ",
        "eval()",
        " or ",
        "exec()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5011,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "See <a class=\"reference internal\" href=\"ast.html#ast.literal_eval\" title=\"ast.literal_eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ast.literal_eval()</span></tt></a> for a function that can safely evaluate strings\nwith expressions containing only literals.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(19) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "See ",
        "ast.literal_eval()",
        " for a function that can safely evaluate strings\nwith expressions containing only literals."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 5049,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#exec:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">exec</tt><big>(</big><em>object</em><span class=\"optional\">[</span>, <em>globals</em><span class=\"optional\">[</span>, <em>locals</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#exec\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(20) > dt#exec:nth-of-type(1)",
      "text": [
        "exec",
        "(",
        "object",
        "[",
        ", ",
        "globals",
        "[",
        ", ",
        "locals",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 5078,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This function supports dynamic execution of Python code. <em>object</em> must be\neither a string or a code object.  If it is a string, the string is parsed as\na suite of Python statements which is then executed (unless a syntax error\noccurs). <a class=\"footnote-reference\" href=\"#id2\" id=\"id1\">[1]</a> If it is a code object, it is simply executed.  In all cases,\nthe code that’s executed is expected to be valid as file input (see the\nsection “File input” in the Reference Manual). Be aware that the\n<a class=\"reference internal\" href=\"../reference/simple_stmts.html#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a> and <a class=\"reference internal\" href=\"../reference/simple_stmts.html#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> statements may not be used outside of\nfunction definitions even within the context of code passed to the\n<a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a> function. The return value is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(20) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This function supports dynamic execution of Python code. ",
        "object",
        " must be\neither a string or a code object.  If it is a string, the string is parsed as\na suite of Python statements which is then executed (unless a syntax error\noccurs). ",
        "[1]",
        " If it is a code object, it is simply executed.  In all cases,\nthe code that’s executed is expected to be valid as file input (see the\nsection “File input” in the Reference Manual). Be aware that the\n",
        "return",
        " and ",
        "yield",
        " statements may not be used outside of\nfunction definitions even within the context of code passed to the\n",
        "exec()",
        " function. The return value is ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 5182,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "In all cases, if the optional parts are omitted, the code is executed in the\ncurrent scope.  If only <em>globals</em> is provided, it must be a dictionary, which\nwill be used for both the global and the local variables.  If <em>globals</em> and\n<em>locals</em> are given, they are used for the global and local variables,\nrespectively.  If provided, <em>locals</em> can be any mapping object.  Remember\nthat at module level, globals and locals are the same dictionary. If exec\ngets two separate objects as <em>globals</em> and <em>locals</em>, the code will be\nexecuted as if it were embedded in a class definition.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(20) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "In all cases, if the optional parts are omitted, the code is executed in the\ncurrent scope.  If only ",
        "globals",
        " is provided, it must be a dictionary, which\nwill be used for both the global and the local variables.  If ",
        "globals",
        " and\n",
        "locals",
        " are given, they are used for the global and local variables,\nrespectively.  If provided, ",
        "locals",
        " can be any mapping object.  Remember\nthat at module level, globals and locals are the same dictionary. If exec\ngets two separate objects as ",
        "globals",
        " and ",
        "locals",
        ", the code will be\nexecuted as if it were embedded in a class definition."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 5286,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If the <em>globals</em> dictionary does not contain a value for the key\n<tt class=\"docutils literal\"><span class=\"pre\">__builtins__</span></tt>, a reference to the dictionary of the built-in module\n<a class=\"reference internal\" href=\"builtins.html#module-builtins\" title=\"builtins: The module that provides the built-in namespace.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">builtins</span></tt></a> is inserted under that key.  That way you can control what\nbuiltins are available to the executed code by inserting your own\n<tt class=\"docutils literal\"><span class=\"pre\">__builtins__</span></tt> dictionary into <em>globals</em> before passing it to <a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(20) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If the ",
        "globals",
        " dictionary does not contain a value for the key\n",
        "__builtins__",
        ", a reference to the dictionary of the built-in module\n",
        "builtins",
        " is inserted under that key.  That way you can control what\nbuiltins are available to the executed code by inserting your own\n",
        "__builtins__",
        " dictionary into ",
        "globals",
        " before passing it to ",
        "exec()",
        "."
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 295,
        "top": 5346,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The built-in functions <a class=\"reference internal\" href=\"#globals\" title=\"globals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">globals()</span></tt></a> and <a class=\"reference internal\" href=\"#locals\" title=\"locals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></tt></a> return the current\nglobal and local dictionary, respectively, which may be useful to pass around\nfor use as the second and third argument to <a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a>.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(20) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "The built-in functions ",
        "globals()",
        " and ",
        "locals()",
        " return the current\nglobal and local dictionary, respectively, which may be useful to pass around\nfor use as the second and third argument to ",
        "exec()",
        "."
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 295,
        "top": 5416,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(2)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The default <em>locals</em> act as described for function <a class=\"reference internal\" href=\"#locals\" title=\"locals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></tt></a> below:\nmodifications to the default <em>locals</em> dictionary should not be attempted.\nPass an explicit <em>locals</em> dictionary if you need to see effects of the\ncode on <em>locals</em> after function <a class=\"reference internal\" href=\"#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a> returns.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(20) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(2)",
      "text": [
        "Note",
        "The default ",
        "locals",
        " act as described for function ",
        "locals()",
        " below:\nmodifications to the default ",
        "locals",
        " dictionary should not be attempted.\nPass an explicit ",
        "locals",
        " dictionary if you need to see effects of the\ncode on ",
        "locals",
        " after function ",
        "exec()",
        " returns."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 5492,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#filter:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">filter</tt><big>(</big><em>function</em>, <em>iterable</em><big>)</big><a class=\"headerlink\" href=\"#filter\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(21) > dt#filter:nth-of-type(1)",
      "text": [
        "filter",
        "(",
        "function",
        ", ",
        "iterable",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 5520,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Construct an iterator from those elements of <em>iterable</em> for which <em>function</em>\nreturns true.  <em>iterable</em> may be either a sequence, a container which\nsupports iteration, or an iterator.  If <em>function</em> is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, the identity\nfunction is assumed, that is, all elements of <em>iterable</em> that are false are\nremoved.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(21) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Construct an iterator from those elements of ",
        "iterable",
        " for which ",
        "function",
        "\nreturns true.  ",
        "iterable",
        " may be either a sequence, a container which\nsupports iteration, or an iterator.  If ",
        "function",
        " is ",
        "None",
        ", the identity\nfunction is assumed, that is, all elements of ",
        "iterable",
        " that are false are\nremoved."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 5580,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Note that <tt class=\"docutils literal\"><span class=\"pre\">filter(function,</span> <span class=\"pre\">iterable)</span></tt> is equivalent to the generator\nexpression <tt class=\"docutils literal\"><span class=\"pre\">(item</span> <span class=\"pre\">for</span> <span class=\"pre\">item</span> <span class=\"pre\">in</span> <span class=\"pre\">iterable</span> <span class=\"pre\">if</span> <span class=\"pre\">function(item))</span></tt> if function is\nnot <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">(item</span> <span class=\"pre\">for</span> <span class=\"pre\">item</span> <span class=\"pre\">in</span> <span class=\"pre\">iterable</span> <span class=\"pre\">if</span> <span class=\"pre\">item)</span></tt> if function is\n<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(21) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Note that ",
        "filter(function,",
        "iterable)",
        " is equivalent to the generator\nexpression ",
        "(item",
        "for",
        "item",
        "in",
        "iterable",
        "if",
        "function(item))",
        " if function is\nnot ",
        "None",
        " and ",
        "(item",
        "for",
        "item",
        "in",
        "iterable",
        "if",
        "item)",
        " if function is\n",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5640,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "See <a class=\"reference internal\" href=\"itertools.html#itertools.filterfalse\" title=\"itertools.filterfalse\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.filterfalse()</span></tt></a> for the complementary function that returns\nelements of <em>iterable</em> for which <em>function</em> returns false.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(21) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "See ",
        "itertools.filterfalse()",
        " for the complementary function that returns\nelements of ",
        "iterable",
        " for which ",
        "function",
        " returns false."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 5678,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#float:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">float</tt><big>(</big><span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#float\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dt#float:nth-of-type(1)",
      "text": [
        "float",
        "(",
        "[",
        "x",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5707,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-2:nth-of-type(1)",
      "html": "Convert a string or a number to floating point.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p#index-2:nth-of-type(1)",
      "text": [
        "Convert a string or a number to floating point."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 5745,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If the argument is a string, it should contain a decimal number, optionally\npreceded by a sign, and optionally embedded in whitespace.  The optional\nsign may be <tt class=\"docutils literal\"><span class=\"pre\">'+'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'-'</span></tt>; a <tt class=\"docutils literal\"><span class=\"pre\">'+'</span></tt> sign has no effect on the value\nproduced.  The argument may also be a string representing a NaN\n(not-a-number), or a positive or negative infinity.  More precisely, the\ninput must conform to the following grammar after leading and trailing\nwhitespace characters are removed:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If the argument is a string, it should contain a decimal number, optionally\npreceded by a sign, and optionally embedded in whitespace.  The optional\nsign may be ",
        "'+'",
        " or ",
        "'-'",
        "; a ",
        "'+'",
        " sign has no effect on the value\nproduced.  The argument may also be a string representing a NaN\n(not-a-number), or a positive or negative infinity.  More precisely, the\ninput must conform to the following grammar after leading and trailing\nwhitespace characters are removed:"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 295,
        "top": 5827,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-sign\">sign          </strong> ::=  \"+\" | \"-\"\n<strong id=\"grammar-token-infinity\">infinity      </strong> ::=  \"Infinity\" | \"inf\"\n<strong id=\"grammar-token-nan\">nan           </strong> ::=  \"nan\"\n<strong id=\"grammar-token-numeric_value\">numeric_value </strong> ::=  <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#grammar-token-floatnumber\"><tt class=\"xref docutils literal\"><span class=\"pre\">floatnumber</span></tt></a> | <a class=\"reference internal\" href=\"#grammar-token-infinity\"><tt class=\"xref docutils literal\"><span class=\"pre\">infinity</span></tt></a> | <a class=\"reference internal\" href=\"#grammar-token-nan\"><tt class=\"xref docutils literal\"><span class=\"pre\">nan</span></tt></a>\n<strong id=\"grammar-token-numeric_string\">numeric_string</strong> ::=  [<a class=\"reference internal\" href=\"string.html#grammar-token-sign\"><tt class=\"xref docutils literal\"><span class=\"pre\">sign</span></tt></a>] <a class=\"reference internal\" href=\"#grammar-token-numeric_value\"><tt class=\"xref docutils literal\"><span class=\"pre\">numeric_value</span></tt></a>\n",
      "path": "div > div > div > div > div > dl > dd > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "sign          ",
        " ::=  \"+\" | \"-\"\n",
        "infinity      ",
        " ::=  \"Infinity\" | \"inf\"\n",
        "nan           ",
        " ::=  \"nan\"\n",
        "numeric_value ",
        " ::=  ",
        "floatnumber",
        " | ",
        "infinity",
        " | ",
        "nan",
        "numeric_string",
        " ::=  [",
        "sign",
        "] ",
        "numeric_value"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 5944,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Here <tt class=\"docutils literal\"><span class=\"pre\">floatnumber</span></tt> is the form of a Python floating-point literal,\ndescribed in <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#floating\"><em>Floating point literals</em></a>.  Case is not significant, so, for example,\n“inf”, “Inf”, “INFINITY” and “iNfINity” are all acceptable spellings for\npositive infinity.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Here ",
        "floatnumber",
        " is the form of a Python floating-point literal,\ndescribed in ",
        "Floating point literals",
        ".  Case is not significant, so, for example,\n“inf”, “Inf”, “INFINITY” and “iNfINity” are all acceptable spellings for\npositive infinity."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 6004,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Otherwise, if the argument is an integer or a floating point number, a\nfloating point number with the same value (within Python’s floating point\nprecision) is returned.  If the argument is outside the range of a Python\nfloat, an <a class=\"reference internal\" href=\"exceptions.html#OverflowError\" title=\"OverflowError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></tt></a> will be raised.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Otherwise, if the argument is an integer or a floating point number, a\nfloating point number with the same value (within Python’s floating point\nprecision) is returned.  If the argument is outside the range of a Python\nfloat, an ",
        "OverflowError",
        " will be raised."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 6064,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "For a general Python object <tt class=\"docutils literal\"><span class=\"pre\">x</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">float(x)</span></tt> delegates to\n<tt class=\"docutils literal\"><span class=\"pre\">x.__float__()</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "For a general Python object ",
        "x",
        ", ",
        "float(x)",
        " delegates to\n",
        "x.__float__()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 6102,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "If no argument is given, <tt class=\"docutils literal\"><span class=\"pre\">0.0</span></tt> is returned.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "If no argument is given, ",
        "0.0",
        " is returned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 6140,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Examples:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "Examples:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 6178,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 295,
        "top": 6178,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s\">'+1.23'</span><span class=\"p\">)</span>\n<span class=\"go\">1.23</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s\">'   -12345</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">)</span>\n<span class=\"go\">-12345.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s\">'1e-003'</span><span class=\"p\">)</span>\n<span class=\"go\">0.001</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s\">'+1E6'</span><span class=\"p\">)</span>\n<span class=\"go\">1000000.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s\">'-Infinity'</span><span class=\"p\">)</span>\n<span class=\"go\">-inf</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "float",
        "(",
        "'+1.23'",
        ")",
        "1.23",
        ">>> ",
        "float",
        "(",
        "'   -12345",
        "\\n",
        "'",
        ")",
        "-12345.0",
        ">>> ",
        "float",
        "(",
        "'1e-003'",
        ")",
        "0.001",
        ">>> ",
        "float",
        "(",
        "'+1E6'",
        ")",
        "1000000.0",
        ">>> ",
        "float",
        "(",
        "'-Infinity'",
        ")",
        "-inf"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 6385,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "The float type is described in <a class=\"reference internal\" href=\"stdtypes.html#typesnumeric\"><em>Numeric Types — int, float, complex</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "The float type is described in ",
        "Numeric Types — int, float, complex",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 6423,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#format:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">format</tt><big>(</big><em>value</em><span class=\"optional\">[</span>, <em>format_spec</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#format\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(23) > dt#format:nth-of-type(1)",
      "text": [
        "format",
        "(",
        "value",
        "[",
        ", ",
        "format_spec",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 6452,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Convert a <em>value</em> to a “formatted” representation, as controlled by\n<em>format_spec</em>.  The interpretation of <em>format_spec</em> will depend on the type\nof the <em>value</em> argument, however there is a standard formatting syntax that\nis used by most built-in types: <a class=\"reference internal\" href=\"string.html#formatspec\"><em>Format Specification Mini-Language</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(23) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Convert a ",
        "value",
        " to a “formatted” representation, as controlled by\n",
        "format_spec",
        ".  The interpretation of ",
        "format_spec",
        " will depend on the type\nof the ",
        "value",
        " argument, however there is a standard formatting syntax that\nis used by most built-in types: ",
        "Format Specification Mini-Language",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 6512,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The default <em>format_spec</em> is an empty string which usually gives the same\neffect as calling <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str(value)</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(23) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The default ",
        "format_spec",
        " is an empty string which usually gives the same\neffect as calling ",
        "str(value)",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 6550,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "A call to <tt class=\"docutils literal\"><span class=\"pre\">format(value,</span> <span class=\"pre\">format_spec)</span></tt> is translated to\n<tt class=\"docutils literal\"><span class=\"pre\">type(value).__format__(format_spec)</span></tt> which bypasses the instance\ndictionary when searching for the value’s <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__format__\" title=\"object.__format__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__format__()</span></tt></a> method.  A\n<a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> exception is raised if the method is not found or if either\nthe <em>format_spec</em> or the return value are not strings.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(23) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "A call to ",
        "format(value,",
        "format_spec)",
        " is translated to\n",
        "type(value).__format__(format_spec)",
        " which bypasses the instance\ndictionary when searching for the value’s ",
        "__format__()",
        " method.  A\n",
        "TypeError",
        " exception is raised if the method is not found or if either\nthe ",
        "format_spec",
        " or the return value are not strings."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 6610,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">frozenset</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(24) > dt:nth-of-type(1)",
      "text": [
        "frozenset",
        "(",
        "[",
        "iterable",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 6639,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new <a class=\"reference internal\" href=\"stdtypes.html#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a> object, optionally with elements taken from\n<em>iterable</em>.  <tt class=\"docutils literal\"><span class=\"pre\">frozenset</span></tt> is a built-in class.  See <a class=\"reference internal\" href=\"stdtypes.html#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a> and\n<a class=\"reference internal\" href=\"stdtypes.html#types-set\"><em>Set Types — set, frozenset</em></a> for documentation about this class.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(24) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new ",
        "frozenset",
        " object, optionally with elements taken from\n",
        "iterable",
        ".  ",
        "frozenset",
        " is a built-in class.  See ",
        "frozenset",
        " and\n",
        "Set Types — set, frozenset",
        " for documentation about this class."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 6699,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For other containers see the built-in <a class=\"reference internal\" href=\"stdtypes.html#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a>, <a class=\"reference internal\" href=\"stdtypes.html#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a>,\n<a class=\"reference internal\" href=\"stdtypes.html#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a>, and <a class=\"reference internal\" href=\"stdtypes.html#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> classes, as well as the <a class=\"reference internal\" href=\"collections.html#module-collections\" title=\"collections: Container datatypes\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></tt></a>\nmodule.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(24) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For other containers see the built-in ",
        "set",
        ", ",
        "list",
        ",\n",
        "tuple",
        ", and ",
        "dict",
        " classes, as well as the ",
        "collections",
        "\nmodule."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 6737,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#getattr:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">getattr</tt><big>(</big><em>object</em>, <em>name</em><span class=\"optional\">[</span>, <em>default</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#getattr\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(25) > dt#getattr:nth-of-type(1)",
      "text": [
        "getattr",
        "(",
        "object",
        ", ",
        "name",
        "[",
        ", ",
        "default",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 6766,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the value of the named attribute of <em>object</em>.  <em>name</em> must be a string.\nIf the string is the name of one of the object’s attributes, the result is the\nvalue of that attribute.  For example, <tt class=\"docutils literal\"><span class=\"pre\">getattr(x,</span> <span class=\"pre\">'foobar')</span></tt> is equivalent to\n<tt class=\"docutils literal\"><span class=\"pre\">x.foobar</span></tt>.  If the named attribute does not exist, <em>default</em> is returned if\nprovided, otherwise <a class=\"reference internal\" href=\"exceptions.html#AttributeError\" title=\"AttributeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">AttributeError</span></tt></a> is raised.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(25) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the value of the named attribute of ",
        "object",
        ".  ",
        "name",
        " must be a string.\nIf the string is the name of one of the object’s attributes, the result is the\nvalue of that attribute.  For example, ",
        "getattr(x,",
        "'foobar')",
        " is equivalent to\n",
        "x.foobar",
        ".  If the named attribute does not exist, ",
        "default",
        " is returned if\nprovided, otherwise ",
        "AttributeError",
        " is raised."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 6826,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#globals:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">globals</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#globals\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(26) > dt#globals:nth-of-type(1)",
      "text": [
        "globals",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 6854,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a dictionary representing the current global symbol table. This is always\nthe dictionary of the current module (inside a function or method, this is the\nmodule where it is defined, not the module from which it is called).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(26) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a dictionary representing the current global symbol table. This is always\nthe dictionary of the current module (inside a function or method, this is the\nmodule where it is defined, not the module from which it is called)."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 6914,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#hasattr:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">hasattr</tt><big>(</big><em>object</em>, <em>name</em><big>)</big><a class=\"headerlink\" href=\"#hasattr\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(27) > dt#hasattr:nth-of-type(1)",
      "text": [
        "hasattr",
        "(",
        "object",
        ", ",
        "name",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 6942,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The arguments are an object and a string.  The result is <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> if the\nstring is the name of one of the object’s attributes, <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> if not. (This\nis implemented by calling <tt class=\"docutils literal\"><span class=\"pre\">getattr(object,</span> <span class=\"pre\">name)</span></tt> and seeing whether it\nraises an <a class=\"reference internal\" href=\"exceptions.html#AttributeError\" title=\"AttributeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">AttributeError</span></tt></a> or not.)",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(27) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The arguments are an object and a string.  The result is ",
        "True",
        " if the\nstring is the name of one of the object’s attributes, ",
        "False",
        " if not. (This\nis implemented by calling ",
        "getattr(object,",
        "name)",
        " and seeing whether it\nraises an ",
        "AttributeError",
        " or not.)"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 7002,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#hash:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">hash</tt><big>(</big><em>object</em><big>)</big><a class=\"headerlink\" href=\"#hash\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(28) > dt#hash:nth-of-type(1)",
      "text": [
        "hash",
        "(",
        "object",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 335,
        "top": 7043,
        "width": 1209
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "div:nth-of-type(1)",
      "html": "Return the hash value of the object (if it has one).  Hash values are\nintegers.  They are used to quickly compare dictionary keys during a\ndictionary lookup.  Numeric values that compare equal have the same hash\nvalue (even if they are of different types, as is the case for 1 and 1.0).",
      "path": "div > div > div > div > div > dl > dd > blockquote > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(28) > dd:nth-of-type(1) > blockquote:nth-of-type(1) > div:nth-of-type(1)",
      "text": [
        "Return the hash value of the object (if it has one).  Hash values are\nintegers.  They are used to quickly compare dictionary keys during a\ndictionary lookup.  Numeric values that compare equal have the same hash\nvalue (even if they are of different types, as is the case for 1 and 1.0)."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 295,
        "top": 7099,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">For object’s with custom <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__hash__\" title=\"object.__hash__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__hash__()</span></tt></a> methods, note that <a class=\"reference internal\" href=\"#hash\" title=\"hash\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">hash()</span></tt></a>\ntruncates the return value based on the bit width of the host machine.\nSee <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__hash__\" title=\"object.__hash__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__hash__()</span></tt></a> for details.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(28) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "For object’s with custom ",
        "__hash__()",
        " methods, note that ",
        "hash()",
        "\ntruncates the return value based on the bit width of the host machine.\nSee ",
        "__hash__()",
        " for details."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 7153,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#help:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">help</tt><big>(</big><span class=\"optional\">[</span><em>object</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#help\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(29) > dt#help:nth-of-type(1)",
      "text": [
        "help",
        "(",
        "[",
        "object",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 7182,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Invoke the built-in help system.  (This function is intended for interactive\nuse.)  If no argument is given, the interactive help system starts on the\ninterpreter console.  If the argument is a string, then the string is looked up\nas the name of a module, function, class, method, keyword, or documentation\ntopic, and a help page is printed on the console.  If the argument is any other\nkind of object, a help page on the object is generated.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(29) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Invoke the built-in help system.  (This function is intended for interactive\nuse.)  If no argument is given, the interactive help system starts on the\ninterpreter console.  If the argument is a string, then the string is looked up\nas the name of a module, function, class, method, keyword, or documentation\ntopic, and a help page is printed on the console.  If the argument is any other\nkind of object, a help page on the object is generated."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 7264,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "This function is added to the built-in namespace by the <a class=\"reference internal\" href=\"site.html#module-site\" title=\"site: Module responsible for site-specific configuration.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">site</span></tt></a> module.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(29) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "This function is added to the built-in namespace by the ",
        "site",
        " module."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 7302,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#hex:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">hex</tt><big>(</big><em>x</em><big>)</big><a class=\"headerlink\" href=\"#hex\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(30) > dt#hex:nth-of-type(1)",
      "text": [
        "hex",
        "(",
        "x",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 7330,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Convert an integer number to a hexadecimal string. The result is a valid Python\nexpression.  If <em>x</em> is not a Python <a class=\"reference internal\" href=\"#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> object, it has to define an\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__index__\" title=\"object.__index__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__index__()</span></tt></a> method that returns an integer.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(30) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Convert an integer number to a hexadecimal string. The result is a valid Python\nexpression.  If ",
        "x",
        " is not a Python ",
        "int",
        " object, it has to define an\n",
        "__index__()",
        " method that returns an integer."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 295,
        "top": 7390,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">To obtain a hexadecimal string representation for a float, use the\n<a class=\"reference internal\" href=\"stdtypes.html#float.hex\" title=\"float.hex\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">float.hex()</span></tt></a> method.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(30) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "To obtain a hexadecimal string representation for a float, use the\n",
        "float.hex()",
        " method."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 7444,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#id:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">id</tt><big>(</big><em>object</em><big>)</big><a class=\"headerlink\" href=\"#id\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(31) > dt#id:nth-of-type(1)",
      "text": [
        "id",
        "(",
        "object",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 7472,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the “identity” of an object.  This is an integer which\nis guaranteed to be unique and constant for this object during its lifetime.\nTwo objects with non-overlapping lifetimes may have the same <a class=\"reference internal\" href=\"#id\" title=\"id\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">id()</span></tt></a>\nvalue.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(31) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the “identity” of an object.  This is an integer which\nis guaranteed to be unique and constant for this object during its lifetime.\nTwo objects with non-overlapping lifetimes may have the same ",
        "id()",
        "\nvalue."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 303,
        "top": 7540,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<strong>CPython implementation detail:</strong> This is the address of the object in memory.",
      "path": "div > div > div > div > div > dl > dd > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(31) > dd:nth-of-type(1) > div.compound.impl-detail:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "CPython implementation detail:",
        " This is the address of the object in memory."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 7586,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#input:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">input</tt><big>(</big><span class=\"optional\">[</span><em>prompt</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#input\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(32) > dt#input:nth-of-type(1)",
      "text": [
        "input",
        "(",
        "[",
        "prompt",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 7615,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "If the <em>prompt</em> argument is present, it is written to standard output without\na trailing newline.  The function then reads a line from input, converts it\nto a string (stripping a trailing newline), and returns that.  When EOF is\nread, <a class=\"reference internal\" href=\"exceptions.html#EOFError\" title=\"EOFError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">EOFError</span></tt></a> is raised.  Example:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(32) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "If the ",
        "prompt",
        " argument is present, it is written to standard output without\na trailing newline.  The function then reads a line from input, converts it\nto a string (stripping a trailing newline), and returns that.  When EOF is\nread, ",
        "EOFError",
        " is raised.  Example:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 7675,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(32) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 7675,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">'--&gt; '</span><span class=\"p\">)</span>  \n<span class=\"go\">--&gt; Monty Python's Flying Circus</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span>  \n<span class=\"go\">\"Monty Python's Flying Circus\"</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(32) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s",
        "=",
        "input",
        "(",
        "'--> '",
        ")",
        "--> Monty Python's Flying Circus",
        ">>> ",
        "s",
        "\"Monty Python's Flying Circus\""
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 7774,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If the <a class=\"reference internal\" href=\"readline.html#module-readline\" title=\"readline: GNU readline support for Python. (Unix)\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">readline</span></tt></a> module was loaded, then <a class=\"reference internal\" href=\"#input\" title=\"input\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">input()</span></tt></a> will use it\nto provide elaborate line editing and history features.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(32) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If the ",
        "readline",
        " module was loaded, then ",
        "input()",
        " will use it\nto provide elaborate line editing and history features."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 7812,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#int:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">int</tt><big>(</big><em>x=0</em><big>)</big><a class=\"headerlink\" href=\"#int\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(33) > dt#int:nth-of-type(1)",
      "text": [
        "int",
        "(",
        "x=0",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 7837,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">int</tt><big>(</big><em>x</em>, <em>base=10</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(33) > dt:nth-of-type(2)",
      "text": [
        "int",
        "(",
        "x",
        ", ",
        "base=10",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 7865,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Convert a number or string <em>x</em> to an integer, or return <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt> if no\narguments are given.  If <em>x</em> is a number, return <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__int__\" title=\"object.__int__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">x.__int__()</span></tt></a>.  For floating point numbers, this truncates towards zero.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(33) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Convert a number or string ",
        "x",
        " to an integer, or return ",
        "0",
        " if no\narguments are given.  If ",
        "x",
        " is a number, return ",
        "x.__int__()",
        ".  For floating point numbers, this truncates towards zero."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 7903,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If <em>x</em> is not a number or if <em>base</em> is given, then <em>x</em> must be a string,\n<a class=\"reference internal\" href=\"#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a>, or <a class=\"reference internal\" href=\"#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a> instance representing an <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#integers\"><em>integer\nliteral</em></a> in radix <em>base</em>.  Optionally, the literal can be\npreceded by <tt class=\"docutils literal\"><span class=\"pre\">+</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">-</span></tt> (with no space in between) and surrounded by\nwhitespace.  A base-n literal consists of the digits 0 to n-1, with <tt class=\"docutils literal\"><span class=\"pre\">a</span></tt>\nto <tt class=\"docutils literal\"><span class=\"pre\">z</span></tt> (or <tt class=\"docutils literal\"><span class=\"pre\">A</span></tt> to <tt class=\"docutils literal\"><span class=\"pre\">Z</span></tt>) having\nvalues 10 to 35.  The default <em>base</em> is 10. The allowed values are 0 and 2-36.\nBase-2, -8, and -16 literals can be optionally prefixed with <tt class=\"docutils literal\"><span class=\"pre\">0b</span></tt>/<tt class=\"docutils literal\"><span class=\"pre\">0B</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">0o</span></tt>/<tt class=\"docutils literal\"><span class=\"pre\">0O</span></tt>, or <tt class=\"docutils literal\"><span class=\"pre\">0x</span></tt>/<tt class=\"docutils literal\"><span class=\"pre\">0X</span></tt>, as with integer literals in code.  Base 0\nmeans to interpret exactly as a code literal, so that the actual base is 2,\n8, 10, or 16, and so that <tt class=\"docutils literal\"><span class=\"pre\">int('010',</span> <span class=\"pre\">0)</span></tt> is not legal, while\n<tt class=\"docutils literal\"><span class=\"pre\">int('010')</span></tt> is, as well as <tt class=\"docutils literal\"><span class=\"pre\">int('010',</span> <span class=\"pre\">8)</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(33) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If ",
        "x",
        " is not a number or if ",
        "base",
        " is given, then ",
        "x",
        " must be a string,\n",
        "bytes",
        ", or ",
        "bytearray",
        " instance representing an ",
        "integer\nliteral",
        " in radix ",
        "base",
        ".  Optionally, the literal can be\npreceded by ",
        "+",
        " or ",
        "-",
        " (with no space in between) and surrounded by\nwhitespace.  A base-n literal consists of the digits 0 to n-1, with ",
        "a",
        "\nto ",
        "z",
        " (or ",
        "A",
        " to ",
        "Z",
        ") having\nvalues 10 to 35.  The default ",
        "base",
        " is 10. The allowed values are 0 and 2-36.\nBase-2, -8, and -16 literals can be optionally prefixed with ",
        "0b",
        "/",
        "0B",
        ",\n",
        "0o",
        "/",
        "0O",
        ", or ",
        "0x",
        "/",
        "0X",
        ", as with integer literals in code.  Base 0\nmeans to interpret exactly as a code literal, so that the actual base is 2,\n8, 10, or 16, and so that ",
        "int('010',",
        "0)",
        " is not legal, while\n",
        "int('010')",
        " is, as well as ",
        "int('010',",
        "8)",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8007,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The integer type is described in <a class=\"reference internal\" href=\"stdtypes.html#typesnumeric\"><em>Numeric Types — int, float, complex</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(33) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The integer type is described in ",
        "Numeric Types — int, float, complex",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8045,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#isinstance:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">isinstance</tt><big>(</big><em>object</em>, <em>classinfo</em><big>)</big><a class=\"headerlink\" href=\"#isinstance\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(34) > dt#isinstance:nth-of-type(1)",
      "text": [
        "isinstance",
        "(",
        "object",
        ", ",
        "classinfo",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 8073,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if the <em>object</em> argument is an instance of the <em>classinfo</em>\nargument, or of a (direct, indirect or <a class=\"reference internal\" href=\"../glossary.html#term-abstract-base-class\"><em class=\"xref std std-term\">virtual</em></a>) subclass thereof.  If <em>object</em> is not\nan object of the given type, the function always returns false.  If\n<em>classinfo</em> is not a class (type object), it may be a tuple of type objects,\nor may recursively contain other such tuples (other sequence types are not\naccepted).  If <em>classinfo</em> is not a type or tuple of types and such tuples,\na <a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> exception is raised.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(34) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if the ",
        "object",
        " argument is an instance of the ",
        "classinfo",
        "\nargument, or of a (direct, indirect or ",
        "virtual",
        ") subclass thereof.  If ",
        "object",
        " is not\nan object of the given type, the function always returns false.  If\n",
        "classinfo",
        " is not a class (type object), it may be a tuple of type objects,\nor may recursively contain other such tuples (other sequence types are not\naccepted).  If ",
        "classinfo",
        " is not a type or tuple of types and such tuples,\na ",
        "TypeError",
        " exception is raised."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8155,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#issubclass:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">issubclass</tt><big>(</big><em>class</em>, <em>classinfo</em><big>)</big><a class=\"headerlink\" href=\"#issubclass\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(35) > dt#issubclass:nth-of-type(1)",
      "text": [
        "issubclass",
        "(",
        "class",
        ", ",
        "classinfo",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 8183,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if <em>class</em> is a subclass (direct, indirect or <a class=\"reference internal\" href=\"../glossary.html#term-abstract-base-class\"><em class=\"xref std std-term\">virtual</em></a>) of <em>classinfo</em>.  A\nclass is considered a subclass of itself. <em>classinfo</em> may be a tuple of class\nobjects, in which case every entry in <em>classinfo</em> will be checked. In any other\ncase, a <a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> exception is raised.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(35) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if ",
        "class",
        " is a subclass (direct, indirect or ",
        "virtual",
        ") of ",
        "classinfo",
        ".  A\nclass is considered a subclass of itself. ",
        "classinfo",
        " may be a tuple of class\nobjects, in which case every entry in ",
        "classinfo",
        " will be checked. In any other\ncase, a ",
        "TypeError",
        " exception is raised."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 8243,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#iter:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">iter</tt><big>(</big><em>object</em><span class=\"optional\">[</span>, <em>sentinel</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#iter\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(36) > dt#iter:nth-of-type(1)",
      "text": [
        "iter",
        "(",
        "object",
        "[",
        ", ",
        "sentinel",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 295,
        "top": 8272,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an <a class=\"reference internal\" href=\"../glossary.html#term-iterator\"><em class=\"xref std std-term\">iterator</em></a> object.  The first argument is interpreted very\ndifferently depending on the presence of the second argument. Without a\nsecond argument, <em>object</em> must be a collection object which supports the\niteration protocol (the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__iter__\" title=\"object.__iter__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__iter__()</span></tt></a> method), or it must support the\nsequence protocol (the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__getitem__\" title=\"object.__getitem__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__getitem__()</span></tt></a> method with integer arguments\nstarting at <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>).  If it does not support either of those protocols,\n<a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> is raised. If the second argument, <em>sentinel</em>, is given,\nthen <em>object</em> must be a callable object.  The iterator created in this case\nwill call <em>object</em> with no arguments for each call to its\n<a class=\"reference internal\" href=\"stdtypes.html#iterator.__next__\" title=\"iterator.__next__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__next__()</span></tt></a> method; if the value returned is equal to\n<em>sentinel</em>, <a class=\"reference internal\" href=\"exceptions.html#StopIteration\" title=\"StopIteration\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></tt></a> will be raised, otherwise the value will\nbe returned.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(36) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an ",
        "iterator",
        " object.  The first argument is interpreted very\ndifferently depending on the presence of the second argument. Without a\nsecond argument, ",
        "object",
        " must be a collection object which supports the\niteration protocol (the ",
        "__iter__()",
        " method), or it must support the\nsequence protocol (the ",
        "__getitem__()",
        " method with integer arguments\nstarting at ",
        "0",
        ").  If it does not support either of those protocols,\n",
        "TypeError",
        " is raised. If the second argument, ",
        "sentinel",
        ", is given,\nthen ",
        "object",
        " must be a callable object.  The iterator created in this case\nwill call ",
        "object",
        " with no arguments for each call to its\n",
        "__next__()",
        " method; if the value returned is equal to\n",
        "sentinel",
        ", ",
        "StopIteration",
        " will be raised, otherwise the value will\nbe returned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8398,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "See also <a class=\"reference internal\" href=\"stdtypes.html#typeiter\"><em>Iterator Types</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(36) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "See also ",
        "Iterator Types",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 8436,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "One useful application of the second form of <a class=\"reference internal\" href=\"#iter\" title=\"iter\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">iter()</span></tt></a> is to read lines of\na file until a certain line is reached.  The following example reads a file\nuntil the <a class=\"reference internal\" href=\"readline.html#module-readline\" title=\"readline: GNU readline support for Python. (Unix)\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">readline()</span></tt></a> method returns an empty string:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(36) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "One useful application of the second form of ",
        "iter()",
        " is to read lines of\na file until a certain line is reached.  The following example reads a file\nuntil the ",
        "readline()",
        " method returns an empty string:"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 8496,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'mydata.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">readline</span><span class=\"p\">,</span> <span class=\"s\">''</span><span class=\"p\">):</span>\n        <span class=\"n\">process_line</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(36) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "with",
        "open",
        "(",
        "'mydata.txt'",
        ")",
        "as",
        "fp",
        ":",
        "for",
        "line",
        "in",
        "iter",
        "(",
        "fp",
        ".",
        "readline",
        ",",
        "''",
        "):",
        "process_line",
        "(",
        "line",
        ")"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8578,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#len:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">len</tt><big>(</big><em>s</em><big>)</big><a class=\"headerlink\" href=\"#len\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(37) > dt#len:nth-of-type(1)",
      "text": [
        "len",
        "(",
        "s",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8606,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the length (the number of items) of an object.  The argument may be a\nsequence (string, tuple or list) or a mapping (dictionary).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(37) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the length (the number of items) of an object.  The argument may be a\nsequence (string, tuple or list) or a mapping (dictionary)."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 8644,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">list</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(38) > dt:nth-of-type(1)",
      "text": [
        "list",
        "(",
        "[",
        "iterable",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8673,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Rather than being a function, <a class=\"reference internal\" href=\"stdtypes.html#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a> is actually a mutable\nsequence type, as documented in <a class=\"reference internal\" href=\"stdtypes.html#typesseq-list\"><em>Lists</em></a> and <a class=\"reference internal\" href=\"stdtypes.html#typesseq\"><em>Sequence Types — list, tuple, range</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(38) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Rather than being a function, ",
        "list",
        " is actually a mutable\nsequence type, as documented in ",
        "Lists",
        " and ",
        "Sequence Types — list, tuple, range",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8711,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#locals:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">locals</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#locals\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(39) > dt#locals:nth-of-type(1)",
      "text": [
        "locals",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8739,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Update and return a dictionary representing the current local symbol table.\nFree variables are returned by <a class=\"reference internal\" href=\"#locals\" title=\"locals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></tt></a> when it is called in function\nblocks, but not in class blocks.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(39) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Update and return a dictionary representing the current local symbol table.\nFree variables are returned by ",
        "locals()",
        " when it is called in function\nblocks, but not in class blocks."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 295,
        "top": 8777,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The contents of this dictionary should not be modified; changes may not\naffect the values of local and free variables used by the interpreter.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(39) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "The contents of this dictionary should not be modified; changes may not\naffect the values of local and free variables used by the interpreter."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8831,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#map:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">map</tt><big>(</big><em>function</em>, <em>iterable</em>, <em>...</em><big>)</big><a class=\"headerlink\" href=\"#map\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(40) > dt#map:nth-of-type(1)",
      "text": [
        "map",
        "(",
        "function",
        ", ",
        "iterable",
        ", ",
        "...",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 8859,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an iterator that applies <em>function</em> to every item of <em>iterable</em>,\nyielding the results.  If additional <em>iterable</em> arguments are passed,\n<em>function</em> must take that many arguments and is applied to the items from all\niterables in parallel.  With multiple iterables, the iterator stops when the\nshortest iterable is exhausted.  For cases where the function inputs are\nalready arranged into argument tuples, see <a class=\"reference internal\" href=\"itertools.html#itertools.starmap\" title=\"itertools.starmap\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.starmap()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(40) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an iterator that applies ",
        "function",
        " to every item of ",
        "iterable",
        ",\nyielding the results.  If additional ",
        "iterable",
        " arguments are passed,\n",
        "function",
        " must take that many arguments and is applied to the items from all\niterables in parallel.  With multiple iterables, the iterator stops when the\nshortest iterable is exhausted.  For cases where the function inputs are\nalready arranged into argument tuples, see ",
        "itertools.starmap()",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 8941,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#max:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">max</tt><big>(</big><em>iterable</em>, <em>*</em><span class=\"optional\">[</span>, <em>key</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#max\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(41) > dt#max:nth-of-type(1)",
      "text": [
        "max",
        "(",
        "iterable",
        ", ",
        "*",
        "[",
        ", ",
        "key",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 8967,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">max</tt><big>(</big><em>arg1</em>, <em>arg2</em>, <em>*args</em><span class=\"optional\">[</span>, <em>key</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(41) > dt:nth-of-type(2)",
      "text": [
        "max",
        "(",
        "arg1",
        ", ",
        "arg2",
        ", ",
        "*args",
        "[",
        ", ",
        "key",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8996,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the largest item in an iterable or the largest of two or more\narguments.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(41) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the largest item in an iterable or the largest of two or more\narguments."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 9034,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If one positional argument is provided, <em>iterable</em> must be a non-empty\niterable (such as a non-empty string, tuple or list).  The largest item\nin the iterable is returned.  If two or more positional arguments are\nprovided, the largest of the positional arguments is returned.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(41) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If one positional argument is provided, ",
        "iterable",
        " must be a non-empty\niterable (such as a non-empty string, tuple or list).  The largest item\nin the iterable is returned.  If two or more positional arguments are\nprovided, the largest of the positional arguments is returned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 9094,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The optional keyword-only <em>key</em> argument specifies a one-argument ordering\nfunction like that used for <a class=\"reference internal\" href=\"stdtypes.html#list.sort\" title=\"list.sort\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">list.sort()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(41) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The optional keyword-only ",
        "key",
        " argument specifies a one-argument ordering\nfunction like that used for ",
        "list.sort()",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 9132,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "If multiple items are maximal, the function returns the first one\nencountered.  This is consistent with other sort-stability preserving tools\nsuch as <tt class=\"docutils literal\"><span class=\"pre\">sorted(iterable,</span> <span class=\"pre\">key=keyfunc,</span> <span class=\"pre\">reverse=True)[0]</span></tt> and\n<tt class=\"docutils literal\"><span class=\"pre\">heapq.nlargest(1,</span> <span class=\"pre\">iterable,</span> <span class=\"pre\">key=keyfunc)</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(41) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "If multiple items are maximal, the function returns the first one\nencountered.  This is consistent with other sort-stability preserving tools\nsuch as ",
        "sorted(iterable,",
        "key=keyfunc,",
        "reverse=True)[0]",
        " and\n",
        "heapq.nlargest(1,",
        "iterable,",
        "key=keyfunc)",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 9192,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">memoryview</tt><big>(</big><em>obj</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(42) > dt:nth-of-type(1)",
      "text": [
        "memoryview",
        "(",
        "obj",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 9220,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a “memory view” object created from the given argument.  See\n<a class=\"reference internal\" href=\"stdtypes.html#typememoryview\"><em>Memory Views</em></a> for more information.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(42) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a “memory view” object created from the given argument.  See\n",
        "Memory Views",
        " for more information."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 9258,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#min:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">min</tt><big>(</big><em>iterable</em>, <em>*</em><span class=\"optional\">[</span>, <em>key</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#min\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(43) > dt#min:nth-of-type(1)",
      "text": [
        "min",
        "(",
        "iterable",
        ", ",
        "*",
        "[",
        ", ",
        "key",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 9284,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">min</tt><big>(</big><em>arg1</em>, <em>arg2</em>, <em>*args</em><span class=\"optional\">[</span>, <em>key</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(43) > dt:nth-of-type(2)",
      "text": [
        "min",
        "(",
        "arg1",
        ", ",
        "arg2",
        ", ",
        "*args",
        "[",
        ", ",
        "key",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 9313,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the smallest item in an iterable or the smallest of two or more\narguments.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(43) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the smallest item in an iterable or the smallest of two or more\narguments."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 9351,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If one positional argument is provided, <em>iterable</em> must be a non-empty\niterable (such as a non-empty string, tuple or list).  The smallest item\nin the iterable is returned.  If two or more positional arguments are\nprovided, the smallest of the positional arguments is returned.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(43) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If one positional argument is provided, ",
        "iterable",
        " must be a non-empty\niterable (such as a non-empty string, tuple or list).  The smallest item\nin the iterable is returned.  If two or more positional arguments are\nprovided, the smallest of the positional arguments is returned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 9411,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The optional keyword-only <em>key</em> argument specifies a one-argument ordering\nfunction like that used for <a class=\"reference internal\" href=\"stdtypes.html#list.sort\" title=\"list.sort\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">list.sort()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(43) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The optional keyword-only ",
        "key",
        " argument specifies a one-argument ordering\nfunction like that used for ",
        "list.sort()",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 9449,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "If multiple items are minimal, the function returns the first one\nencountered.  This is consistent with other sort-stability preserving tools\nsuch as <tt class=\"docutils literal\"><span class=\"pre\">sorted(iterable,</span> <span class=\"pre\">key=keyfunc)[0]</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">heapq.nsmallest(1,</span>\n<span class=\"pre\">iterable,</span> <span class=\"pre\">key=keyfunc)</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(43) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "If multiple items are minimal, the function returns the first one\nencountered.  This is consistent with other sort-stability preserving tools\nsuch as ",
        "sorted(iterable,",
        "key=keyfunc)[0]",
        " and ",
        "heapq.nsmallest(1,",
        "iterable,",
        "key=keyfunc)",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 9509,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#next:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">next</tt><big>(</big><em>iterator</em><span class=\"optional\">[</span>, <em>default</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#next\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(44) > dt#next:nth-of-type(1)",
      "text": [
        "next",
        "(",
        "iterator",
        "[",
        ", ",
        "default",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 9538,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Retrieve the next item from the <em>iterator</em> by calling its\n<a class=\"reference internal\" href=\"stdtypes.html#iterator.__next__\" title=\"iterator.__next__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__next__()</span></tt></a> method.  If <em>default</em> is given, it is returned\nif the iterator is exhausted, otherwise <a class=\"reference internal\" href=\"exceptions.html#StopIteration\" title=\"StopIteration\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></tt></a> is raised.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(44) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Retrieve the next item from the ",
        "iterator",
        " by calling its\n",
        "__next__()",
        " method.  If ",
        "default",
        " is given, it is returned\nif the iterator is exhausted, otherwise ",
        "StopIteration",
        " is raised."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 9576,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#object:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">object</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#object\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(45) > dt#object:nth-of-type(1)",
      "text": [
        "object",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 9604,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new featureless object.  <a class=\"reference internal\" href=\"#object\" title=\"object\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></tt></a> is a base for all classes.\nIt has the methods that are common to all instances of Python classes.  This\nfunction does not accept any arguments.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(45) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new featureless object.  ",
        "object",
        " is a base for all classes.\nIt has the methods that are common to all instances of Python classes.  This\nfunction does not accept any arguments."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 295,
        "top": 9664,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"#object\" title=\"object\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></tt></a> does <em>not</em> have a <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt>, so you can’t assign\narbitrary attributes to an instance of the <a class=\"reference internal\" href=\"#object\" title=\"object\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></tt></a> class.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(45) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "object",
        " does ",
        "not",
        " have a ",
        "__dict__",
        ", so you can’t assign\narbitrary attributes to an instance of the ",
        "object",
        " class."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 9718,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#oct:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">oct</tt><big>(</big><em>x</em><big>)</big><a class=\"headerlink\" href=\"#oct\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(46) > dt#oct:nth-of-type(1)",
      "text": [
        "oct",
        "(",
        "x",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 9746,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Convert an integer number to an octal string.  The result is a valid Python\nexpression.  If <em>x</em> is not a Python <a class=\"reference internal\" href=\"#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> object, it has to define an\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__index__\" title=\"object.__index__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__index__()</span></tt></a> method that returns an integer.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(46) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Convert an integer number to an octal string.  The result is a valid Python\nexpression.  If ",
        "x",
        " is not a Python ",
        "int",
        " object, it has to define an\n",
        "__index__()",
        " method that returns an integer."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 9806,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#open:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">open</tt><big>(</big><em>file</em>, <em>mode='r'</em>, <em>buffering=-1</em>, <em>encoding=None</em>, <em>errors=None</em>, <em>newline=None</em>, <em>closefd=True</em>, <em>opener=None</em><big>)</big><a class=\"headerlink\" href=\"#open\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dt#open:nth-of-type(1)",
      "text": [
        "open",
        "(",
        "file",
        ", ",
        "mode='r'",
        ", ",
        "buffering=-1",
        ", ",
        "encoding=None",
        ", ",
        "errors=None",
        ", ",
        "newline=None",
        ", ",
        "closefd=True",
        ", ",
        "opener=None",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 9834,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Open <em>file</em> and return a corresponding <a class=\"reference internal\" href=\"../glossary.html#term-file-object\"><em class=\"xref std std-term\">file object</em></a>.  If the file\ncannot be opened, an <a class=\"reference internal\" href=\"exceptions.html#OSError\" title=\"OSError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></tt></a> is raised.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Open ",
        "file",
        " and return a corresponding ",
        "file object",
        ".  If the file\ncannot be opened, an ",
        "OSError",
        " is raised."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 9872,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<em>file</em> is either a string or bytes object giving the pathname (absolute or\nrelative to the current working directory) of the file to be opened or\nan integer file descriptor of the file to be wrapped.  (If a file descriptor\nis given, it is closed when the returned I/O object is closed, unless\n<em>closefd</em> is set to <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>.)",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "file",
        " is either a string or bytes object giving the pathname (absolute or\nrelative to the current working directory) of the file to be opened or\nan integer file descriptor of the file to be wrapped.  (If a file descriptor\nis given, it is closed when the returned I/O object is closed, unless\n",
        "closefd",
        " is set to ",
        "False",
        ".)"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 9932,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<em>mode</em> is an optional string that specifies the mode in which the file is\nopened.  It defaults to <tt class=\"docutils literal\"><span class=\"pre\">'r'</span></tt> which means open for reading in text mode.\nOther common values are <tt class=\"docutils literal\"><span class=\"pre\">'w'</span></tt> for writing (truncating the file if it\nalready exists), <tt class=\"docutils literal\"><span class=\"pre\">'x'</span></tt> for exclusive creation and <tt class=\"docutils literal\"><span class=\"pre\">'a'</span></tt> for appending\n(which on <em>some</em> Unix systems, means that <em>all</em> writes append to the end of\nthe file regardless of the current seek position).  In text mode, if\n<em>encoding</em> is not specified the encoding used is platform dependent:\n<tt class=\"docutils literal\"><span class=\"pre\">locale.getpreferredencoding(False)</span></tt> is called to get the current locale\nencoding. (For reading and writing raw bytes use binary mode and leave\n<em>encoding</em> unspecified.)  The available modes are:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "mode",
        " is an optional string that specifies the mode in which the file is\nopened.  It defaults to ",
        "'r'",
        " which means open for reading in text mode.\nOther common values are ",
        "'w'",
        " for writing (truncating the file if it\nalready exists), ",
        "'x'",
        " for exclusive creation and ",
        "'a'",
        " for appending\n(which on ",
        "some",
        " Unix systems, means that ",
        "all",
        " writes append to the end of\nthe file regardless of the current seek position).  In text mode, if\n",
        "encoding",
        " is not specified the encoding used is platform dependent:\n",
        "locale.getpreferredencoding(False)",
        " is called to get the current locale\nencoding. (For reading and writing raw bytes use binary mode and leave\n",
        "encoding",
        " unspecified.)  The available modes are:"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10036,
        "width": 101
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Character",
      "path": "div > div > div > div > div > dl > dd > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Character"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10036,
        "width": 675
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > dl > dd > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10065,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'r'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'r'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10065,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "open for reading (default)",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "open for reading (default)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10094,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'w'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'w'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10094,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "open for writing, truncating the file first",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "open for writing, truncating the file first"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10123,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'x'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'x'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10123,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "open for exclusive creation, failing if the file already exists",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "open for exclusive creation, failing if the file already exists"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10152,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'a'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'a'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10152,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "open for writing, appending to the end of the file if it exists",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "open for writing, appending to the end of the file if it exists"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10181,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'b'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "'b'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10181,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "binary mode",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "binary mode"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10210,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'t'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "'t'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10210,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "text mode (default)",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "text mode (default)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10239,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'+'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "'+'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10239,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "open a disk file for updating (reading and writing)",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "open a disk file for updating (reading and writing)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 10268,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'U'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "'U'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 396,
        "top": 10268,
        "width": 675
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "universal newlines mode (for backwards compatibility; should\nnot be used in new code)",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "universal newlines mode (for backwards compatibility; should\nnot be used in new code)"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 10308,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The default mode is <tt class=\"docutils literal\"><span class=\"pre\">'r'</span></tt> (open for reading text, synonym of <tt class=\"docutils literal\"><span class=\"pre\">'rt'</span></tt>).\nFor binary read-write access, the mode <tt class=\"docutils literal\"><span class=\"pre\">'w+b'</span></tt> opens and truncates the file\nto 0 bytes.  <tt class=\"docutils literal\"><span class=\"pre\">'r+b'</span></tt> opens the file without truncation.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "The default mode is ",
        "'r'",
        " (open for reading text, synonym of ",
        "'rt'",
        ").\nFor binary read-write access, the mode ",
        "'w+b'",
        " opens and truncates the file\nto 0 bytes.  ",
        "'r+b'",
        " opens the file without truncation."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 10368,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "As mentioned in the <a class=\"reference internal\" href=\"io.html#io-overview\"><em>Overview</em></a>, Python distinguishes between binary\nand text I/O.  Files opened in binary mode (including <tt class=\"docutils literal\"><span class=\"pre\">'b'</span></tt> in the <em>mode</em>\nargument) return contents as <a class=\"reference internal\" href=\"#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> objects without any decoding.  In\ntext mode (the default, or when <tt class=\"docutils literal\"><span class=\"pre\">'t'</span></tt> is included in the <em>mode</em> argument),\nthe contents of the file are returned as <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></tt></a>, the bytes having been\nfirst decoded using a platform-dependent encoding or using the specified\n<em>encoding</em> if given.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "As mentioned in the ",
        "Overview",
        ", Python distinguishes between binary\nand text I/O.  Files opened in binary mode (including ",
        "'b'",
        " in the ",
        "mode",
        "\nargument) return contents as ",
        "bytes",
        " objects without any decoding.  In\ntext mode (the default, or when ",
        "'t'",
        " is included in the ",
        "mode",
        " argument),\nthe contents of the file are returned as ",
        "str",
        ", the bytes having been\nfirst decoded using a platform-dependent encoding or using the specified\n",
        "encoding",
        " if given."
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 295,
        "top": 10450,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Python doesn’t depend on the underlying operating system’s notion of text\nfiles; all the processing is done by Python itself, and is therefore\nplatform-independent.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "Python doesn’t depend on the underlying operating system’s notion of text\nfiles; all the processing is done by Python itself, and is therefore\nplatform-independent."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 10520,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "<em>buffering</em> is an optional integer used to set the buffering policy.  Pass 0\nto switch buffering off (only allowed in binary mode), 1 to select line\nbuffering (only usable in text mode), and an integer &gt; 1 to indicate the size\nin bytes of a fixed-size chunk buffer.  When no <em>buffering</em> argument is\ngiven, the default buffering policy works as follows:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "buffering",
        " is an optional integer used to set the buffering policy.  Pass 0\nto switch buffering off (only allowed in binary mode), 1 to select line\nbuffering (only usable in text mode), and an integer > 1 to indicate the size\nin bytes of a fixed-size chunk buffer.  When no ",
        "buffering",
        " argument is\ngiven, the default buffering policy works as follows:"
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 335,
        "top": 10580,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "Binary files are buffered in fixed-size chunks; the size of the buffer is\nchosen using a heuristic trying to determine the underlying device’s “block\nsize” and falling back on <a class=\"reference internal\" href=\"io.html#io.DEFAULT_BUFFER_SIZE\" title=\"io.DEFAULT_BUFFER_SIZE\"><tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">io.DEFAULT_BUFFER_SIZE</span></tt></a>.  On many systems,\nthe buffer will typically be 4096 or 8192 bytes long.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Binary files are buffered in fixed-size chunks; the size of the buffer is\nchosen using a heuristic trying to determine the underlying device’s “block\nsize” and falling back on ",
        "io.DEFAULT_BUFFER_SIZE",
        ".  On many systems,\nthe buffer will typically be 4096 or 8192 bytes long."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 10620,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "“Interactive” text files (files for which <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">isatty()</span></tt> returns True) use\nline buffering.  Other text files use the policy described above for binary\nfiles.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "“Interactive” text files (files for which ",
        "isatty()",
        " returns True) use\nline buffering.  Other text files use the policy described above for binary\nfiles."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 10650,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "<em>encoding</em> is the name of the encoding used to decode or encode the file.\nThis should only be used in text mode.  The default encoding is platform\ndependent (whatever <a class=\"reference internal\" href=\"locale.html#locale.getpreferredencoding\" title=\"locale.getpreferredencoding\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">locale.getpreferredencoding()</span></tt></a> returns), but any\nencoding supported by Python can be used.  See the <a class=\"reference internal\" href=\"codecs.html#module-codecs\" title=\"codecs: Encode and decode data and streams.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">codecs</span></tt></a> module for\nthe list of supported encodings.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "encoding",
        " is the name of the encoding used to decode or encode the file.\nThis should only be used in text mode.  The default encoding is platform\ndependent (whatever ",
        "locale.getpreferredencoding()",
        " returns), but any\nencoding supported by Python can be used.  See the ",
        "codecs",
        " module for\nthe list of supported encodings."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 10710,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "<em>errors</em> is an optional string that specifies how encoding and decoding\nerrors are to be handled–this cannot be used in binary mode.\nA variety of standard error handlers are available, though any\nerror handling name that has been registered with\n<a class=\"reference internal\" href=\"codecs.html#codecs.register_error\" title=\"codecs.register_error\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">codecs.register_error()</span></tt></a> is also valid.  The standard names\nare:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "errors",
        " is an optional string that specifies how encoding and decoding\nerrors are to be handled–this cannot be used in binary mode.\nA variety of standard error handlers are available, though any\nerror handling name that has been registered with\n",
        "codecs.register_error()",
        " is also valid.  The standard names\nare:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 10770,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'strict'</span></tt> to raise a <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> exception if there is\nan encoding error.  The default value of <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> has the same\neffect.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "'strict'",
        " to raise a ",
        "ValueError",
        " exception if there is\nan encoding error.  The default value of ",
        "None",
        " has the same\neffect."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 10790,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'ignore'</span></tt> ignores errors.  Note that ignoring encoding errors\ncan lead to data loss.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "'ignore'",
        " ignores errors.  Note that ignoring encoding errors\ncan lead to data loss."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 10810,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'replace'</span></tt> causes a replacement marker (such as <tt class=\"docutils literal\"><span class=\"pre\">'?'</span></tt>) to be inserted\nwhere there is malformed data.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(3)",
      "text": [
        "'replace'",
        " causes a replacement marker (such as ",
        "'?'",
        ") to be inserted\nwhere there is malformed data."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 335,
        "top": 10830,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'surrogateescape'</span></tt> will represent any incorrect bytes as code\npoints in the Unicode Private Use Area ranging from U+DC80 to\nU+DCFF.  These private code points will then be turned back into\nthe same bytes when the <tt class=\"docutils literal\"><span class=\"pre\">surrogateescape</span></tt> error handler is used\nwhen writing data.  This is useful for processing files in an\nunknown encoding.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(4)",
      "text": [
        "'surrogateescape'",
        " will represent any incorrect bytes as code\npoints in the Unicode Private Use Area ranging from U+DC80 to\nU+DCFF.  These private code points will then be turned back into\nthe same bytes when the ",
        "surrogateescape",
        " error handler is used\nwhen writing data.  This is useful for processing files in an\nunknown encoding."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 10870,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(5)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'xmlcharrefreplace'</span></tt> is only supported when writing to a file.\nCharacters not supported by the encoding are replaced with the\nappropriate XML character reference <tt class=\"docutils literal\"><span class=\"pre\">&amp;#nnn;</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(5)",
      "text": [
        "'xmlcharrefreplace'",
        " is only supported when writing to a file.\nCharacters not supported by the encoding are replaced with the\nappropriate XML character reference ",
        "&#nnn;",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 10890,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(6)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'backslashreplace'</span></tt> (also only supported when writing)\nreplaces unsupported characters with Python’s backslashed escape\nsequences.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(6)",
      "text": [
        "'backslashreplace'",
        " (also only supported when writing)\nreplaces unsupported characters with Python’s backslashed escape\nsequences."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 10920,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-5:nth-of-type(9)",
      "html": "<em>newline</em> controls how <a class=\"reference internal\" href=\"../glossary.html#term-universal-newlines\"><em class=\"xref std std-term\">universal newlines</em></a> mode works (it only\napplies to text mode).  It can be <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">''</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'\\n'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'\\r'</span></tt>, and\n<tt class=\"docutils literal\"><span class=\"pre\">'\\r\\n'</span></tt>.  It works as follows:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p#index-5:nth-of-type(9)",
      "text": [
        "newline",
        " controls how ",
        "universal newlines",
        " mode works (it only\napplies to text mode).  It can be ",
        "None",
        ", ",
        "''",
        ", ",
        "'\\n'",
        ", ",
        "'\\r'",
        ", and\n",
        "'\\r\\n'",
        ".  It works as follows:"
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 335,
        "top": 10958,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "When reading input from the stream, if <em>newline</em> is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, universal\nnewlines mode is enabled.  Lines in the input can end in <tt class=\"docutils literal\"><span class=\"pre\">'\\n'</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">'\\r'</span></tt>, or <tt class=\"docutils literal\"><span class=\"pre\">'\\r\\n'</span></tt>, and these are translated into <tt class=\"docutils literal\"><span class=\"pre\">'\\n'</span></tt> before\nbeing returned to the caller.  If it is <tt class=\"docutils literal\"><span class=\"pre\">''</span></tt>, universal newlines mode is\nenabled, but line endings are returned to the caller untranslated.  If it\nhas any of the other legal values, input lines are only terminated by the\ngiven string, and the line ending is returned to the caller untranslated.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(3) > li:nth-of-type(1)",
      "text": [
        "When reading input from the stream, if ",
        "newline",
        " is ",
        "None",
        ", universal\nnewlines mode is enabled.  Lines in the input can end in ",
        "'\\n'",
        ",\n",
        "'\\r'",
        ", or ",
        "'\\r\\n'",
        ", and these are translated into ",
        "'\\n'",
        " before\nbeing returned to the caller.  If it is ",
        "''",
        ", universal newlines mode is\nenabled, but line endings are returned to the caller untranslated.  If it\nhas any of the other legal values, input lines are only terminated by the\ngiven string, and the line ending is returned to the caller untranslated."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 335,
        "top": 11018,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "When writing output to the stream, if <em>newline</em> is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, any <tt class=\"docutils literal\"><span class=\"pre\">'\\n'</span></tt>\ncharacters written are translated to the system default line separator,\n<a class=\"reference internal\" href=\"os.html#os.linesep\" title=\"os.linesep\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">os.linesep</span></tt></a>.  If <em>newline</em> is <tt class=\"docutils literal\"><span class=\"pre\">''</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'\\n'</span></tt>, no translation\ntakes place.  If <em>newline</em> is any of the other legal values, any <tt class=\"docutils literal\"><span class=\"pre\">'\\n'</span></tt>\ncharacters written are translated to the given string.",
      "path": "div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > ul.simple:nth-of-type(3) > li:nth-of-type(2)",
      "text": [
        "When writing output to the stream, if ",
        "newline",
        " is ",
        "None",
        ", any ",
        "'\\n'",
        "\ncharacters written are translated to the system default line separator,\n",
        "os.linesep",
        ".  If ",
        "newline",
        " is ",
        "''",
        " or ",
        "'\\n'",
        ", no translation\ntakes place.  If ",
        "newline",
        " is any of the other legal values, any ",
        "'\\n'",
        "\ncharacters written are translated to the given string."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 11068,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "If <em>closefd</em> is <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> and a file descriptor rather than a filename was\ngiven, the underlying file descriptor will be kept open when the file is\nclosed.  If a filename is given <em>closefd</em> has no effect and must be <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>\n(the default).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(10)",
      "text": [
        "If ",
        "closefd",
        " is ",
        "False",
        " and a file descriptor rather than a filename was\ngiven, the underlying file descriptor will be kept open when the file is\nclosed.  If a filename is given ",
        "closefd",
        " has no effect and must be ",
        "True",
        "\n(the default)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 11128,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "A custom opener can be used by passing a callable as <em>opener</em>. The underlying\nfile descriptor for the file object is then obtained by calling <em>opener</em> with\n(<em>file</em>, <em>flags</em>). <em>opener</em> must return an open file descriptor (passing\n<a class=\"reference internal\" href=\"os.html#os.open\" title=\"os.open\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">os.open</span></tt></a> as <em>opener</em> results in functionality similar to passing\n<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(11)",
      "text": [
        "A custom opener can be used by passing a callable as ",
        "opener",
        ". The underlying\nfile descriptor for the file object is then obtained by calling ",
        "opener",
        " with\n(",
        "file",
        ", ",
        "flags",
        "). ",
        "opener",
        " must return an open file descriptor (passing\n",
        "os.open",
        " as ",
        "opener",
        " results in functionality similar to passing\n",
        "None",
        ")."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11188,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(12)",
      "html": "The following example uses the <a class=\"reference internal\" href=\"os.html#dir-fd\"><em>dir_fd</em></a> parameter of the\n<a class=\"reference internal\" href=\"os.html#os.open\" title=\"os.open\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">os.open()</span></tt></a> function to open a file relative to a given directory:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(12)",
      "text": [
        "The following example uses the ",
        "dir_fd",
        " parameter of the\n",
        "os.open()",
        " function to open a file relative to a given directory:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 11226,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 295,
        "top": 11226,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dir_fd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s\">'somedir'</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">O_RDONLY</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">opener</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">,</span> <span class=\"n\">dir_fd</span><span class=\"o\">=</span><span class=\"n\">dir_fd</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s\">'spamspam.txt'</span><span class=\"p\">,</span> <span class=\"s\">'w'</span><span class=\"p\">,</span> <span class=\"n\">opener</span><span class=\"o\">=</span><span class=\"n\">opener</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">'This will be written to somedir/spamspam.txt'</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">dir_fd</span><span class=\"p\">)</span>  <span class=\"c\"># don't leak a file descriptor</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "os",
        ">>> ",
        "dir_fd",
        "=",
        "os",
        ".",
        "open",
        "(",
        "'somedir'",
        ",",
        "os",
        ".",
        "O_RDONLY",
        ")",
        ">>> ",
        "def",
        "opener",
        "(",
        "path",
        ",",
        "flags",
        "):",
        "... ",
        "return",
        "os",
        ".",
        "open",
        "(",
        "path",
        ",",
        "flags",
        ",",
        "dir_fd",
        "=",
        "dir_fd",
        ")",
        "...",
        ">>> ",
        "with",
        "open",
        "(",
        "'spamspam.txt'",
        ",",
        "'w'",
        ",",
        "opener",
        "=",
        "opener",
        ")",
        "as",
        "f",
        ":",
        "... ",
        "print",
        "(",
        "'This will be written to somedir/spamspam.txt'",
        ",",
        "file",
        "=",
        "f",
        ")",
        "...",
        ">>> ",
        "os",
        ".",
        "close",
        "(",
        "dir_fd",
        ")",
        "# don't leak a file descriptor"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11415,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(13)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> The <em>opener</em> parameter was added.\nThe <tt class=\"docutils literal\"><span class=\"pre\">'x'</span></tt> mode was added.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(13)",
      "text": [
        "Changed in version 3.3:",
        " The ",
        "opener",
        " parameter was added.\nThe ",
        "'x'",
        " mode was added."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 11453,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(14)",
      "html": "The type of <a class=\"reference internal\" href=\"../glossary.html#term-file-object\"><em class=\"xref std std-term\">file object</em></a> returned by the <a class=\"reference internal\" href=\"#open\" title=\"open\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></tt></a> function\ndepends on the mode.  When <a class=\"reference internal\" href=\"#open\" title=\"open\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></tt></a> is used to open a file in a text\nmode (<tt class=\"docutils literal\"><span class=\"pre\">'w'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'r'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'wt'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'rt'</span></tt>, etc.), it returns a subclass of\n<a class=\"reference internal\" href=\"io.html#io.TextIOBase\" title=\"io.TextIOBase\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.TextIOBase</span></tt></a> (specifically <a class=\"reference internal\" href=\"io.html#io.TextIOWrapper\" title=\"io.TextIOWrapper\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.TextIOWrapper</span></tt></a>).  When used\nto open a file in a binary mode with buffering, the returned class is a\nsubclass of <a class=\"reference internal\" href=\"io.html#io.BufferedIOBase\" title=\"io.BufferedIOBase\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedIOBase</span></tt></a>.  The exact class varies: in read\nbinary mode, it returns a <a class=\"reference internal\" href=\"io.html#io.BufferedReader\" title=\"io.BufferedReader\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedReader</span></tt></a>; in write binary and\nappend binary modes, it returns a <a class=\"reference internal\" href=\"io.html#io.BufferedWriter\" title=\"io.BufferedWriter\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedWriter</span></tt></a>, and in\nread/write mode, it returns a <a class=\"reference internal\" href=\"io.html#io.BufferedRandom\" title=\"io.BufferedRandom\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedRandom</span></tt></a>.  When buffering is\ndisabled, the raw stream, a subclass of <a class=\"reference internal\" href=\"io.html#io.RawIOBase\" title=\"io.RawIOBase\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.RawIOBase</span></tt></a>,\n<a class=\"reference internal\" href=\"io.html#io.FileIO\" title=\"io.FileIO\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.FileIO</span></tt></a>, is returned.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p:nth-of-type(14)",
      "text": [
        "The type of ",
        "file object",
        " returned by the ",
        "open()",
        " function\ndepends on the mode.  When ",
        "open()",
        " is used to open a file in a text\nmode (",
        "'w'",
        ", ",
        "'r'",
        ", ",
        "'wt'",
        ", ",
        "'rt'",
        ", etc.), it returns a subclass of\n",
        "io.TextIOBase",
        " (specifically ",
        "io.TextIOWrapper",
        ").  When used\nto open a file in a binary mode with buffering, the returned class is a\nsubclass of ",
        "io.BufferedIOBase",
        ".  The exact class varies: in read\nbinary mode, it returns a ",
        "io.BufferedReader",
        "; in write binary and\nappend binary modes, it returns a ",
        "io.BufferedWriter",
        ", and in\nread/write mode, it returns a ",
        "io.BufferedRandom",
        ".  When buffering is\ndisabled, the raw stream, a subclass of ",
        "io.RawIOBase",
        ",\n",
        "io.FileIO",
        ", is returned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11557,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-6:nth-of-type(15)",
      "html": "See also the file handling modules, such as, <a class=\"reference internal\" href=\"fileinput.html#module-fileinput\" title=\"fileinput: Loop over standard input or a list of files.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">fileinput</span></tt></a>, <a class=\"reference internal\" href=\"io.html#module-io\" title=\"io: Core tools for working with streams.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">io</span></tt></a>\n(where <a class=\"reference internal\" href=\"#open\" title=\"open\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></tt></a> is declared), <a class=\"reference internal\" href=\"os.html#module-os\" title=\"os: Miscellaneous operating system interfaces.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">os</span></tt></a>, <a class=\"reference internal\" href=\"os.path.html#module-os.path\" title=\"os.path: Operations on pathnames.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">os.path</span></tt></a>, <a class=\"reference internal\" href=\"tempfile.html#module-tempfile\" title=\"tempfile: Generate temporary files and directories.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">tempfile</span></tt></a>,\nand <a class=\"reference internal\" href=\"shutil.html#module-shutil\" title=\"shutil: High-level file operations, including copying.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">shutil</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p#index-6:nth-of-type(15)",
      "text": [
        "See also the file handling modules, such as, ",
        "fileinput",
        ", ",
        "io",
        "\n(where ",
        "open()",
        " is declared), ",
        "os",
        ", ",
        "os.path",
        ", ",
        "tempfile",
        ",\nand ",
        "shutil",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11595,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(16)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> <a class=\"reference internal\" href=\"exceptions.html#IOError\" title=\"IOError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">IOError</span></tt></a> used to be raised, it is now an alias of <a class=\"reference internal\" href=\"exceptions.html#OSError\" title=\"OSError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></tt></a>.\n<a class=\"reference internal\" href=\"exceptions.html#FileExistsError\" title=\"FileExistsError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">FileExistsError</span></tt></a> is now raised if the file opened in exclusive\ncreation mode (<tt class=\"docutils literal\"><span class=\"pre\">'x'</span></tt>) already exists.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(47) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(16)",
      "text": [
        "Changed in version 3.3:",
        "IOError",
        " used to be raised, it is now an alias of ",
        "OSError",
        ".\n",
        "FileExistsError",
        " is now raised if the file opened in exclusive\ncreation mode (",
        "'x'",
        ") already exists."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 11633,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#ord:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">ord</tt><big>(</big><em>c</em><big>)</big><a class=\"headerlink\" href=\"#ord\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(48) > dt#ord:nth-of-type(1)",
      "text": [
        "ord",
        "(",
        "c",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 11661,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Given a string representing one Unicode character, return an integer\nrepresenting the Unicode code\npoint of that character.  For example, <tt class=\"docutils literal\"><span class=\"pre\">ord('a')</span></tt> returns the integer <tt class=\"docutils literal\"><span class=\"pre\">97</span></tt>\nand <tt class=\"docutils literal\"><span class=\"pre\">ord('\\u2020')</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">8224</span></tt>.  This is the inverse of <a class=\"reference internal\" href=\"#chr\" title=\"chr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">chr()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(48) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Given a string representing one Unicode character, return an integer\nrepresenting the Unicode code\npoint of that character.  For example, ",
        "ord('a')",
        " returns the integer ",
        "97",
        "\nand ",
        "ord('\\u2020')",
        " returns ",
        "8224",
        ".  This is the inverse of ",
        "chr()",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 11721,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#pow:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">pow</tt><big>(</big><em>x</em>, <em>y</em><span class=\"optional\">[</span>, <em>z</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#pow\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(49) > dt#pow:nth-of-type(1)",
      "text": [
        "pow",
        "(",
        "x",
        ", ",
        "y",
        "[",
        ", ",
        "z",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 11750,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return <em>x</em> to the power <em>y</em>; if <em>z</em> is present, return <em>x</em> to the power <em>y</em>,\nmodulo <em>z</em> (computed more efficiently than <tt class=\"docutils literal\"><span class=\"pre\">pow(x,</span> <span class=\"pre\">y)</span> <span class=\"pre\">%</span> <span class=\"pre\">z</span></tt>). The two-argument\nform <tt class=\"docutils literal\"><span class=\"pre\">pow(x,</span> <span class=\"pre\">y)</span></tt> is equivalent to using the power operator: <tt class=\"docutils literal\"><span class=\"pre\">x**y</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(49) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return ",
        "x",
        " to the power ",
        "y",
        "; if ",
        "z",
        " is present, return ",
        "x",
        " to the power ",
        "y",
        ",\nmodulo ",
        "z",
        " (computed more efficiently than ",
        "pow(x,",
        "y)",
        "%",
        "z",
        "). The two-argument\nform ",
        "pow(x,",
        "y)",
        " is equivalent to using the power operator: ",
        "x**y",
        "."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 11810,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The arguments must have numeric types.  With mixed operand types, the\ncoercion rules for binary arithmetic operators apply.  For <a class=\"reference internal\" href=\"#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a>\noperands, the result has the same type as the operands (after coercion)\nunless the second argument is negative; in that case, all arguments are\nconverted to float and a float result is delivered.  For example, <tt class=\"docutils literal\"><span class=\"pre\">10**2</span></tt>\nreturns <tt class=\"docutils literal\"><span class=\"pre\">100</span></tt>, but <tt class=\"docutils literal\"><span class=\"pre\">10**-2</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">0.01</span></tt>.  If the second argument is\nnegative, the third argument must be omitted.  If <em>z</em> is present, <em>x</em> and <em>y</em>\nmust be of integer types, and <em>y</em> must be non-negative.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(49) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The arguments must have numeric types.  With mixed operand types, the\ncoercion rules for binary arithmetic operators apply.  For ",
        "int",
        "\noperands, the result has the same type as the operands (after coercion)\nunless the second argument is negative; in that case, all arguments are\nconverted to float and a float result is delivered.  For example, ",
        "10**2",
        "\nreturns ",
        "100",
        ", but ",
        "10**-2",
        " returns ",
        "0.01",
        ".  If the second argument is\nnegative, the third argument must be omitted.  If ",
        "z",
        " is present, ",
        "x",
        " and ",
        "y",
        "\nmust be of integer types, and ",
        "y",
        " must be non-negative."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 11914,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#print:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">print</tt><big>(</big><em>*objects</em>, <em>sep=' '</em>, <em>end='\\n'</em>, <em>file=sys.stdout</em>, <em>flush=False</em><big>)</big><a class=\"headerlink\" href=\"#print\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(50) > dt#print:nth-of-type(1)",
      "text": [
        "print",
        "(",
        "*objects",
        ", ",
        "sep=' '",
        ", ",
        "end='\\n'",
        ", ",
        "file=sys.stdout",
        ", ",
        "flush=False",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11942,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Print <em>objects</em> to the stream <em>file</em>, separated by <em>sep</em> and followed by\n<em>end</em>.  <em>sep</em>, <em>end</em> and <em>file</em>, if present, must be given as keyword\narguments.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(50) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Print ",
        "objects",
        " to the stream ",
        "file",
        ", separated by ",
        "sep",
        " and followed by\n",
        "end",
        ".  ",
        "sep",
        ", ",
        "end",
        " and ",
        "file",
        ", if present, must be given as keyword\narguments."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 11980,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "All non-keyword arguments are converted to strings like <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a> does and\nwritten to the stream, separated by <em>sep</em> and followed by <em>end</em>.  Both <em>sep</em>\nand <em>end</em> must be strings; they can also be <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, which means to use the\ndefault values.  If no <em>objects</em> are given, <a class=\"reference internal\" href=\"#print\" title=\"print\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">print()</span></tt></a> will just write\n<em>end</em>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(50) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "All non-keyword arguments are converted to strings like ",
        "str()",
        " does and\nwritten to the stream, separated by ",
        "sep",
        " and followed by ",
        "end",
        ".  Both ",
        "sep",
        "\nand ",
        "end",
        " must be strings; they can also be ",
        "None",
        ", which means to use the\ndefault values.  If no ",
        "objects",
        " are given, ",
        "print()",
        " will just write\n",
        "end",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 12040,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <em>file</em> argument must be an object with a <tt class=\"docutils literal\"><span class=\"pre\">write(string)</span></tt> method; if it\nis not present or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, <a class=\"reference internal\" href=\"sys.html#sys.stdout\" title=\"sys.stdout\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.stdout</span></tt></a> will be used.  Whether output\nis buffered is usually determined by <em>file</em>, but if the  <em>flush</em> keyword\nargument is true, the stream is forcibly flushed.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(50) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "file",
        " argument must be an object with a ",
        "write(string)",
        " method; if it\nis not present or ",
        "None",
        ", ",
        "sys.stdout",
        " will be used.  Whether output\nis buffered is usually determined by ",
        "file",
        ", but if the  ",
        "flush",
        " keyword\nargument is true, the stream is forcibly flushed."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12100,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(4)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> Added the <em>flush</em> keyword argument.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(50) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(4)",
      "text": [
        "Changed in version 3.3:",
        " Added the ",
        "flush",
        " keyword argument."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 12138,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#property:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">property</tt><big>(</big><em>fget=None</em>, <em>fset=None</em>, <em>fdel=None</em>, <em>doc=None</em><big>)</big><a class=\"headerlink\" href=\"#property\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dt#property:nth-of-type(1)",
      "text": [
        "property",
        "(",
        "fget=None",
        ", ",
        "fset=None",
        ", ",
        "fdel=None",
        ", ",
        "doc=None",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12166,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a property attribute.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a property attribute."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 12204,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<em>fget</em> is a function for getting an attribute value, likewise <em>fset</em> is a\nfunction for setting, and <em>fdel</em> a function for del’ing, an attribute.  Typical\nuse is to define a managed attribute <tt class=\"docutils literal\"><span class=\"pre\">x</span></tt>:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "fget",
        " is a function for getting an attribute value, likewise ",
        "fset",
        " is a\nfunction for setting, and ",
        "fdel",
        " a function for del’ing, an attribute.  Typical\nuse is to define a managed attribute ",
        "x",
        ":"
      ]
    },
    {
      "bound": {
        "height": 210,
        "left": 295,
        "top": 12264,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span> <span class=\"o\">=</span> <span class=\"k\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">getx</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setx</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delx</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"p\">(</span><span class=\"n\">getx</span><span class=\"p\">,</span> <span class=\"n\">setx</span><span class=\"p\">,</span> <span class=\"n\">delx</span><span class=\"p\">,</span> <span class=\"s\">\"I'm the 'x' property.\"</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "C",
        ":",
        "def",
        "__init__",
        "(",
        "self",
        "):",
        "self",
        ".",
        "_x",
        "=",
        "None",
        "def",
        "getx",
        "(",
        "self",
        "):",
        "return",
        "self",
        ".",
        "_x",
        "def",
        "setx",
        "(",
        "self",
        ",",
        "value",
        "):",
        "self",
        ".",
        "_x",
        "=",
        "value",
        "def",
        "delx",
        "(",
        "self",
        "):",
        "del",
        "self",
        ".",
        "_x",
        "x",
        "=",
        "property",
        "(",
        "getx",
        ",",
        "setx",
        ",",
        "delx",
        ",",
        "\"I'm the 'x' property.\"",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12489,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If then <em>c</em> is an instance of <em>C</em>, <tt class=\"docutils literal\"><span class=\"pre\">c.x</span></tt> will invoke the getter,\n<tt class=\"docutils literal\"><span class=\"pre\">c.x</span> <span class=\"pre\">=</span> <span class=\"pre\">value</span></tt> will invoke the setter and <tt class=\"docutils literal\"><span class=\"pre\">del</span> <span class=\"pre\">c.x</span></tt> the deleter.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If then ",
        "c",
        " is an instance of ",
        "C",
        ", ",
        "c.x",
        " will invoke the getter,\n",
        "c.x",
        "=",
        "value",
        " will invoke the setter and ",
        "del",
        "c.x",
        " the deleter."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 12527,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "If given, <em>doc</em> will be the docstring of the property attribute. Otherwise, the\nproperty will copy <em>fget</em>‘s docstring (if it exists).  This makes it possible to\ncreate read-only properties easily using <a class=\"reference internal\" href=\"#property\" title=\"property\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">property()</span></tt></a> as a <a class=\"reference internal\" href=\"../glossary.html#term-decorator\"><em class=\"xref std std-term\">decorator</em></a>:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "If given, ",
        "doc",
        " will be the docstring of the property attribute. Otherwise, the\nproperty will copy ",
        "fget",
        "‘s docstring (if it exists).  This makes it possible to\ncreate read-only properties easily using ",
        "property()",
        " as a ",
        "decorator",
        ":"
      ]
    },
    {
      "bound": {
        "height": 156,
        "left": 295,
        "top": 12587,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">Parrot</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_voltage</span> <span class=\"o\">=</span> <span class=\"mi\">100000</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">voltage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Get the current voltage.\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_voltage</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "Parrot",
        ":",
        "def",
        "__init__",
        "(",
        "self",
        "):",
        "self",
        ".",
        "_voltage",
        "=",
        "100000",
        "@property",
        "def",
        "voltage",
        "(",
        "self",
        "):",
        "\"\"\"Get the current voltage.\"\"\"",
        "return",
        "self",
        ".",
        "_voltage"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12758,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "turns the <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">voltage()</span></tt> method into a “getter” for a read-only attribute\nwith the same name.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "turns the ",
        "voltage()",
        " method into a “getter” for a read-only attribute\nwith the same name."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 12796,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "A property object has <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">getter</span></tt>, <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">setter</span></tt>, and <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">deleter</span></tt>\nmethods usable as decorators that create a copy of the property with the\ncorresponding accessor function set to the decorated function.  This is\nbest explained with an example:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "A property object has ",
        "getter",
        ", ",
        "setter",
        ", and ",
        "deleter",
        "\nmethods usable as decorators that create a copy of the property with the\ncorresponding accessor function set to the decorated function.  This is\nbest explained with an example:"
      ]
    },
    {
      "bound": {
        "height": 300,
        "left": 295,
        "top": 12856,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span> <span class=\"o\">=</span> <span class=\"k\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"I'm the 'x' property.\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span>\n\n    <span class=\"nd\">@x</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@x</span><span class=\"o\">.</span><span class=\"n\">deleter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "C",
        ":",
        "def",
        "__init__",
        "(",
        "self",
        "):",
        "self",
        ".",
        "_x",
        "=",
        "None",
        "@property",
        "def",
        "x",
        "(",
        "self",
        "):",
        "\"\"\"I'm the 'x' property.\"\"\"",
        "return",
        "self",
        ".",
        "_x",
        "@x",
        ".",
        "setter",
        "def",
        "x",
        "(",
        "self",
        ",",
        "value",
        "):",
        "self",
        ".",
        "_x",
        "=",
        "value",
        "@x",
        ".",
        "deleter",
        "def",
        "x",
        "(",
        "self",
        "):",
        "del",
        "self",
        ".",
        "_x"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 13171,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "This code is exactly equivalent to the first example.  Be sure to give the\nadditional functions the same name as the original property (<tt class=\"docutils literal\"><span class=\"pre\">x</span></tt> in this\ncase.)",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "This code is exactly equivalent to the first example.  Be sure to give the\nadditional functions the same name as the original property (",
        "x",
        " in this\ncase.)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 13209,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "The returned property also has the attributes <tt class=\"docutils literal\"><span class=\"pre\">fget</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">fset</span></tt>, and\n<tt class=\"docutils literal\"><span class=\"pre\">fdel</span></tt> corresponding to the constructor arguments.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(51) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "The returned property also has the attributes ",
        "fget",
        ", ",
        "fset",
        ", and\n",
        "fdel",
        " corresponding to the constructor arguments."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 13247,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">range</tt><big>(</big><em>stop</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(52) > dt:nth-of-type(1)",
      "text": [
        "range",
        "(",
        "stop",
        ")"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 13272,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">range</tt><big>(</big><em>start</em>, <em>stop</em><span class=\"optional\">[</span>, <em>step</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(52) > dt:nth-of-type(2)",
      "text": [
        "range",
        "(",
        "start",
        ", ",
        "stop",
        "[",
        ", ",
        "step",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 13301,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Rather than being a function, <a class=\"reference internal\" href=\"stdtypes.html#range\" title=\"range\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></tt></a> is actually an immutable\nsequence type, as documented in <a class=\"reference internal\" href=\"stdtypes.html#typesseq-range\"><em>Ranges</em></a> and <a class=\"reference internal\" href=\"stdtypes.html#typesseq\"><em>Sequence Types — list, tuple, range</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(52) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Rather than being a function, ",
        "range",
        " is actually an immutable\nsequence type, as documented in ",
        "Ranges",
        " and ",
        "Sequence Types — list, tuple, range",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 13339,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#repr:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">repr</tt><big>(</big><em>object</em><big>)</big><a class=\"headerlink\" href=\"#repr\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(53) > dt#repr:nth-of-type(1)",
      "text": [
        "repr",
        "(",
        "object",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 13367,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a string containing a printable representation of an object.  For many\ntypes, this function makes an attempt to return a string that would yield an\nobject with the same value when passed to <a class=\"reference internal\" href=\"#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a>, otherwise the\nrepresentation is a string enclosed in angle brackets that contains the name\nof the type of the object together with additional information often\nincluding the name and address of the object.  A class can control what this\nfunction returns for its instances by defining a <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__repr__\" title=\"object.__repr__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__repr__()</span></tt></a> method.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(53) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a string containing a printable representation of an object.  For many\ntypes, this function makes an attempt to return a string that would yield an\nobject with the same value when passed to ",
        "eval()",
        ", otherwise the\nrepresentation is a string enclosed in angle brackets that contains the name\nof the type of the object together with additional information often\nincluding the name and address of the object.  A class can control what this\nfunction returns for its instances by defining a ",
        "__repr__()",
        " method."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 13449,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#reversed:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">reversed</tt><big>(</big><em>seq</em><big>)</big><a class=\"headerlink\" href=\"#reversed\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(54) > dt#reversed:nth-of-type(1)",
      "text": [
        "reversed",
        "(",
        "seq",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 13477,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a reverse <a class=\"reference internal\" href=\"../glossary.html#term-iterator\"><em class=\"xref std std-term\">iterator</em></a>.  <em>seq</em> must be an object which has\na <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__reversed__\" title=\"object.__reversed__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__reversed__()</span></tt></a> method or supports the sequence protocol (the\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__len__\" title=\"object.__len__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__len__()</span></tt></a> method and the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__getitem__\" title=\"object.__getitem__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__getitem__()</span></tt></a> method with integer\narguments starting at <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(54) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a reverse ",
        "iterator",
        ".  ",
        "seq",
        " must be an object which has\na ",
        "__reversed__()",
        " method or supports the sequence protocol (the\n",
        "__len__()",
        " method and the ",
        "__getitem__()",
        " method with integer\narguments starting at ",
        "0",
        ")."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 13537,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#round:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">round</tt><big>(</big><em>number</em><span class=\"optional\">[</span>, <em>ndigits</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#round\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(55) > dt#round:nth-of-type(1)",
      "text": [
        "round",
        "(",
        "number",
        "[",
        ", ",
        "ndigits",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 13566,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the floating point value <em>number</em> rounded to <em>ndigits</em> digits after\nthe decimal point.  If <em>ndigits</em> is omitted, it defaults to zero. Delegates\nto <tt class=\"docutils literal\"><span class=\"pre\">number.__round__(ndigits)</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(55) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the floating point value ",
        "number",
        " rounded to ",
        "ndigits",
        " digits after\nthe decimal point.  If ",
        "ndigits",
        " is omitted, it defaults to zero. Delegates\nto ",
        "number.__round__(ndigits)",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 13604,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For the built-in types supporting <a class=\"reference internal\" href=\"#round\" title=\"round\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">round()</span></tt></a>, values are rounded to the\nclosest multiple of 10 to the power minus <em>ndigits</em>; if two multiples are\nequally close, rounding is done toward the even choice (so, for example,\nboth <tt class=\"docutils literal\"><span class=\"pre\">round(0.5)</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">round(-0.5)</span></tt> are <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>, and <tt class=\"docutils literal\"><span class=\"pre\">round(1.5)</span></tt> is\n<tt class=\"docutils literal\"><span class=\"pre\">2</span></tt>).  The return value is an integer if called with one argument,\notherwise of the same type as <em>number</em>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(55) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For the built-in types supporting ",
        "round()",
        ", values are rounded to the\nclosest multiple of 10 to the power minus ",
        "ndigits",
        "; if two multiples are\nequally close, rounding is done toward the even choice (so, for example,\nboth ",
        "round(0.5)",
        " and ",
        "round(-0.5)",
        " are ",
        "0",
        ", and ",
        "round(1.5)",
        " is\n",
        "2",
        ").  The return value is an integer if called with one argument,\notherwise of the same type as ",
        "number",
        "."
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 295,
        "top": 13686,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The behavior of <a class=\"reference internal\" href=\"#round\" title=\"round\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">round()</span></tt></a> for floats can be surprising: for example,\n<tt class=\"docutils literal\"><span class=\"pre\">round(2.675,</span> <span class=\"pre\">2)</span></tt> gives <tt class=\"docutils literal\"><span class=\"pre\">2.67</span></tt> instead of the expected <tt class=\"docutils literal\"><span class=\"pre\">2.68</span></tt>.\nThis is not a bug: it’s a result of the fact that most decimal fractions\ncan’t be represented exactly as a float.  See <a class=\"reference internal\" href=\"../tutorial/floatingpoint.html#tut-fp-issues\"><em>Floating Point Arithmetic:  Issues and Limitations</em></a> for\nmore information.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(55) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "The behavior of ",
        "round()",
        " for floats can be surprising: for example,\n",
        "round(2.675,",
        "2)",
        " gives ",
        "2.67",
        " instead of the expected ",
        "2.68",
        ".\nThis is not a bug: it’s a result of the fact that most decimal fractions\ncan’t be represented exactly as a float.  See ",
        "Floating Point Arithmetic:  Issues and Limitations",
        " for\nmore information."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 13762,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">set</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(56) > dt:nth-of-type(1)",
      "text": [
        "set",
        "(",
        "[",
        "iterable",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 13791,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new <a class=\"reference internal\" href=\"stdtypes.html#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> object, optionally with elements taken from\n<em>iterable</em>.  <tt class=\"docutils literal\"><span class=\"pre\">set</span></tt> is a built-in class.  See <a class=\"reference internal\" href=\"stdtypes.html#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> and\n<a class=\"reference internal\" href=\"stdtypes.html#types-set\"><em>Set Types — set, frozenset</em></a> for documentation about this class.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(56) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new ",
        "set",
        " object, optionally with elements taken from\n",
        "iterable",
        ".  ",
        "set",
        " is a built-in class.  See ",
        "set",
        " and\n",
        "Set Types — set, frozenset",
        " for documentation about this class."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 13829,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For other containers see the built-in <a class=\"reference internal\" href=\"stdtypes.html#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>, <a class=\"reference internal\" href=\"stdtypes.html#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a>,\n<a class=\"reference internal\" href=\"stdtypes.html#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a>, and <a class=\"reference internal\" href=\"stdtypes.html#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> classes, as well as the <a class=\"reference internal\" href=\"collections.html#module-collections\" title=\"collections: Container datatypes\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></tt></a>\nmodule.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(56) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For other containers see the built-in ",
        "frozenset",
        ", ",
        "list",
        ",\n",
        "tuple",
        ", and ",
        "dict",
        " classes, as well as the ",
        "collections",
        "\nmodule."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 13867,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#setattr:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">setattr</tt><big>(</big><em>object</em>, <em>name</em>, <em>value</em><big>)</big><a class=\"headerlink\" href=\"#setattr\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(57) > dt#setattr:nth-of-type(1)",
      "text": [
        "setattr",
        "(",
        "object",
        ", ",
        "name",
        ", ",
        "value",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 13895,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This is the counterpart of <a class=\"reference internal\" href=\"#getattr\" title=\"getattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></tt></a>.  The arguments are an object, a\nstring and an arbitrary value.  The string may name an existing attribute or a\nnew attribute.  The function assigns the value to the attribute, provided the\nobject allows it.  For example, <tt class=\"docutils literal\"><span class=\"pre\">setattr(x,</span> <span class=\"pre\">'foobar',</span> <span class=\"pre\">123)</span></tt> is equivalent to\n<tt class=\"docutils literal\"><span class=\"pre\">x.foobar</span> <span class=\"pre\">=</span> <span class=\"pre\">123</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(57) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This is the counterpart of ",
        "getattr()",
        ".  The arguments are an object, a\nstring and an arbitrary value.  The string may name an existing attribute or a\nnew attribute.  The function assigns the value to the attribute, provided the\nobject allows it.  For example, ",
        "setattr(x,",
        "'foobar',",
        "123)",
        " is equivalent to\n",
        "x.foobar",
        "=",
        "123",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 13955,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#slice:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">slice</tt><big>(</big><em>stop</em><big>)</big><a class=\"headerlink\" href=\"#slice\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(58) > dt#slice:nth-of-type(1)",
      "text": [
        "slice",
        "(",
        "stop",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 13980,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">slice</tt><big>(</big><em>start</em>, <em>stop</em><span class=\"optional\">[</span>, <em>step</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(58) > dt:nth-of-type(2)",
      "text": [
        "slice",
        "(",
        "start",
        ", ",
        "stop",
        "[",
        ", ",
        "step",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 14009,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-7:nth-of-type(1)",
      "html": "Return a <a class=\"reference internal\" href=\"../glossary.html#term-slice\"><em class=\"xref std std-term\">slice</em></a> object representing the set of indices specified by\n<tt class=\"docutils literal\"><span class=\"pre\">range(start,</span> <span class=\"pre\">stop,</span> <span class=\"pre\">step)</span></tt>.  The <em>start</em> and <em>step</em> arguments default to\n<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.  Slice objects have read-only data attributes <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">start</span></tt>,\n<tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">stop</span></tt> and <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">step</span></tt> which merely return the argument values (or their\ndefault).  They have no other explicit functionality; however they are used by\nNumerical Python and other third party extensions.  Slice objects are also\ngenerated when extended indexing syntax is used.  For example:\n<tt class=\"docutils literal\"><span class=\"pre\">a[start:stop:step]</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">a[start:stop,</span> <span class=\"pre\">i]</span></tt>.  See <a class=\"reference internal\" href=\"itertools.html#itertools.islice\" title=\"itertools.islice\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.islice()</span></tt></a>\nfor an alternate version that returns an iterator.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(58) > dd:nth-of-type(1) > p#index-7:nth-of-type(1)",
      "text": [
        "Return a ",
        "slice",
        " object representing the set of indices specified by\n",
        "range(start,",
        "stop,",
        "step)",
        ".  The ",
        "start",
        " and ",
        "step",
        " arguments default to\n",
        "None",
        ".  Slice objects have read-only data attributes ",
        "start",
        ",\n",
        "stop",
        " and ",
        "step",
        " which merely return the argument values (or their\ndefault).  They have no other explicit functionality; however they are used by\nNumerical Python and other third party extensions.  Slice objects are also\ngenerated when extended indexing syntax is used.  For example:\n",
        "a[start:stop:step]",
        " or ",
        "a[start:stop,",
        "i]",
        ".  See ",
        "itertools.islice()",
        "\nfor an alternate version that returns an iterator."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 14113,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#sorted:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">sorted</tt><big>(</big><em>iterable[, key][, reverse]</em><big>)</big><a class=\"headerlink\" href=\"#sorted\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(59) > dt#sorted:nth-of-type(1)",
      "text": [
        "sorted",
        "(",
        "iterable[, key][, reverse]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14141,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new sorted list from the items in <em>iterable</em>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(59) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new sorted list from the items in ",
        "iterable",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14179,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Has two optional arguments which must be specified as keyword arguments.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(59) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Has two optional arguments which must be specified as keyword arguments."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 14217,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<em>key</em> specifies a function of one argument that is used to extract a comparison\nkey from each list element: <tt class=\"docutils literal\"><span class=\"pre\">key=str.lower</span></tt>.  The default value is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>\n(compare the elements directly).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(59) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "key",
        " specifies a function of one argument that is used to extract a comparison\nkey from each list element: ",
        "key=str.lower",
        ".  The default value is ",
        "None",
        "\n(compare the elements directly)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14277,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "<em>reverse</em> is a boolean value.  If set to <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>, then the list elements are\nsorted as if each comparison were reversed.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(59) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "reverse",
        " is a boolean value.  If set to ",
        "True",
        ", then the list elements are\nsorted as if each comparison were reversed."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14315,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Use <a class=\"reference internal\" href=\"functools.html#functools.cmp_to_key\" title=\"functools.cmp_to_key\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">functools.cmp_to_key()</span></tt></a> to convert an old-style <em>cmp</em> function to a\n<em>key</em> function.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(59) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Use ",
        "functools.cmp_to_key()",
        " to convert an old-style ",
        "cmp",
        " function to a\n",
        "key",
        " function."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14353,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "For sorting examples and a brief sorting tutorial, see <a class=\"reference external\" href=\"http://wiki.python.org/moin/HowTo/Sorting/\">Sorting HowTo</a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(59) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "For sorting examples and a brief sorting tutorial, see ",
        "Sorting HowTo",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 14391,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#staticmethod:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">staticmethod</tt><big>(</big><em>function</em><big>)</big><a class=\"headerlink\" href=\"#staticmethod\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dt#staticmethod:nth-of-type(1)",
      "text": [
        "staticmethod",
        "(",
        "function",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14419,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a static method for <em>function</em>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a static method for ",
        "function",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14457,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A static method does not receive an implicit first argument. To declare a static\nmethod, use this idiom:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "A static method does not receive an implicit first argument. To declare a static\nmethod, use this idiom:"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 14495,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "C",
        ":",
        "@staticmethod",
        "def",
        "f",
        "(",
        "arg1",
        ",",
        "arg2",
        ",",
        "...",
        "):",
        "..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14576,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <tt class=\"docutils literal\"><span class=\"pre\">@staticmethod</span></tt> form is a function <a class=\"reference internal\" href=\"../glossary.html#term-decorator\"><em class=\"xref std std-term\">decorator</em></a> – see the\ndescription of function definitions in <a class=\"reference internal\" href=\"../reference/compound_stmts.html#function\"><em>Function definitions</em></a> for details.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "@staticmethod",
        " form is a function ",
        "decorator",
        " – see the\ndescription of function definitions in ",
        "Function definitions",
        " for details."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14614,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "It can be called either on the class (such as <tt class=\"docutils literal\"><span class=\"pre\">C.f()</span></tt>) or on an instance (such\nas <tt class=\"docutils literal\"><span class=\"pre\">C().f()</span></tt>).  The instance is ignored except for its class.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "It can be called either on the class (such as ",
        "C.f()",
        ") or on an instance (such\nas ",
        "C().f()",
        ").  The instance is ignored except for its class."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14652,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Static methods in Python are similar to those found in Java or C++. Also see\n<a class=\"reference internal\" href=\"#classmethod\" title=\"classmethod\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">classmethod()</span></tt></a> for a variant that is useful for creating alternate class\nconstructors.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Static methods in Python are similar to those found in Java or C++. Also see\n",
        "classmethod()",
        " for a variant that is useful for creating alternate class\nconstructors."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14690,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "For more information on static methods, consult the documentation on the\nstandard type hierarchy in <a class=\"reference internal\" href=\"../reference/datamodel.html#types\"><em>The standard type hierarchy</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(60) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "For more information on static methods, consult the documentation on the\nstandard type hierarchy in ",
        "The standard type hierarchy",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 14728,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">str</tt><big>(</big><em>object=''</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(61) > dt:nth-of-type(1)",
      "text": [
        "str",
        "(",
        "object=''",
        ")"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 14753,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">str</tt><big>(</big><em>object=b''</em>, <em>encoding='utf-8'</em>, <em>errors='strict'</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(61) > dt:nth-of-type(2)",
      "text": [
        "str",
        "(",
        "object=b''",
        ", ",
        "encoding='utf-8'",
        ", ",
        "errors='strict'",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14781,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></tt></a> version of <em>object</em>.  See <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a> for details.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(61) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a ",
        "str",
        " version of ",
        "object",
        ".  See ",
        "str()",
        " for details."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 14819,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">str</span></tt> is the built-in string <a class=\"reference internal\" href=\"../glossary.html#term-class\"><em class=\"xref std std-term\">class</em></a>.  For general information\nabout strings, see <a class=\"reference internal\" href=\"stdtypes.html#textseq\"><em>Text Sequence Type — str</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(61) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "str",
        " is the built-in string ",
        "class",
        ".  For general information\nabout strings, see ",
        "Text Sequence Type — str",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 14857,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#sum:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">sum</tt><big>(</big><em>iterable</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#sum\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(62) > dt#sum:nth-of-type(1)",
      "text": [
        "sum",
        "(",
        "iterable",
        "[",
        ", ",
        "start",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 14886,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Sums <em>start</em> and the items of an <em>iterable</em> from left to right and returns the\ntotal.  <em>start</em> defaults to <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>. The <em>iterable</em>‘s items are normally numbers,\nand the start value is not allowed to be a string.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(62) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Sums ",
        "start",
        " and the items of an ",
        "iterable",
        " from left to right and returns the\ntotal.  ",
        "start",
        " defaults to ",
        "0",
        ". The ",
        "iterable",
        "‘s items are normally numbers,\nand the start value is not allowed to be a string."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 14946,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For some use cases, there are good alternatives to <a class=\"reference internal\" href=\"#sum\" title=\"sum\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sum()</span></tt></a>.\nThe preferred, fast way to concatenate a sequence of strings is by calling\n<tt class=\"docutils literal\"><span class=\"pre\">''.join(sequence)</span></tt>.  To add floating point values with extended precision,\nsee <a class=\"reference internal\" href=\"math.html#math.fsum\" title=\"math.fsum\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">math.fsum()</span></tt></a>.  To concatenate a series of iterables, consider using\n<a class=\"reference internal\" href=\"itertools.html#itertools.chain\" title=\"itertools.chain\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.chain()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(62) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For some use cases, there are good alternatives to ",
        "sum()",
        ".\nThe preferred, fast way to concatenate a sequence of strings is by calling\n",
        "''.join(sequence)",
        ".  To add floating point values with extended precision,\nsee ",
        "math.fsum()",
        ".  To concatenate a series of iterables, consider using\n",
        "itertools.chain()",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 15006,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#super:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">super</tt><big>(</big><span class=\"optional\">[</span><em>type</em><span class=\"optional\">[</span>, <em>object-or-type</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#super\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dt#super:nth-of-type(1)",
      "text": [
        "super",
        "(",
        "[",
        "type",
        "[",
        ", ",
        "object-or-type",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 15035,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a proxy object that delegates method calls to a parent or sibling\nclass of <em>type</em>.  This is useful for accessing inherited methods that have\nbeen overridden in a class. The search order is same as that used by\n<a class=\"reference internal\" href=\"#getattr\" title=\"getattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></tt></a> except that the <em>type</em> itself is skipped.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a proxy object that delegates method calls to a parent or sibling\nclass of ",
        "type",
        ".  This is useful for accessing inherited methods that have\nbeen overridden in a class. The search order is same as that used by\n",
        "getattr()",
        " except that the ",
        "type",
        " itself is skipped."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 15095,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__mro__</span></tt> attribute of the <em>type</em> lists the method resolution\nsearch order used by both <a class=\"reference internal\" href=\"#getattr\" title=\"getattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></tt></a> and <a class=\"reference internal\" href=\"#super\" title=\"super\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></tt></a>.  The attribute\nis dynamic and can change whenever the inheritance hierarchy is updated.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The ",
        "__mro__",
        " attribute of the ",
        "type",
        " lists the method resolution\nsearch order used by both ",
        "getattr()",
        " and ",
        "super()",
        ".  The attribute\nis dynamic and can change whenever the inheritance hierarchy is updated."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 15155,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If the second argument is omitted, the super object returned is unbound.  If\nthe second argument is an object, <tt class=\"docutils literal\"><span class=\"pre\">isinstance(obj,</span> <span class=\"pre\">type)</span></tt> must be true.  If\nthe second argument is a type, <tt class=\"docutils literal\"><span class=\"pre\">issubclass(type2,</span> <span class=\"pre\">type)</span></tt> must be true (this\nis useful for classmethods).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If the second argument is omitted, the super object returned is unbound.  If\nthe second argument is an object, ",
        "isinstance(obj,",
        "type)",
        " must be true.  If\nthe second argument is a type, ",
        "issubclass(type2,",
        "type)",
        " must be true (this\nis useful for classmethods)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 15215,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "There are two typical use cases for <em>super</em>.  In a class hierarchy with\nsingle inheritance, <em>super</em> can be used to refer to parent classes without\nnaming them explicitly, thus making the code more maintainable.  This use\nclosely parallels the use of <em>super</em> in other programming languages.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "There are two typical use cases for ",
        "super",
        ".  In a class hierarchy with\nsingle inheritance, ",
        "super",
        " can be used to refer to parent classes without\nnaming them explicitly, thus making the code more maintainable.  This use\nclosely parallels the use of ",
        "super",
        " in other programming languages."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 15275,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "The second use case is to support cooperative multiple inheritance in a\ndynamic execution environment.  This use case is unique to Python and is\nnot found in statically compiled languages or languages that only support\nsingle inheritance.  This makes it possible to implement “diamond diagrams”\nwhere multiple base classes implement the same method.  Good design dictates\nthat this method have the same calling signature in every case (because the\norder of calls is determined at runtime, because that order adapts\nto changes in the class hierarchy, and because that order can include\nsibling classes that are unknown prior to runtime).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "The second use case is to support cooperative multiple inheritance in a\ndynamic execution environment.  This use case is unique to Python and is\nnot found in statically compiled languages or languages that only support\nsingle inheritance.  This makes it possible to implement “diamond diagrams”\nwhere multiple base classes implement the same method.  Good design dictates\nthat this method have the same calling signature in every case (because the\norder of calls is determined at runtime, because that order adapts\nto changes in the class hierarchy, and because that order can include\nsibling classes that are unknown prior to runtime)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15379,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "For both use cases, a typical superclass call looks like this:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "For both use cases, a typical superclass call looks like this:"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 15417,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>    <span class=\"c\"># This does the same thing as:</span>\n                               <span class=\"c\"># super(C, self).method(arg)</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "C",
        "(",
        "B",
        "):",
        "def",
        "method",
        "(",
        "self",
        ",",
        "arg",
        "):",
        "super",
        "()",
        ".",
        "method",
        "(",
        "arg",
        ")",
        "# This does the same thing as:",
        "# super(C, self).method(arg)"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 15516,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Note that <a class=\"reference internal\" href=\"#super\" title=\"super\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></tt></a> is implemented as part of the binding process for\nexplicit dotted attribute lookups such as <tt class=\"docutils literal\"><span class=\"pre\">super().__getitem__(name)</span></tt>.\nIt does so by implementing its own <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__getattribute__\" title=\"object.__getattribute__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__getattribute__()</span></tt></a> method for searching\nclasses in a predictable order that supports cooperative multiple inheritance.\nAccordingly, <a class=\"reference internal\" href=\"#super\" title=\"super\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></tt></a> is undefined for implicit lookups using statements or\noperators such as <tt class=\"docutils literal\"><span class=\"pre\">super()[name]</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "Note that ",
        "super()",
        " is implemented as part of the binding process for\nexplicit dotted attribute lookups such as ",
        "super().__getitem__(name)",
        ".\nIt does so by implementing its own ",
        "__getattribute__()",
        " method for searching\nclasses in a predictable order that supports cooperative multiple inheritance.\nAccordingly, ",
        "super()",
        " is undefined for implicit lookups using statements or\noperators such as ",
        "super()[name]",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 15598,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "Also note that, aside from the zero argument form, <a class=\"reference internal\" href=\"#super\" title=\"super\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></tt></a> is not\nlimited to use inside methods.  The two argument form specifies the\narguments exactly and makes the appropriate references.  The zero\nargument form only works inside a class definition, as the compiler fills\nin the necessary details to correctly retrieve the class being defined,\nas well as accessing the current instance for ordinary methods.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "Also note that, aside from the zero argument form, ",
        "super()",
        " is not\nlimited to use inside methods.  The two argument form specifies the\narguments exactly and makes the appropriate references.  The zero\nargument form only works inside a class definition, as the compiler fills\nin the necessary details to correctly retrieve the class being defined,\nas well as accessing the current instance for ordinary methods."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15680,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "For practical suggestions on how to design cooperative classes using\n<a class=\"reference internal\" href=\"#super\" title=\"super\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></tt></a>, see <a class=\"reference external\" href=\"http://rhettinger.wordpress.com/2011/05/26/super-considered-super/\">guide to using super()</a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(63) > dd:nth-of-type(1) > p:nth-of-type(9)",
      "text": [
        "For practical suggestions on how to design cooperative classes using\n",
        "super()",
        ", see ",
        "guide to using super()",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 15718,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">tuple</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(64) > dt:nth-of-type(1)",
      "text": [
        "tuple",
        "(",
        "[",
        "iterable",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15747,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Rather than being a function, <a class=\"reference internal\" href=\"stdtypes.html#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a> is actually an immutable\nsequence type, as documented in <a class=\"reference internal\" href=\"stdtypes.html#typesseq-tuple\"><em>Tuples</em></a> and <a class=\"reference internal\" href=\"stdtypes.html#typesseq\"><em>Sequence Types — list, tuple, range</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(64) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Rather than being a function, ",
        "tuple",
        " is actually an immutable\nsequence type, as documented in ",
        "Tuples",
        " and ",
        "Sequence Types — list, tuple, range",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 15785,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#type:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">type</tt><big>(</big><em>object</em><big>)</big><a class=\"headerlink\" href=\"#type\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dt#type:nth-of-type(1)",
      "text": [
        "type",
        "(",
        "object",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 15810,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">type</tt><big>(</big><em>name</em>, <em>bases</em>, <em>dict</em><big>)</big>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dt:nth-of-type(2)",
      "text": [
        "type",
        "(",
        "name",
        ", ",
        "bases",
        ", ",
        "dict",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15838,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-9:nth-of-type(1)",
      "html": "With one argument, return the type of an <em>object</em>.  The return value is a\ntype object and generally the same object as returned by <tt class=\"docutils literal\"><span class=\"pre\">object.__class__</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dd:nth-of-type(1) > p#index-9:nth-of-type(1)",
      "text": [
        "With one argument, return the type of an ",
        "object",
        ".  The return value is a\ntype object and generally the same object as returned by ",
        "object.__class__",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15876,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <a class=\"reference internal\" href=\"#isinstance\" title=\"isinstance\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">isinstance()</span></tt></a> built-in function is recommended for testing the type\nof an object, because it takes subclasses into account.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The ",
        "isinstance()",
        " built-in function is recommended for testing the type\nof an object, because it takes subclasses into account."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 15914,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "With three arguments, return a new type object.  This is essentially a\ndynamic form of the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#class\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">class</span></tt></a> statement. The <em>name</em> string is the\nclass name and becomes the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__name__</span></tt> attribute; the <em>bases</em> tuple\nitemizes the base classes and becomes the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__bases__</span></tt> attribute;\nand the <em>dict</em> dictionary is the namespace containing definitions for class\nbody and becomes the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt> attribute.  For example, the\nfollowing two statements create identical <a class=\"reference internal\" href=\"#type\" title=\"type\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">type</span></tt></a> objects:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "With three arguments, return a new type object.  This is essentially a\ndynamic form of the ",
        "class",
        " statement. The ",
        "name",
        " string is the\nclass name and becomes the ",
        "__name__",
        " attribute; the ",
        "bases",
        " tuple\nitemizes the base classes and becomes the ",
        "__bases__",
        " attribute;\nand the ",
        "dict",
        " dictionary is the namespace containing definitions for class\nbody and becomes the ",
        "__dict__",
        " attribute.  For example, the\nfollowing two statements create identical ",
        "type",
        " objects:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 15996,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 15996,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">X</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"s\">'X'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">,),</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "class",
        "X",
        ":",
        "... ",
        "a",
        "=",
        "1",
        "...",
        ">>> ",
        "X",
        "=",
        "type",
        "(",
        "'X'",
        ",",
        "(",
        "object",
        ",),",
        "dict",
        "(",
        "a",
        "=",
        "1",
        "))"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16095,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "See also <a class=\"reference internal\" href=\"stdtypes.html#bltin-type-objects\"><em>Type Objects</em></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(65) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "See also ",
        "Type Objects",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 16133,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#vars:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">vars</tt><big>(</big><span class=\"optional\">[</span><em>object</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#vars\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(66) > dt#vars:nth-of-type(1)",
      "text": [
        "vars",
        "(",
        "[",
        "object",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16162,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt> attribute for a module, class, instance,\nor any other object with a <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt> attribute.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(66) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the ",
        "__dict__",
        " attribute for a module, class, instance,\nor any other object with a ",
        "__dict__",
        " attribute."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 16200,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Objects such as modules and instances have an updateable <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt>\nattribute; however, other objects may have write restrictions on their\n<tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt> attributes (for example, classes use a\ndictproxy to prevent direct dictionary updates).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(66) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Objects such as modules and instances have an updateable ",
        "__dict__",
        "\nattribute; however, other objects may have write restrictions on their\n",
        "__dict__",
        " attributes (for example, classes use a\ndictproxy to prevent direct dictionary updates)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16260,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Without an argument, <a class=\"reference internal\" href=\"#vars\" title=\"vars\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">vars()</span></tt></a> acts like <a class=\"reference internal\" href=\"#locals\" title=\"locals\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></tt></a>.  Note, the\nlocals dictionary is only useful for reads since updates to the locals\ndictionary are ignored.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(66) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Without an argument, ",
        "vars()",
        " acts like ",
        "locals()",
        ".  Note, the\nlocals dictionary is only useful for reads since updates to the locals\ndictionary are ignored."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 16298,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#zip:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">zip</tt><big>(</big><em>*iterables</em><big>)</big><a class=\"headerlink\" href=\"#zip\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dt#zip:nth-of-type(1)",
      "text": [
        "zip",
        "(",
        "*iterables",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16326,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Make an iterator that aggregates elements from each of the iterables.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Make an iterator that aggregates elements from each of the iterables."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 16364,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Returns an iterator of tuples, where the <em>i</em>-th tuple contains\nthe <em>i</em>-th element from each of the argument sequences or iterables.  The\niterator stops when the shortest input iterable is exhausted. With a single\niterable argument, it returns an iterator of 1-tuples.  With no arguments,\nit returns an empty iterator.  Equivalent to:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Returns an iterator of tuples, where the ",
        "i",
        "-th tuple contains\nthe ",
        "i",
        "-th element from each of the argument sequences or iterables.  The\niterator stops when the shortest input iterable is exhausted. With a single\niterable argument, it returns an iterator of 1-tuples.  With no arguments,\nit returns an empty iterator.  Equivalent to:"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 295,
        "top": 16424,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">iterables</span><span class=\"p\">):</span>\n    <span class=\"c\"># zip('ABCD', 'xy') --&gt; Ax By</span>\n    <span class=\"n\">sentinel</span> <span class=\"o\">=</span> <span class=\"nb\">object</span><span class=\"p\">()</span>\n    <span class=\"n\">iterators</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">it</span> <span class=\"ow\">in</span> <span class=\"n\">iterables</span><span class=\"p\">]</span>\n    <span class=\"k\">while</span> <span class=\"n\">iterators</span><span class=\"p\">:</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">it</span> <span class=\"ow\">in</span> <span class=\"n\">iterators</span><span class=\"p\">:</span>\n            <span class=\"n\">elem</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">,</span> <span class=\"n\">sentinel</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">elem</span> <span class=\"ow\">is</span> <span class=\"n\">sentinel</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span>\n            <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"p\">)</span>\n        <span class=\"k\">yield</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "zip",
        "(",
        "*",
        "iterables",
        "):",
        "# zip('ABCD', 'xy') --> Ax By",
        "sentinel",
        "=",
        "object",
        "()",
        "iterators",
        "=",
        "[",
        "iter",
        "(",
        "it",
        ")",
        "for",
        "it",
        "in",
        "iterables",
        "]",
        "while",
        "iterators",
        ":",
        "result",
        "=",
        "[]",
        "for",
        "it",
        "in",
        "iterators",
        ":",
        "elem",
        "=",
        "next",
        "(",
        "it",
        ",",
        "sentinel",
        ")",
        "if",
        "elem",
        "is",
        "sentinel",
        ":",
        "return",
        "result",
        ".",
        "append",
        "(",
        "elem",
        ")",
        "yield",
        "tuple",
        "(",
        "result",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16667,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The left-to-right evaluation order of the iterables is guaranteed. This\nmakes possible an idiom for clustering a data series into n-length groups\nusing <tt class=\"docutils literal\"><span class=\"pre\">zip(*[iter(s)]*n)</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The left-to-right evaluation order of the iterables is guaranteed. This\nmakes possible an idiom for clustering a data series into n-length groups\nusing ",
        "zip(*[iter(s)]*n)",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 16705,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#zip\" title=\"zip\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">zip()</span></tt></a> should only be used with unequal length inputs when you don’t\ncare about trailing, unmatched values from the longer iterables.  If those\nvalues are important, use <a class=\"reference internal\" href=\"itertools.html#itertools.zip_longest\" title=\"itertools.zip_longest\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.zip_longest()</span></tt></a> instead.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "zip()",
        " should only be used with unequal length inputs when you don’t\ncare about trailing, unmatched values from the longer iterables.  If those\nvalues are important, use ",
        "itertools.zip_longest()",
        " instead."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16765,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#zip\" title=\"zip\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">zip()</span></tt></a> in conjunction with the <tt class=\"docutils literal\"><span class=\"pre\">*</span></tt> operator can be used to unzip a\nlist:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "zip()",
        " in conjunction with the ",
        "*",
        " operator can be used to unzip a\nlist:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 16803,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 156,
        "left": 295,
        "top": 16803,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">zipped</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">zipped</span><span class=\"p\">)</span>\n<span class=\"go\">[(1, 4), (2, 5), (3, 6)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y2</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">x2</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">y2</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(67) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "x",
        "=",
        "[",
        "1",
        ",",
        "2",
        ",",
        "3",
        "]",
        ">>> ",
        "y",
        "=",
        "[",
        "4",
        ",",
        "5",
        ",",
        "6",
        "]",
        ">>> ",
        "zipped",
        "=",
        "zip",
        "(",
        "x",
        ",",
        "y",
        ")",
        ">>> ",
        "list",
        "(",
        "zipped",
        ")",
        "[(1, 4), (2, 5), (3, 6)]",
        ">>> ",
        "x2",
        ",",
        "y2",
        "=",
        "zip",
        "(",
        "*",
        "zip",
        "(",
        "x",
        ",",
        "y",
        "))",
        ">>> ",
        "x",
        "==",
        "list",
        "(",
        "x2",
        ")",
        "and",
        "y",
        "==",
        "list",
        "(",
        "y2",
        ")",
        "True"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 16975,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#__import__:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">__import__</tt><big>(</big><em>name</em>, <em>globals=None</em>, <em>locals=None</em>, <em>fromlist=()</em>, <em>level=0</em><big>)</big><a class=\"headerlink\" href=\"#__import__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dt#__import__:nth-of-type(1)",
      "text": [
        "__import__",
        "(",
        "name",
        ", ",
        "globals=None",
        ", ",
        "locals=None",
        ", ",
        "fromlist=()",
        ", ",
        "level=0",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 295,
        "top": 17010,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div#index-10.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">This is an advanced function that is not needed in everyday Python\nprogramming, unlike <a class=\"reference internal\" href=\"importlib.html#importlib.import_module\" title=\"importlib.import_module\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">importlib.import_module()</span></tt></a>.</p>\n",
      "path": "div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > div#index-10.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "This is an advanced function that is not needed in everyday Python\nprogramming, unlike ",
        "importlib.import_module()",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 17058,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This function is invoked by the <a class=\"reference internal\" href=\"../reference/simple_stmts.html#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement.  It can be\nreplaced (by importing the <a class=\"reference internal\" href=\"builtins.html#module-builtins\" title=\"builtins: The module that provides the built-in namespace.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">builtins</span></tt></a> module and assigning to\n<tt class=\"docutils literal\"><span class=\"pre\">builtins.__import__</span></tt>) in order to change semantics of the\n<a class=\"reference internal\" href=\"../reference/simple_stmts.html#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement, but nowadays it is usually simpler to use import\nhooks (see <span class=\"target\" id=\"index-11\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0302\"><strong>PEP 302</strong></a>) to attain the same goals.  Direct use of\n<a class=\"reference internal\" href=\"#__import__\" title=\"__import__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></tt></a> is entirely discouraged in favor of\n<a class=\"reference internal\" href=\"importlib.html#importlib.import_module\" title=\"importlib.import_module\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">importlib.import_module()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This function is invoked by the ",
        "import",
        " statement.  It can be\nreplaced (by importing the ",
        "builtins",
        " module and assigning to\n",
        "builtins.__import__",
        ") in order to change semantics of the\n",
        "import",
        " statement, but nowadays it is usually simpler to use import\nhooks (see ",
        "PEP 302",
        ") to attain the same goals.  Direct use of\n",
        "__import__()",
        " is entirely discouraged in favor of\n",
        "importlib.import_module()",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 17140,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The function imports the module <em>name</em>, potentially using the given <em>globals</em>\nand <em>locals</em> to determine how to interpret the name in a package context.\nThe <em>fromlist</em> gives the names of objects or submodules that should be\nimported from the module given by <em>name</em>.  The standard implementation does\nnot use its <em>locals</em> argument at all, and uses its <em>globals</em> only to\ndetermine the package context of the <a class=\"reference internal\" href=\"../reference/simple_stmts.html#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The function imports the module ",
        "name",
        ", potentially using the given ",
        "globals",
        "\nand ",
        "locals",
        " to determine how to interpret the name in a package context.\nThe ",
        "fromlist",
        " gives the names of objects or submodules that should be\nimported from the module given by ",
        "name",
        ".  The standard implementation does\nnot use its ",
        "locals",
        " argument at all, and uses its ",
        "globals",
        " only to\ndetermine the package context of the ",
        "import",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 17222,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<em>level</em> specifies whether to use absolute or relative imports. <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt> (the\ndefault) means only perform absolute imports.  Positive values for\n<em>level</em> indicate the number of parent directories to search relative to the\ndirectory of the module calling <a class=\"reference internal\" href=\"#__import__\" title=\"__import__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></tt></a> (see <span class=\"target\" id=\"index-12\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0328\"><strong>PEP 328</strong></a> for the\ndetails).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "level",
        " specifies whether to use absolute or relative imports. ",
        "0",
        " (the\ndefault) means only perform absolute imports.  Positive values for\n",
        "level",
        " indicate the number of parent directories to search relative to the\ndirectory of the module calling ",
        "__import__()",
        " (see ",
        "PEP 328",
        " for the\ndetails)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 17282,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "When the <em>name</em> variable is of the form <tt class=\"docutils literal\"><span class=\"pre\">package.module</span></tt>, normally, the\ntop-level package (the name up till the first dot) is returned, <em>not</em> the\nmodule named by <em>name</em>.  However, when a non-empty <em>fromlist</em> argument is\ngiven, the module named by <em>name</em> is returned.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "When the ",
        "name",
        " variable is of the form ",
        "package.module",
        ", normally, the\ntop-level package (the name up till the first dot) is returned, ",
        "not",
        " the\nmodule named by ",
        "name",
        ".  However, when a non-empty ",
        "fromlist",
        " argument is\ngiven, the module named by ",
        "name",
        " is returned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17342,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "For example, the statement <tt class=\"docutils literal\"><span class=\"pre\">import</span> <span class=\"pre\">spam</span></tt> results in bytecode resembling the\nfollowing code:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "For example, the statement ",
        "import",
        "spam",
        " results in bytecode resembling the\nfollowing code:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 295,
        "top": 17380,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"n\">spam</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s\">'spam'</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">(),</span> <span class=\"p\">[],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "spam",
        "=",
        "__import__",
        "(",
        "'spam'",
        ",",
        "globals",
        "(),",
        "locals",
        "(),",
        "[],",
        "0",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17425,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The statement <tt class=\"docutils literal\"><span class=\"pre\">import</span> <span class=\"pre\">spam.ham</span></tt> results in this call:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "The statement ",
        "import",
        "spam.ham",
        " results in this call:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 295,
        "top": 17463,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"n\">spam</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s\">'spam.ham'</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">(),</span> <span class=\"p\">[],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "spam",
        "=",
        "__import__",
        "(",
        "'spam.ham'",
        ",",
        "globals",
        "(),",
        "locals",
        "(),",
        "[],",
        "0",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17508,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Note how <a class=\"reference internal\" href=\"#__import__\" title=\"__import__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></tt></a> returns the toplevel module here because this is\nthe object that is bound to a name by the <a class=\"reference internal\" href=\"../reference/simple_stmts.html#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "Note how ",
        "__import__()",
        " returns the toplevel module here because this is\nthe object that is bound to a name by the ",
        "import",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17546,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "On the other hand, the statement <tt class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">spam.ham</span> <span class=\"pre\">import</span> <span class=\"pre\">eggs,</span> <span class=\"pre\">sausage</span> <span class=\"pre\">as</span>\n<span class=\"pre\">saus</span></tt> results in",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "On the other hand, the statement ",
        "from",
        "spam.ham",
        "import",
        "eggs,",
        "sausage",
        "as",
        "saus",
        " results in"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 17584,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"n\">_temp</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s\">'spam.ham'</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"s\">'eggs'</span><span class=\"p\">,</span> <span class=\"s\">'sausage'</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">eggs</span> <span class=\"o\">=</span> <span class=\"n\">_temp</span><span class=\"o\">.</span><span class=\"n\">eggs</span>\n<span class=\"n\">saus</span> <span class=\"o\">=</span> <span class=\"n\">_temp</span><span class=\"o\">.</span><span class=\"n\">sausage</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "_temp",
        "=",
        "__import__",
        "(",
        "'spam.ham'",
        ",",
        "globals",
        "(),",
        "locals",
        "(),",
        "[",
        "'eggs'",
        ",",
        "'sausage'",
        "],",
        "0",
        ")",
        "eggs",
        "=",
        "_temp",
        ".",
        "eggs",
        "saus",
        "=",
        "_temp",
        ".",
        "sausage"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17665,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "Here, the <tt class=\"docutils literal\"><span class=\"pre\">spam.ham</span></tt> module is returned from <a class=\"reference internal\" href=\"#__import__\" title=\"__import__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></tt></a>.  From this\nobject, the names to import are retrieved and assigned to their respective\nnames.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(9)",
      "text": [
        "Here, the ",
        "spam.ham",
        " module is returned from ",
        "__import__()",
        ".  From this\nobject, the names to import are retrieved and assigned to their respective\nnames."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17703,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "If you simply want to import a module (potentially within a package) by name,\nuse <a class=\"reference internal\" href=\"importlib.html#importlib.import_module\" title=\"importlib.import_module\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">importlib.import_module()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p:nth-of-type(10)",
      "text": [
        "If you simply want to import a module (potentially within a package) by name,\nuse ",
        "importlib.import_module()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17741,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(11)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> Negative values for <em>level</em> are no longer supported (which also changes\nthe default value to 0).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > dl.function:nth-of-type(68) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(11)",
      "text": [
        "Changed in version 3.3:",
        " Negative values for ",
        "level",
        " are no longer supported (which also changes\nthe default value to 0)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 17793,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "30px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.rubric:nth-of-type(2)",
      "html": "Footnotes",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > p.rubric:nth-of-type(2)",
      "text": [
        "Footnotes"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 17831,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id1\">[1]</a>",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table#id2.docutils.footnote:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[1]"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 300,
        "top": 17831,
        "width": 1284
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Note that the parser only accepts the Unix-style end of line convention.\nIf you are reading the code from a file, make sure to use newline conversion\nmode to convert Windows or Mac-style newlines.",
      "path": "div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-functions.section:nth-of-type(1) > table#id2.docutils.footnote:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "Note that the parser only accepts the Unix-style end of line convention.\nIf you are reading the code from a file, make sure to use newline conversion\nmode to convert Windows or Mac-style newlines."
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 105,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(1)",
      "html": "Previous topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(1)",
      "text": [
        "Previous topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 126,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(1)",
      "html": "<a href=\"intro.html\" title=\"previous chapter\">1. Introduction</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(1)",
      "text": [
        "1. Introduction"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 168,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(2)",
      "html": "Next topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(2)",
      "text": [
        "Next topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 189,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(2)",
      "html": "<a href=\"constants.html\" title=\"next chapter\">3. Built-in Constants</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(2)",
      "text": [
        "3. Built-in Constants"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 233,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "This Page",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "This Page"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 259,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a href=\"../bugs.html\">Report a Bug</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Report a Bug"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 275,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a href=\"../_sources/library/functions.txt\" rel=\"nofollow\">Show Source</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Show Source"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 319,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "Quick search",
      "path": "div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Quick search"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 26,
        "top": 382,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "12px",
        "line-height": "16px",
        "margin-bottom": "12px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "12px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.searchtip:nth-of-type(1)",
      "html": "\n    Enter search terms or a module, class or function name.\n    ",
      "path": "div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > p.searchtip:nth-of-type(1)",
      "text": [
        "\n    Enter search terms or a module, class or function name.\n    "
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 235,
        "top": 1990,
        "width": 9
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "cursor": "pointer",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "position": "fixed"
      },
      "element": "span:nth-of-type(1)",
      "html": "«",
      "path": "div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div#sidebarbutton:nth-of-type(2) > span:nth-of-type(1)",
      "text": [
        "«"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 17902,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 17902,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 17902,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"constants.html\" title=\"3. Built-in Constants\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 17902,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"intro.html\" title=\"1. Introduction\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 17902,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"constants.html\" title=\"3. Built-in Constants\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"intro.html\" title=\"1. Introduction\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Standard Library</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »"
      ]
    },
    {
      "bound": {
        "height": 90,
        "left": 16,
        "top": 17932,
        "width": 1558
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(85, 85, 85)",
        "border-left-color": "rgb(85, 85, 85)",
        "border-right-color": "rgb(85, 85, 85)",
        "border-top-color": "rgb(85, 85, 85)",
        "color": "rgb(85, 85, 85)",
        "font-size": "12px",
        "line-height": "18px",
        "margin-left": "0px",
        "margin-right": "10px",
        "margin-top": "-24px",
        "outline-color": "rgb(85, 85, 85)",
        "padding-bottom": "9px",
        "padding-top": "9px",
        "text-align": "right"
      },
      "element": "div.footer:nth-of-type(4)",
      "html": "\n    © <a href=\"../copyright.html\">Copyright</a> 1990-2013, Python Software Foundation.\n    <br>\n    The Python Software Foundation is a non-profit corporation.\n    <a href=\"http://www.python.org/psf/donations/\">Please donate.</a>\n    <br>\n    Last updated on Aug 14, 2013.\n    <a href=\"../bugs.html\">Found a bug</a>?\n    <br>\n    Created using <a href=\"http://sphinx.pocoo.org/\">Sphinx</a> 1.0.7.\n    ",
      "path": "div",
      "selector": "div.footer:nth-of-type(4)",
      "text": [
        "\n    © ",
        "Copyright",
        " 1990-2013, Python Software Foundation.\n    ",
        "\n    The Python Software Foundation is a non-profit corporation.\n    ",
        "Please donate.",
        "\n    Last updated on Aug 14, 2013.\n    ",
        "Found a bug",
        "?\n    ",
        "\n    Created using ",
        "Sphinx",
        " 1.0.7.\n    "
      ]
    }
  ],
  "images": [
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 21,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 17909,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    }
  ]
}
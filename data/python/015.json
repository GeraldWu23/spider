{
  "body": {
    "bound": {
      "height": 10232,
      "left": 16,
      "top": 7,
      "width": 1568
    },
    "computed": {
      "alignment-baseline": "auto",
      "background-attachment": "scroll",
      "background-clip": "border-box",
      "background-color": "rgb(255, 255, 255)",
      "background-image": "none",
      "background-origin": "padding-box",
      "background-position": "0% 0%",
      "background-repeat": "repeat",
      "background-size": "auto auto",
      "baseline-shift": "baseline",
      "border-bottom-color": "rgb(0, 0, 0)",
      "border-bottom-left-radius": "0px",
      "border-bottom-right-radius": "0px",
      "border-bottom-style": "none",
      "border-bottom-width": "0px",
      "border-collapse": "separate",
      "border-left-color": "rgb(0, 0, 0)",
      "border-left-style": "none",
      "border-left-width": "0px",
      "border-right-color": "rgb(0, 0, 0)",
      "border-right-style": "none",
      "border-right-width": "0px",
      "border-top-color": "rgb(0, 0, 0)",
      "border-top-left-radius": "0px",
      "border-top-right-radius": "0px",
      "border-top-style": "none",
      "border-top-width": "0px",
      "bottom": "auto",
      "box-shadow": "none",
      "box-sizing": "content-box",
      "caption-side": "top",
      "clear": "none",
      "clip": "auto",
      "clip-path": "none",
      "clip-rule": "nonzero",
      "color": "rgb(0, 0, 0)",
      "color-interpolation": "srgb",
      "color-interpolation-filters": "linearrgb",
      "color-rendering": "auto",
      "cursor": "auto",
      "direction": "ltr",
      "display": "block",
      "dominant-baseline": "auto",
      "empty-cells": "show",
      "fill": "#000000",
      "fill-opacity": "1",
      "fill-rule": "nonzero",
      "filter": "none",
      "float": "none",
      "flood-color": "rgb(0, 0, 0)",
      "flood-opacity": "1",
      "font-family": "'Lucida Grande', Arial, sans-serif",
      "font-size": "16px",
      "font-style": "normal",
      "font-variant": "normal",
      "font-weight": "normal",
      "glyph-orientation-horizontal": "0deg",
      "glyph-orientation-vertical": "auto",
      "height": "10232px",
      "image-rendering": "auto",
      "kerning": "0",
      "left": "auto",
      "letter-spacing": "normal",
      "lighting-color": "rgb(255, 255, 255)",
      "line-height": "normal",
      "list-style-image": "none",
      "list-style-position": "outside",
      "list-style-type": "disc",
      "margin-bottom": "0px",
      "margin-left": "16px",
      "margin-right": "16px",
      "margin-top": "0px",
      "marker-end": "none",
      "marker-mid": "none",
      "marker-start": "none",
      "mask": "none",
      "max-height": "none",
      "max-width": "none",
      "min-height": "0px",
      "min-width": "0px",
      "opacity": "1",
      "orphans": "2",
      "outline-color": "rgb(0, 0, 0)",
      "outline-style": "none",
      "outline-width": "0px",
      "overflow-x": "visible",
      "overflow-y": "visible",
      "padding-bottom": "0px",
      "padding-left": "0px",
      "padding-right": "0px",
      "padding-top": "0px",
      "page-break-after": "auto",
      "page-break-before": "auto",
      "page-break-inside": "auto",
      "pointer-events": "auto",
      "position": "static",
      "resize": "none",
      "right": "auto",
      "shape-rendering": "auto",
      "speak": "normal",
      "stop-color": "rgb(0, 0, 0)",
      "stop-opacity": "1",
      "stroke": "none",
      "stroke-dasharray": "none",
      "stroke-dashoffset": "0",
      "stroke-linecap": "butt",
      "stroke-linejoin": "miter",
      "stroke-miterlimit": "4",
      "stroke-opacity": "1",
      "stroke-width": "1",
      "table-layout": "auto",
      "text-align": "-webkit-auto",
      "text-anchor": "start",
      "text-decoration": "none",
      "text-indent": "0px",
      "text-overflow": "clip",
      "text-rendering": "auto",
      "text-shadow": "none",
      "text-transform": "none",
      "top": "auto",
      "unicode-bidi": "normal",
      "vector-effect": "none",
      "vertical-align": "baseline",
      "visibility": "visible",
      "white-space": "normal",
      "widows": "2",
      "width": "1568px",
      "word-break": "normal",
      "word-spacing": "0px",
      "word-wrap": "normal",
      "writing-mode": "lr-tb",
      "z-index": "auto",
      "zoom": "1"
    },
    "scroll": {
      "left": 0,
      "top": 0
    }
  },
  "descriptions": [],
  "titles": [
    "6.1. string — Common string operations — Python v3.3.2 documentation"
  ],
  "url": "http://docs.python.org/3.3/library/string.html",
  "links": [
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/re.html",
    "http://docs.python.org/3.3/library/text.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/library/text.html",
    "http://docs.python.org/3.3/library/string.html#module-string",
    "http://docs.python.org/3.3/library/string.html#module-string",
    "http://hg.python.org/cpython/file/3.3/Lib/string.py",
    "http://docs.python.org/3.3/library/stdtypes.html#textseq",
    "http://docs.python.org/3.3/library/stdtypes.html#string-methods",
    "http://docs.python.org/3.3/library/string.html#string-constants",
    "http://docs.python.org/3.3/library/string.html#string.ascii_letters",
    "http://docs.python.org/3.3/library/string.html#string.ascii_lowercase",
    "http://docs.python.org/3.3/library/string.html#string.ascii_uppercase",
    "http://docs.python.org/3.3/library/string.html#string.ascii_lowercase",
    "http://docs.python.org/3.3/library/string.html#string.ascii_uppercase",
    "http://docs.python.org/3.3/library/string.html#string.digits",
    "http://docs.python.org/3.3/library/string.html#string.hexdigits",
    "http://docs.python.org/3.3/library/string.html#string.octdigits",
    "http://docs.python.org/3.3/library/string.html#string.punctuation",
    "http://docs.python.org/3.3/library/string.html#string.printable",
    "http://docs.python.org/3.3/library/string.html#string.digits",
    "http://docs.python.org/3.3/library/string.html#string.ascii_letters",
    "http://docs.python.org/3.3/library/string.html#string.punctuation",
    "http://docs.python.org/3.3/library/string.html#string.whitespace",
    "http://docs.python.org/3.3/library/string.html#string.whitespace",
    "http://docs.python.org/3.3/library/string.html#string-formatting",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://www.python.org/dev/peps/pep-3101",
    "http://docs.python.org/3.3/library/string.html#string.Formatter",
    "http://docs.python.org/3.3/library/string.html#module-string",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://docs.python.org/3.3/library/string.html#string.Formatter",
    "http://docs.python.org/3.3/library/string.html#string.Formatter",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.format",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.vformat",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.vformat",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.vformat",
    "http://docs.python.org/3.3/library/string.html#string.Formatter",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.parse",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.vformat",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.get_field",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.parse",
    "http://www.python.org/dev/peps/pep-3101",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.vformat",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.get_value",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.get_value",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.vformat",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.get_value",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.get_value",
    "http://docs.python.org/3.3/library/functions.html#getattr",
    "http://docs.python.org/3.3/library/exceptions.html#IndexError",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.check_unused_args",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.check_unused_args",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.format_field",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.format_field",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.convert_field",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.get_field",
    "http://docs.python.org/3.3/library/string.html#string.Formatter.parse",
    "http://docs.python.org/3.3/library/string.html#format-string-syntax",
    "http://docs.python.org/3.3/library/stdtypes.html#str.format",
    "http://docs.python.org/3.3/library/string.html#string.Formatter",
    "http://docs.python.org/3.3/library/string.html#string.Formatter",
    "http://docs.python.org/3.3/library/string.html#grammar-token-field_name",
    "http://docs.python.org/3.3/library/string.html#grammar-token-conversion",
    "http://docs.python.org/3.3/library/string.html#grammar-token-format_spec",
    "http://docs.python.org/3.3/library/string.html#grammar-token-attribute_name",
    "http://docs.python.org/3.3/library/string.html#grammar-token-element_index",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-integer",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-integer",
    "http://docs.python.org/3.3/library/string.html#grammar-token-index_string",
    "http://docs.python.org/3.3/library/string.html#formatspec",
    "http://docs.python.org/3.3/library/functions.html#getattr",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__getitem__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__format__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__format__",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/functions.html#ascii",
    "http://docs.python.org/3.3/library/string.html#formatexamples",
    "http://docs.python.org/3.3/library/string.html#format-specification-mini-language",
    "http://docs.python.org/3.3/library/string.html#formatstrings",
    "http://docs.python.org/3.3/library/functions.html#format",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/string.html#grammar-token-fill",
    "http://docs.python.org/3.3/library/string.html#grammar-token-align",
    "http://docs.python.org/3.3/library/string.html#grammar-token-sign",
    "http://docs.python.org/3.3/library/string.html#grammar-token-width",
    "http://docs.python.org/3.3/library/string.html#grammar-token-precision",
    "http://docs.python.org/3.3/library/string.html#grammar-token-type",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-integer",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-integer",
    "http://www.python.org/dev/peps/pep-0378",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/string.html#format-examples",
    "http://docs.python.org/3.3/library/string.html#template-strings",
    "http://www.python.org/dev/peps/pep-0292",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/string.html#module-string",
    "http://docs.python.org/3.3/library/string.html#string.Template",
    "http://docs.python.org/3.3/library/string.html#string.Template",
    "http://docs.python.org/3.3/library/string.html#string.Template",
    "http://docs.python.org/3.3/library/string.html#string.Template.substitute",
    "http://docs.python.org/3.3/library/string.html#string.Template.safe_substitute",
    "http://docs.python.org/3.3/library/string.html#string.Template.substitute",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/string.html#string.Template.substitute",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/string.html#string.Template.safe_substitute",
    "http://docs.python.org/3.3/library/string.html#string.Template",
    "http://docs.python.org/3.3/library/string.html#string.Template.template",
    "http://docs.python.org/3.3/library/string.html#string.Template",
    "http://docs.python.org/3.3/library/re.html#re.escape",
    "http://docs.python.org/3.3/library/string.html#helper-functions",
    "http://docs.python.org/3.3/library/string.html#string.capwords",
    "http://docs.python.org/3.3/library/stdtypes.html#str.split",
    "http://docs.python.org/3.3/library/stdtypes.html#str.capitalize",
    "http://docs.python.org/3.3/library/stdtypes.html#str.join",
    "http://docs.python.org/3.3/contents.html",
    "http://docs.python.org/3.3/library/string.html#",
    "http://docs.python.org/3.3/library/string.html#string-constants",
    "http://docs.python.org/3.3/library/string.html#string-formatting",
    "http://docs.python.org/3.3/library/string.html#format-string-syntax",
    "http://docs.python.org/3.3/library/string.html#format-specification-mini-language",
    "http://docs.python.org/3.3/library/string.html#format-examples",
    "http://docs.python.org/3.3/library/string.html#template-strings",
    "http://docs.python.org/3.3/library/string.html#helper-functions",
    "http://docs.python.org/3.3/library/text.html",
    "http://docs.python.org/3.3/library/re.html",
    "http://docs.python.org/3.3/bugs.html",
    "http://docs.python.org/3.3/_sources/library/string.txt",
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/re.html",
    "http://docs.python.org/3.3/library/text.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/library/text.html",
    "http://docs.python.org/3.3/copyright.html",
    "http://www.python.org/psf/donations/",
    "http://docs.python.org/3.3/bugs.html",
    "http://sphinx.pocoo.org/"
  ],
  "texts": [
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 14,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 14,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 14,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\" accesskey=\"N\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 14,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"text.html\" title=\"6. Text Processing Services\" accesskey=\"P\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 14,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\" accesskey=\"N\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"text.html\" title=\"6. Text Processing Services\" accesskey=\"P\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Standard Library</a> »</li>\n          <li><a href=\"text.html\" accesskey=\"U\">6. Text Processing Services</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »",
        "6. Text Processing Services",
        " »"
      ]
    },
    {
      "bound": {
        "height": 57,
        "left": 265,
        "top": 69,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "32px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "9px",
        "padding-top": "9px"
      },
      "element": "h1:nth-of-type(1)",
      "html": "6.1. <a class=\"reference internal\" href=\"#module-string\" title=\"string: Common string operations.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">string</span></tt></a> — Common string operations<a class=\"headerlink\" href=\"#module-string\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > h1",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > h1:nth-of-type(1)",
      "text": [
        "6.1. ",
        "string",
        " — Common string operations",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 142,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<strong>Source code:</strong> <a class=\"reference external\" href=\"http://hg.python.org/cpython/file/3.3/Lib/string.py\">Lib/string.py</a>",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Source code:",
        "Lib/string.py"
      ]
    },
    {
      "bound": {
        "height": 81,
        "left": 265,
        "top": 191,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<p><a class=\"reference internal\" href=\"stdtypes.html#textseq\"><em>Text Sequence Type — str</em></a></p>\n<p class=\"last\"><a class=\"reference internal\" href=\"stdtypes.html#string-methods\"><em>String Methods</em></a></p>\n",
      "path": "div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "text": [
        "See also",
        "Text Sequence Type — str"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 273,
        "top": 237,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.last:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"stdtypes.html#string-methods\"><em>String Methods</em></a>",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > p.last:nth-of-type(3)",
      "text": [
        "String Methods"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 282,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.1.1. String constants<a class=\"headerlink\" href=\"#string-constants\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > h2:nth-of-type(1)",
      "text": [
        "6.1.1. String constants",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 344,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The constants defined in this module are:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > p:nth-of-type(1)",
      "text": [
        "The constants defined in this module are:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 382,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.ascii_letters:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">ascii_letters</tt><a class=\"headerlink\" href=\"#string.ascii_letters\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(1) > dt#string.ascii_letters:nth-of-type(1)",
      "text": [
        "string.",
        "ascii_letters",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 410,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The concatenation of the <a class=\"reference internal\" href=\"#string.ascii_lowercase\" title=\"string.ascii_lowercase\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">ascii_lowercase</span></tt></a> and <a class=\"reference internal\" href=\"#string.ascii_uppercase\" title=\"string.ascii_uppercase\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">ascii_uppercase</span></tt></a>\nconstants described below.  This value is not locale-dependent.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The concatenation of the ",
        "ascii_lowercase",
        " and ",
        "ascii_uppercase",
        "\nconstants described below.  This value is not locale-dependent."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 448,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.ascii_lowercase:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">ascii_lowercase</tt><a class=\"headerlink\" href=\"#string.ascii_lowercase\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(2) > dt#string.ascii_lowercase:nth-of-type(1)",
      "text": [
        "string.",
        "ascii_lowercase",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 476,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The lowercase letters <tt class=\"docutils literal\"><span class=\"pre\">'abcdefghijklmnopqrstuvwxyz'</span></tt>.  This value is not\nlocale-dependent and will not change.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The lowercase letters ",
        "'abcdefghijklmnopqrstuvwxyz'",
        ".  This value is not\nlocale-dependent and will not change."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 514,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.ascii_uppercase:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">ascii_uppercase</tt><a class=\"headerlink\" href=\"#string.ascii_uppercase\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(3) > dt#string.ascii_uppercase:nth-of-type(1)",
      "text": [
        "string.",
        "ascii_uppercase",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 542,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The uppercase letters <tt class=\"docutils literal\"><span class=\"pre\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></tt>.  This value is not\nlocale-dependent and will not change.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The uppercase letters ",
        "'ABCDEFGHIJKLMNOPQRSTUVWXYZ'",
        ".  This value is not\nlocale-dependent and will not change."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 580,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.digits:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">digits</tt><a class=\"headerlink\" href=\"#string.digits\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(4) > dt#string.digits:nth-of-type(1)",
      "text": [
        "string.",
        "digits",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 608,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The string <tt class=\"docutils literal\"><span class=\"pre\">'0123456789'</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The string ",
        "'0123456789'",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 646,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.hexdigits:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">hexdigits</tt><a class=\"headerlink\" href=\"#string.hexdigits\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(5) > dt#string.hexdigits:nth-of-type(1)",
      "text": [
        "string.",
        "hexdigits",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 674,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The string <tt class=\"docutils literal\"><span class=\"pre\">'0123456789abcdefABCDEF'</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The string ",
        "'0123456789abcdefABCDEF'",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 712,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.octdigits:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">octdigits</tt><a class=\"headerlink\" href=\"#string.octdigits\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(6) > dt#string.octdigits:nth-of-type(1)",
      "text": [
        "string.",
        "octdigits",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 740,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The string <tt class=\"docutils literal\"><span class=\"pre\">'01234567'</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The string ",
        "'01234567'",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 778,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.punctuation:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">punctuation</tt><a class=\"headerlink\" href=\"#string.punctuation\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(7) > dt#string.punctuation:nth-of-type(1)",
      "text": [
        "string.",
        "punctuation",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 806,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "String of ASCII characters which are considered punctuation characters\nin the <tt class=\"docutils literal\"><span class=\"pre\">C</span></tt> locale.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "String of ASCII characters which are considered punctuation characters\nin the ",
        "C",
        " locale."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 844,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.printable:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">printable</tt><a class=\"headerlink\" href=\"#string.printable\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(8) > dt#string.printable:nth-of-type(1)",
      "text": [
        "string.",
        "printable",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 872,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "String of ASCII characters which are considered printable.  This is a\ncombination of <a class=\"reference internal\" href=\"#string.digits\" title=\"string.digits\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">digits</span></tt></a>, <a class=\"reference internal\" href=\"#string.ascii_letters\" title=\"string.ascii_letters\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">ascii_letters</span></tt></a>, <a class=\"reference internal\" href=\"#string.punctuation\" title=\"string.punctuation\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">punctuation</span></tt></a>,\nand <a class=\"reference internal\" href=\"#string.whitespace\" title=\"string.whitespace\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">whitespace</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "String of ASCII characters which are considered printable.  This is a\ncombination of ",
        "digits",
        ", ",
        "ascii_letters",
        ", ",
        "punctuation",
        ",\nand ",
        "whitespace",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 910,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.whitespace:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">whitespace</tt><a class=\"headerlink\" href=\"#string.whitespace\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(9) > dt#string.whitespace:nth-of-type(1)",
      "text": [
        "string.",
        "whitespace",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 938,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A string containing all ASCII characters that are considered whitespace.\nThis includes the characters space, tab, linefeed, return, formfeed, and\nvertical tab.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-constants.section:nth-of-type(2) > dl.data:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A string containing all ASCII characters that are considered whitespace.\nThis includes the characters space, tab, linefeed, return, formfeed, and\nvertical tab."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 976,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.1.2. String Formatting<a class=\"headerlink\" href=\"#string-formatting\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > h2:nth-of-type(1)",
      "text": [
        "6.1.2. String Formatting",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1038,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The built-in string class provides the ability to do complex variable\nsubstitutions and value formatting via the <a class=\"reference internal\" href=\"functions.html#format\" title=\"format\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">format()</span></tt></a> method described in\n<span class=\"target\" id=\"index-0\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3101\"><strong>PEP 3101</strong></a>.  The <a class=\"reference internal\" href=\"#string.Formatter\" title=\"string.Formatter\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Formatter</span></tt></a> class in the <a class=\"reference internal\" href=\"#module-string\" title=\"string: Common string operations.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">string</span></tt></a> module allows\nyou to create and customize your own string formatting behaviors using the same\nimplementation as the built-in <a class=\"reference internal\" href=\"functions.html#format\" title=\"format\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">format()</span></tt></a> method.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > p:nth-of-type(1)",
      "text": [
        "The built-in string class provides the ability to do complex variable\nsubstitutions and value formatting via the ",
        "format()",
        " method described in\n",
        "PEP 3101",
        ".  The ",
        "Formatter",
        " class in the ",
        "string",
        " module allows\nyou to create and customize your own string formatting behaviors using the same\nimplementation as the built-in ",
        "format()",
        " method."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 1098,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.Formatter:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descclassname\">string.</tt><tt class=\"descname\">Formatter</tt><a class=\"headerlink\" href=\"#string.Formatter\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dt#string.Formatter:nth-of-type(1)",
      "text": [
        "class ",
        "string.",
        "Formatter",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1126,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#string.Formatter\" title=\"string.Formatter\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Formatter</span></tt></a> class has the following public methods:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The ",
        "Formatter",
        " class has the following public methods:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1164,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.format:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">format</tt><big>(</big><em>format_string</em>, <em>*args</em>, <em>**kwargs</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.format\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dt#string.Formatter.format:nth-of-type(1)",
      "text": [
        "format",
        "(",
        "format_string",
        ", ",
        "*args",
        ", ",
        "**kwargs",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1190,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"functions.html#format\" title=\"format\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">format()</span></tt></a> is the primary API method.  It takes a format string and\nan arbitrary set of positional and keyword arguments.\n<a class=\"reference internal\" href=\"functions.html#format\" title=\"format\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">format()</span></tt></a> is just a wrapper that calls <a class=\"reference internal\" href=\"#string.Formatter.vformat\" title=\"string.Formatter.vformat\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">vformat()</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "format()",
        " is the primary API method.  It takes a format string and\nan arbitrary set of positional and keyword arguments.\n",
        "format()",
        " is just a wrapper that calls ",
        "vformat()",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1228,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.vformat:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">vformat</tt><big>(</big><em>format_string</em>, <em>args</em>, <em>kwargs</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.vformat\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dt#string.Formatter.vformat:nth-of-type(1)",
      "text": [
        "vformat",
        "(",
        "format_string",
        ", ",
        "args",
        ", ",
        "kwargs",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 1254,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This function does the actual work of formatting.  It is exposed as a\nseparate function for cases where you want to pass in a predefined\ndictionary of arguments, rather than unpacking and repacking the\ndictionary as individual arguments using the <tt class=\"docutils literal\"><span class=\"pre\">*args</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">**kwargs</span></tt>\nsyntax.  <a class=\"reference internal\" href=\"#string.Formatter.vformat\" title=\"string.Formatter.vformat\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">vformat()</span></tt></a> does the work of breaking up the format string\ninto character data and replacement fields.  It calls the various\nmethods described below.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This function does the actual work of formatting.  It is exposed as a\nseparate function for cases where you want to pass in a predefined\ndictionary of arguments, rather than unpacking and repacking the\ndictionary as individual arguments using the ",
        "*args",
        " and ",
        "**kwargs",
        "\nsyntax.  ",
        "vformat()",
        " does the work of breaking up the format string\ninto character data and replacement fields.  It calls the various\nmethods described below."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1336,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "In addition, the <a class=\"reference internal\" href=\"#string.Formatter\" title=\"string.Formatter\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Formatter</span></tt></a> defines a number of methods that are\nintended to be replaced by subclasses:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "In addition, the ",
        "Formatter",
        " defines a number of methods that are\nintended to be replaced by subclasses:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1374,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.parse:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">parse</tt><big>(</big><em>format_string</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.parse\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dt#string.Formatter.parse:nth-of-type(1)",
      "text": [
        "parse",
        "(",
        "format_string",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 1400,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Loop over the format_string and return an iterable of tuples\n(<em>literal_text</em>, <em>field_name</em>, <em>format_spec</em>, <em>conversion</em>).  This is used\nby <a class=\"reference internal\" href=\"#string.Formatter.vformat\" title=\"string.Formatter.vformat\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">vformat()</span></tt></a> to break the string into either literal text, or\nreplacement fields.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Loop over the format_string and return an iterable of tuples\n(",
        "literal_text",
        ", ",
        "field_name",
        ", ",
        "format_spec",
        ", ",
        "conversion",
        ").  This is used\nby ",
        "vformat()",
        " to break the string into either literal text, or\nreplacement fields."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 1460,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The values in the tuple conceptually represent a span of literal text\nfollowed by a single replacement field.  If there is no literal text\n(which can happen if two replacement fields occur consecutively), then\n<em>literal_text</em> will be a zero-length string.  If there is no replacement\nfield, then the values of <em>field_name</em>, <em>format_spec</em> and <em>conversion</em>\nwill be <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The values in the tuple conceptually represent a span of literal text\nfollowed by a single replacement field.  If there is no literal text\n(which can happen if two replacement fields occur consecutively), then\n",
        "literal_text",
        " will be a zero-length string.  If there is no replacement\nfield, then the values of ",
        "field_name",
        ", ",
        "format_spec",
        " and ",
        "conversion",
        "\nwill be ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1542,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.get_field:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">get_field</tt><big>(</big><em>field_name</em>, <em>args</em>, <em>kwargs</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.get_field\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dt#string.Formatter.get_field:nth-of-type(1)",
      "text": [
        "get_field",
        "(",
        "field_name",
        ", ",
        "args",
        ", ",
        "kwargs",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 1568,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Given <em>field_name</em> as returned by <a class=\"reference internal\" href=\"#string.Formatter.parse\" title=\"string.Formatter.parse\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">parse()</span></tt></a> (see above), convert it to\nan object to be formatted.  Returns a tuple (obj, used_key).  The default\nversion takes strings of the form defined in <span class=\"target\" id=\"index-1\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3101\"><strong>PEP 3101</strong></a>, such as\n“0[name]” or “label.title”.  <em>args</em> and <em>kwargs</em> are as passed in to\n<a class=\"reference internal\" href=\"#string.Formatter.vformat\" title=\"string.Formatter.vformat\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">vformat()</span></tt></a>.  The return value <em>used_key</em> has the same meaning as the\n<em>key</em> parameter to <a class=\"reference internal\" href=\"#string.Formatter.get_value\" title=\"string.Formatter.get_value\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_value()</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Given ",
        "field_name",
        " as returned by ",
        "parse()",
        " (see above), convert it to\nan object to be formatted.  Returns a tuple (obj, used_key).  The default\nversion takes strings of the form defined in ",
        "PEP 3101",
        ", such as\n“0[name]” or “label.title”.  ",
        "args",
        " and ",
        "kwargs",
        " are as passed in to\n",
        "vformat()",
        ".  The return value ",
        "used_key",
        " has the same meaning as the\n",
        "key",
        " parameter to ",
        "get_value()",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1650,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.get_value:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">get_value</tt><big>(</big><em>key</em>, <em>args</em>, <em>kwargs</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.get_value\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dt#string.Formatter.get_value:nth-of-type(1)",
      "text": [
        "get_value",
        "(",
        "key",
        ", ",
        "args",
        ", ",
        "kwargs",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 1676,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Retrieve a given field value.  The <em>key</em> argument will be either an\ninteger or a string.  If it is an integer, it represents the index of the\npositional argument in <em>args</em>; if it is a string, then it represents a\nnamed argument in <em>kwargs</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Retrieve a given field value.  The ",
        "key",
        " argument will be either an\ninteger or a string.  If it is an integer, it represents the index of the\npositional argument in ",
        "args",
        "; if it is a string, then it represents a\nnamed argument in ",
        "kwargs",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1736,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <em>args</em> parameter is set to the list of positional arguments to\n<a class=\"reference internal\" href=\"#string.Formatter.vformat\" title=\"string.Formatter.vformat\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">vformat()</span></tt></a>, and the <em>kwargs</em> parameter is set to the dictionary of\nkeyword arguments.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The ",
        "args",
        " parameter is set to the list of positional arguments to\n",
        "vformat()",
        ", and the ",
        "kwargs",
        " parameter is set to the dictionary of\nkeyword arguments."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 1774,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "For compound field names, these functions are only called for the first\ncomponent of the field name; Subsequent components are handled through\nnormal attribute and indexing operations.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "For compound field names, these functions are only called for the first\ncomponent of the field name; Subsequent components are handled through\nnormal attribute and indexing operations."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 1834,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "So for example, the field expression ‘0.name’ would cause\n<a class=\"reference internal\" href=\"#string.Formatter.get_value\" title=\"string.Formatter.get_value\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_value()</span></tt></a> to be called with a <em>key</em> argument of 0.  The <tt class=\"docutils literal\"><span class=\"pre\">name</span></tt>\nattribute will be looked up after <a class=\"reference internal\" href=\"#string.Formatter.get_value\" title=\"string.Formatter.get_value\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_value()</span></tt></a> returns by calling the\nbuilt-in <a class=\"reference internal\" href=\"functions.html#getattr\" title=\"getattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></tt></a> function.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "So for example, the field expression ‘0.name’ would cause\n",
        "get_value()",
        " to be called with a ",
        "key",
        " argument of 0.  The ",
        "name",
        "\nattribute will be looked up after ",
        "get_value()",
        " returns by calling the\nbuilt-in ",
        "getattr()",
        " function."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1894,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "If the index or keyword refers to an item that does not exist, then an\n<a class=\"reference internal\" href=\"exceptions.html#IndexError\" title=\"IndexError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">IndexError</span></tt></a> or <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> should be raised.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "If the index or keyword refers to an item that does not exist, then an\n",
        "IndexError",
        " or ",
        "KeyError",
        " should be raised."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1932,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.check_unused_args:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">check_unused_args</tt><big>(</big><em>used_args</em>, <em>args</em>, <em>kwargs</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.check_unused_args\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dt#string.Formatter.check_unused_args:nth-of-type(1)",
      "text": [
        "check_unused_args",
        "(",
        "used_args",
        ", ",
        "args",
        ", ",
        "kwargs",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 1958,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Implement checking for unused arguments if desired.  The arguments to this\nfunction is the set of all argument keys that were actually referred to in\nthe format string (integers for positional arguments, and strings for\nnamed arguments), and a reference to the <em>args</em> and <em>kwargs</em> that was\npassed to vformat.  The set of unused args can be calculated from these\nparameters.  <a class=\"reference internal\" href=\"#string.Formatter.check_unused_args\" title=\"string.Formatter.check_unused_args\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">check_unused_args()</span></tt></a> is assumed to raise an exception if\nthe check fails.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Implement checking for unused arguments if desired.  The arguments to this\nfunction is the set of all argument keys that were actually referred to in\nthe format string (integers for positional arguments, and strings for\nnamed arguments), and a reference to the ",
        "args",
        " and ",
        "kwargs",
        " that was\npassed to vformat.  The set of unused args can be calculated from these\nparameters.  ",
        "check_unused_args()",
        " is assumed to raise an exception if\nthe check fails."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 2040,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.format_field:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">format_field</tt><big>(</big><em>value</em>, <em>format_spec</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.format_field\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dt#string.Formatter.format_field:nth-of-type(1)",
      "text": [
        "format_field",
        "(",
        "value",
        ", ",
        "format_spec",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 2066,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#string.Formatter.format_field\" title=\"string.Formatter.format_field\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">format_field()</span></tt></a> simply calls the global <a class=\"reference internal\" href=\"functions.html#format\" title=\"format\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">format()</span></tt></a> built-in.  The\nmethod is provided so that subclasses can override it.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "format_field()",
        " simply calls the global ",
        "format()",
        " built-in.  The\nmethod is provided so that subclasses can override it."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 2104,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Formatter.convert_field:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">convert_field</tt><big>(</big><em>value</em>, <em>conversion</em><big>)</big><a class=\"headerlink\" href=\"#string.Formatter.convert_field\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dt#string.Formatter.convert_field:nth-of-type(1)",
      "text": [
        "convert_field",
        "(",
        "value",
        ", ",
        "conversion",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 2130,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Converts the value (returned by <a class=\"reference internal\" href=\"#string.Formatter.get_field\" title=\"string.Formatter.get_field\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_field()</span></tt></a>) given a conversion type\n(as in the tuple returned by the <a class=\"reference internal\" href=\"#string.Formatter.parse\" title=\"string.Formatter.parse\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">parse()</span></tt></a> method).  The default\nversion understands ‘s’ (str), ‘r’ (repr) and ‘a’ (ascii) conversion\ntypes.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#string-formatting.section:nth-of-type(3) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Converts the value (returned by ",
        "get_field()",
        ") given a conversion type\n(as in the tuple returned by the ",
        "parse()",
        " method).  The default\nversion understands ‘s’ (str), ‘r’ (repr) and ‘a’ (ascii) conversion\ntypes."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 2190,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.1.3. Format String Syntax<a class=\"headerlink\" href=\"#format-string-syntax\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > h2:nth-of-type(1)",
      "text": [
        "6.1.3. Format String Syntax",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2252,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"stdtypes.html#str.format\" title=\"str.format\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format()</span></tt></a> method and the <a class=\"reference internal\" href=\"#string.Formatter\" title=\"string.Formatter\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Formatter</span></tt></a> class share the same\nsyntax for format strings (although in the case of <a class=\"reference internal\" href=\"#string.Formatter\" title=\"string.Formatter\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Formatter</span></tt></a>,\nsubclasses can define their own format string syntax).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(1)",
      "text": [
        "The ",
        "str.format()",
        " method and the ",
        "Formatter",
        " class share the same\nsyntax for format strings (although in the case of ",
        "Formatter",
        ",\nsubclasses can define their own format string syntax)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 2290,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Format strings contain “replacement fields” surrounded by curly braces <tt class=\"docutils literal\"><span class=\"pre\">{}</span></tt>.\nAnything that is not contained in braces is considered literal text, which is\ncopied unchanged to the output.  If you need to include a brace character in the\nliteral text, it can be escaped by doubling: <tt class=\"docutils literal\"><span class=\"pre\">{{</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">}}</span></tt>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "Format strings contain “replacement fields” surrounded by curly braces ",
        "{}",
        ".\nAnything that is not contained in braces is considered literal text, which is\ncopied unchanged to the output.  If you need to include a brace character in the\nliteral text, it can be escaped by doubling: ",
        "{{",
        " and ",
        "}}",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2350,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The grammar for a replacement field is as follows:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(3)",
      "text": [
        "The grammar for a replacement field is as follows:"
      ]
    },
    {
      "bound": {
        "height": 156,
        "left": 305,
        "top": 2388,
        "width": 1239
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-replacement_field\">replacement_field</strong> ::=  \"{\" [<a class=\"reference internal\" href=\"#grammar-token-field_name\"><tt class=\"xref docutils literal\"><span class=\"pre\">field_name</span></tt></a>] [\"!\" <a class=\"reference internal\" href=\"#grammar-token-conversion\"><tt class=\"xref docutils literal\"><span class=\"pre\">conversion</span></tt></a>] [\":\" <a class=\"reference internal\" href=\"#grammar-token-format_spec\"><tt class=\"xref docutils literal\"><span class=\"pre\">format_spec</span></tt></a>] \"}\"\n<strong id=\"grammar-token-field_name\">field_name       </strong> ::=  arg_name (\".\" <a class=\"reference internal\" href=\"#grammar-token-attribute_name\"><tt class=\"xref docutils literal\"><span class=\"pre\">attribute_name</span></tt></a> | \"[\" <a class=\"reference internal\" href=\"#grammar-token-element_index\"><tt class=\"xref docutils literal\"><span class=\"pre\">element_index</span></tt></a> \"]\")*\n<strong id=\"grammar-token-arg_name\">arg_name         </strong> ::=  [<a class=\"reference internal\" href=\"../reference/lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> | <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#grammar-token-integer\"><tt class=\"xref docutils literal\"><span class=\"pre\">integer</span></tt></a>]\n<strong id=\"grammar-token-attribute_name\">attribute_name   </strong> ::=  <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>\n<strong id=\"grammar-token-element_index\">element_index    </strong> ::=  <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#grammar-token-integer\"><tt class=\"xref docutils literal\"><span class=\"pre\">integer</span></tt></a> | <a class=\"reference internal\" href=\"#grammar-token-index_string\"><tt class=\"xref docutils literal\"><span class=\"pre\">index_string</span></tt></a>\n<strong id=\"grammar-token-index_string\">index_string     </strong> ::=  &lt;any source character except \"]\"&gt; +\n<strong id=\"grammar-token-conversion\">conversion       </strong> ::=  \"r\" | \"s\" | \"a\"\n<strong id=\"grammar-token-format_spec\">format_spec      </strong> ::=  &lt;described in the next section&gt;\n",
      "path": "div > div > div > div > div > div > blockquote > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > blockquote:nth-of-type(1) > div:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "replacement_field",
        " ::=  \"{\" [",
        "field_name",
        "] [\"!\" ",
        "conversion",
        "] [\":\" ",
        "format_spec",
        "] \"}\"\n",
        "field_name       ",
        " ::=  arg_name (\".\" ",
        "attribute_name",
        " | \"[\" ",
        "element_index",
        " \"]\")*\n",
        "arg_name         ",
        " ::=  [",
        "identifier",
        " | ",
        "integer",
        "]\n",
        "attribute_name   ",
        " ::=  ",
        "identifier",
        "element_index    ",
        " ::=  ",
        "integer",
        " | ",
        "index_string",
        "index_string     ",
        " ::=  <any source character except \"]\"> +\n",
        "conversion       ",
        " ::=  \"r\" | \"s\" | \"a\"\n",
        "format_spec      ",
        " ::=  <described in the next section>\n"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 2560,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "In less formal terms, the replacement field can start with a <em>field_name</em> that specifies\nthe object whose value is to be formatted and inserted\ninto the output instead of the replacement field.\nThe <em>field_name</em> is optionally followed by a  <em>conversion</em> field, which is\npreceded by an exclamation point <tt class=\"docutils literal\"><span class=\"pre\">'!'</span></tt>, and a <em>format_spec</em>, which is preceded\nby a colon <tt class=\"docutils literal\"><span class=\"pre\">':'</span></tt>.  These specify a non-default format for the replacement value.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(4)",
      "text": [
        "In less formal terms, the replacement field can start with a ",
        "field_name",
        " that specifies\nthe object whose value is to be formatted and inserted\ninto the output instead of the replacement field.\nThe ",
        "field_name",
        " is optionally followed by a  ",
        "conversion",
        " field, which is\npreceded by an exclamation point ",
        "'!'",
        ", and a ",
        "format_spec",
        ", which is preceded\nby a colon ",
        "':'",
        ".  These specify a non-default format for the replacement value."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2642,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "See also the <a class=\"reference internal\" href=\"#formatspec\"><em>Format Specification Mini-Language</em></a> section.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(5)",
      "text": [
        "See also the ",
        "Format Specification Mini-Language",
        " section."
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 265,
        "top": 2680,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The <em>field_name</em> itself begins with an <em>arg_name</em> that is either a number or a\nkeyword.  If it’s a number, it refers to a positional argument, and if it’s a keyword,\nit refers to a named keyword argument.  If the numerical arg_names in a format string\nare 0, 1, 2, ... in sequence, they can all be omitted (not just some)\nand the numbers 0, 1, 2, ... will be automatically inserted in that order.\nBecause <em>arg_name</em> is not quote-delimited, it is not possible to specify arbitrary\ndictionary keys (e.g., the strings <tt class=\"docutils literal\"><span class=\"pre\">'10'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">':-]'</span></tt>) within a format string.\nThe <em>arg_name</em> can be followed by any number of index or\nattribute expressions. An expression of the form <tt class=\"docutils literal\"><span class=\"pre\">'.name'</span></tt> selects the named\nattribute using <a class=\"reference internal\" href=\"functions.html#getattr\" title=\"getattr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></tt></a>, while an expression of the form <tt class=\"docutils literal\"><span class=\"pre\">'[index]'</span></tt>\ndoes an index lookup using <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__getitem__\" title=\"object.__getitem__\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">__getitem__()</span></tt></a>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(6)",
      "text": [
        "The ",
        "field_name",
        " itself begins with an ",
        "arg_name",
        " that is either a number or a\nkeyword.  If it’s a number, it refers to a positional argument, and if it’s a keyword,\nit refers to a named keyword argument.  If the numerical arg_names in a format string\nare 0, 1, 2, ... in sequence, they can all be omitted (not just some)\nand the numbers 0, 1, 2, ... will be automatically inserted in that order.\nBecause ",
        "arg_name",
        " is not quote-delimited, it is not possible to specify arbitrary\ndictionary keys (e.g., the strings ",
        "'10'",
        " or ",
        "':-]'",
        ") within a format string.\nThe ",
        "arg_name",
        " can be followed by any number of index or\nattribute expressions. An expression of the form ",
        "'.name'",
        " selects the named\nattribute using ",
        "getattr()",
        ", while an expression of the form ",
        "'[index]'",
        "\ndoes an index lookup using ",
        "__getitem__()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2806,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(7)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.1:</span> The positional argument specifiers can be omitted, so <tt class=\"docutils literal\"><span class=\"pre\">'{}</span> <span class=\"pre\">{}'</span></tt> is\nequivalent to <tt class=\"docutils literal\"><span class=\"pre\">'{0}</span> <span class=\"pre\">{1}'</span></tt>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p.versionchanged:nth-of-type(7)",
      "text": [
        "Changed in version 3.1:",
        " The positional argument specifiers can be omitted, so ",
        "'{}",
        "{}'",
        " is\nequivalent to ",
        "'{0}",
        "{1}'",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2844,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "Some simple format string examples:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(8)",
      "text": [
        "Some simple format string examples:"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 265,
        "top": 2882,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"s\">\"First, thou shalt count to {0}\"</span> <span class=\"c\"># References first positional argument</span>\n<span class=\"s\">\"Bring me a {}\"</span>                  <span class=\"c\"># Implicitly references the first positional argument</span>\n<span class=\"s\">\"From {} to {}\"</span>                  <span class=\"c\"># Same as \"From {0} to {1}\"</span>\n<span class=\"s\">\"My quest is {name}\"</span>             <span class=\"c\"># References keyword argument 'name'</span>\n<span class=\"s\">\"Weight in tons {0.weight}\"</span>      <span class=\"c\"># 'weight' attribute of first positional arg</span>\n<span class=\"s\">\"Units destroyed: {players[0]}\"</span>  <span class=\"c\"># First element of keyword argument 'players'.</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "\"First, thou shalt count to {0}\"",
        "# References first positional argument",
        "\"Bring me a {}\"",
        "# Implicitly references the first positional argument",
        "\"From {} to {}\"",
        "# Same as \"From {0} to {1}\"",
        "\"My quest is {name}\"",
        "# References keyword argument 'name'",
        "\"Weight in tons {0.weight}\"",
        "# 'weight' attribute of first positional arg",
        "\"Units destroyed: {players[0]}\"",
        "# First element of keyword argument 'players'."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 3018,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "The <em>conversion</em> field causes a type coercion before formatting.  Normally, the\njob of formatting a value is done by the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__format__\" title=\"object.__format__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__format__()</span></tt></a> method of the value\nitself.  However, in some cases it is desirable to force a type to be formatted\nas a string, overriding its own definition of formatting.  By converting the\nvalue to a string before calling <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__format__\" title=\"object.__format__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__format__()</span></tt></a>, the normal formatting logic\nis bypassed.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(9)",
      "text": [
        "The ",
        "conversion",
        " field causes a type coercion before formatting.  Normally, the\njob of formatting a value is done by the ",
        "__format__()",
        " method of the value\nitself.  However, in some cases it is desirable to force a type to be formatted\nas a string, overriding its own definition of formatting.  By converting the\nvalue to a string before calling ",
        "__format__()",
        ", the normal formatting logic\nis bypassed."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3100,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "Three conversion flags are currently supported: <tt class=\"docutils literal\"><span class=\"pre\">'!s'</span></tt> which calls <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a>\non the value, <tt class=\"docutils literal\"><span class=\"pre\">'!r'</span></tt> which calls <a class=\"reference internal\" href=\"functions.html#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a> and <tt class=\"docutils literal\"><span class=\"pre\">'!a'</span></tt> which calls\n<a class=\"reference internal\" href=\"functions.html#ascii\" title=\"ascii\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ascii()</span></tt></a>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(10)",
      "text": [
        "Three conversion flags are currently supported: ",
        "'!s'",
        " which calls ",
        "str()",
        "\non the value, ",
        "'!r'",
        " which calls ",
        "repr()",
        " and ",
        "'!a'",
        " which calls\n",
        "ascii()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3138,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "Some examples:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(11)",
      "text": [
        "Some examples:"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 3176,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"s\">\"Harold's a clever {0!s}\"</span>        <span class=\"c\"># Calls str() on the argument first</span>\n<span class=\"s\">\"Bring out the holy {name!r}\"</span>    <span class=\"c\"># Calls repr() on the argument first</span>\n<span class=\"s\">\"More {!a}\"</span>                      <span class=\"c\"># Calls ascii() on the argument first</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "\"Harold's a clever {0!s}\"",
        "# Calls str() on the argument first",
        "\"Bring out the holy {name!r}\"",
        "# Calls repr() on the argument first",
        "\"More {!a}\"",
        "# Calls ascii() on the argument first"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3258,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(12)",
      "html": "The <em>format_spec</em> field contains a specification of how the value should be\npresented, including such details as field width, alignment, padding, decimal\nprecision and so on.  Each value type can define its own “formatting\nmini-language” or interpretation of the <em>format_spec</em>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(12)",
      "text": [
        "The ",
        "format_spec",
        " field contains a specification of how the value should be\npresented, including such details as field width, alignment, padding, decimal\nprecision and so on.  Each value type can define its own “formatting\nmini-language” or interpretation of the ",
        "format_spec",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3318,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(13)",
      "html": "Most built-in types support a common formatting mini-language, which is\ndescribed in the next section.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(13)",
      "text": [
        "Most built-in types support a common formatting mini-language, which is\ndescribed in the next section."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 3356,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(14)",
      "html": "A <em>format_spec</em> field can also include nested replacement fields within it.\nThese nested replacement fields can contain only a field name; conversion flags\nand format specifications are not allowed.  The replacement fields within the\nformat_spec are substituted before the <em>format_spec</em> string is interpreted.\nThis allows the formatting of a value to be dynamically specified.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(14)",
      "text": [
        "A ",
        "format_spec",
        " field can also include nested replacement fields within it.\nThese nested replacement fields can contain only a field name; conversion flags\nand format specifications are not allowed.  The replacement fields within the\nformat_spec are substituted before the ",
        "format_spec",
        " string is interpreted.\nThis allows the formatting of a value to be dynamically specified."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3438,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(15)",
      "html": "See the <a class=\"reference internal\" href=\"#formatexamples\"><em>Format examples</em></a> section for some examples.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > p:nth-of-type(15)",
      "text": [
        "See the ",
        "Format examples",
        " section for some examples."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 3476,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "6.1.3.1. Format Specification Mini-Language<a class=\"headerlink\" href=\"#format-specification-mini-language\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > h3:nth-of-type(1)",
      "text": [
        "6.1.3.1. Format Specification Mini-Language",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3531,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "“Format specifications” are used within replacement fields contained within a\nformat string to define how individual values are presented (see\n<a class=\"reference internal\" href=\"#formatstrings\"><em>Format String Syntax</em></a>).  They can also be passed directly to the built-in\n<a class=\"reference internal\" href=\"functions.html#format\" title=\"format\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">format()</span></tt></a> function.  Each formattable type may define how the format\nspecification is to be interpreted.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(1)",
      "text": [
        "“Format specifications” are used within replacement fields contained within a\nformat string to define how individual values are presented (see\n",
        "Format String Syntax",
        ").  They can also be passed directly to the built-in\n",
        "format()",
        " function.  Each formattable type may define how the format\nspecification is to be interpreted."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3591,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Most built-in types implement the following options for format specifications,\nalthough some of the formatting options are only supported by the numeric types.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "Most built-in types implement the following options for format specifications,\nalthough some of the formatting options are only supported by the numeric types."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3629,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "A general convention is that an empty format string (<tt class=\"docutils literal\"><span class=\"pre\">\"\"</span></tt>) produces\nthe same result as if you had called <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a> on the value. A\nnon-empty format string typically modifies the result.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "A general convention is that an empty format string (",
        "\"\"",
        ") produces\nthe same result as if you had called ",
        "str()",
        " on the value. A\nnon-empty format string typically modifies the result."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3667,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The general form of a <em>standard format specifier</em> is:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(4)",
      "text": [
        "The general form of a ",
        "standard format specifier",
        " is:"
      ]
    },
    {
      "bound": {
        "height": 138,
        "left": 265,
        "top": 3705,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"id2\">format_spec</strong> ::=  [[<a class=\"reference internal\" href=\"#grammar-token-fill\"><tt class=\"xref docutils literal\"><span class=\"pre\">fill</span></tt></a>]<a class=\"reference internal\" href=\"#grammar-token-align\"><tt class=\"xref docutils literal\"><span class=\"pre\">align</span></tt></a>][<a class=\"reference internal\" href=\"#grammar-token-sign\"><tt class=\"xref docutils literal\"><span class=\"pre\">sign</span></tt></a>][#][0][<a class=\"reference internal\" href=\"#grammar-token-width\"><tt class=\"xref docutils literal\"><span class=\"pre\">width</span></tt></a>][,][.<a class=\"reference internal\" href=\"#grammar-token-precision\"><tt class=\"xref docutils literal\"><span class=\"pre\">precision</span></tt></a>][<a class=\"reference internal\" href=\"#grammar-token-type\"><tt class=\"xref docutils literal\"><span class=\"pre\">type</span></tt></a>]\n<strong id=\"grammar-token-fill\">fill       </strong> ::=  &lt;a character other than '{' or '}'&gt;\n<strong id=\"grammar-token-align\">align      </strong> ::=  \"&lt;\" | \"&gt;\" | \"=\" | \"^\"\n<strong id=\"grammar-token-sign\">sign       </strong> ::=  \"+\" | \"-\" | \" \"\n<strong id=\"grammar-token-width\">width      </strong> ::=  <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#grammar-token-integer\"><tt class=\"xref docutils literal\"><span class=\"pre\">integer</span></tt></a>\n<strong id=\"grammar-token-precision\">precision  </strong> ::=  <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#grammar-token-integer\"><tt class=\"xref docutils literal\"><span class=\"pre\">integer</span></tt></a>\n<strong id=\"grammar-token-type\">type       </strong> ::=  \"b\" | \"c\" | \"d\" | \"e\" | \"E\" | \"f\" | \"F\" | \"g\" | \"G\" | \"n\" | \"o\" | \"s\" | \"x\" | \"X\" | \"%\"\n",
      "path": "div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > pre:nth-of-type(1)",
      "text": [
        "format_spec",
        " ::=  [[",
        "fill",
        "]",
        "align",
        "][",
        "sign",
        "][#][0][",
        "width",
        "][,][.",
        "precision",
        "][",
        "type",
        "]\n",
        "fill       ",
        " ::=  <a character other than '{' or '}'>\n",
        "align      ",
        " ::=  \"<\" | \">\" | \"=\" | \"^\"\n",
        "sign       ",
        " ::=  \"+\" | \"-\" | \" \"\n",
        "width      ",
        " ::=  ",
        "integer",
        "precision  ",
        " ::=  ",
        "integer",
        "type       ",
        " ::=  \"b\" | \"c\" | \"d\" | \"e\" | \"E\" | \"f\" | \"F\" | \"g\" | \"G\" | \"n\" | \"o\" | \"s\" | \"x\" | \"X\" | \"%\"\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3859,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "The <em>fill</em> character can be any character other than ‘{‘ or ‘}’.  The presence\nof a fill character is signaled by the character following it, which must be\none of the alignment options.  If the second character of <em>format_spec</em> is not\na valid alignment option, then it is assumed that both the fill character and\nthe alignment option are absent.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(5)",
      "text": [
        "The ",
        "fill",
        " character can be any character other than ‘{‘ or ‘}’.  The presence\nof a fill character is signaled by the character following it, which must be\none of the alignment options.  If the second character of ",
        "format_spec",
        " is not\na valid alignment option, then it is assumed that both the fill character and\nthe alignment option are absent."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3919,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The meaning of the various alignment options is as follows:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(6)",
      "text": [
        "The meaning of the various alignment options is as follows:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 305,
        "top": 3957,
        "width": 161
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Option",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Option"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 466,
        "top": 3957,
        "width": 1077
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 3985,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'&lt;'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'<'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 3985,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Forces the field to be left-aligned within the available\nspace (this is the default for most objects).",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "Forces the field to be left-aligned within the available\nspace (this is the default for most objects)."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 4014,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'&gt;'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'>'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 4014,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Forces the field to be right-aligned within the\navailable space (this is the default for numbers).",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "Forces the field to be right-aligned within the\navailable space (this is the default for numbers)."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 305,
        "top": 4043,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'='</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'='"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 466,
        "top": 4043,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Forces the padding to be placed after the sign (if any)\nbut before the digits.  This is used for printing fields\nin the form ‘+000000120’. This alignment option is only\nvalid for numeric types.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "Forces the padding to be placed after the sign (if any)\nbut before the digits.  This is used for printing fields\nin the form ‘+000000120’. This alignment option is only\nvalid for numeric types."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 4090,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'^'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'^'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 4090,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Forces the field to be centered within the available\nspace.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(1) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "Forces the field to be centered within the available\nspace."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4136,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Note that unless a minimum field width is defined, the field width will always\nbe the same size as the data to fill it, so that the alignment option has no\nmeaning in this case.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(7)",
      "text": [
        "Note that unless a minimum field width is defined, the field width will always\nbe the same size as the data to fill it, so that the alignment option has no\nmeaning in this case."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4174,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "The <em>sign</em> option is only valid for number types, and can be one of the\nfollowing:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(8)",
      "text": [
        "The ",
        "sign",
        " option is only valid for number types, and can be one of the\nfollowing:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 305,
        "top": 4212,
        "width": 121
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Option",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Option"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 426,
        "top": 4212,
        "width": 806
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 4240,
        "width": 121
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'+'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'+'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 426,
        "top": 4240,
        "width": 806
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "indicates that a sign should be used for both\npositive as well as negative numbers.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "indicates that a sign should be used for both\npositive as well as negative numbers."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 4269,
        "width": 121
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'-'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'-'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 426,
        "top": 4269,
        "width": 806
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "indicates that a sign should be used only for negative\nnumbers (this is the default behavior).",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "indicates that a sign should be used only for negative\nnumbers (this is the default behavior)."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 305,
        "top": 4298,
        "width": 121
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "space",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "space"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 426,
        "top": 4298,
        "width": 806
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "indicates that a leading space should be used on\npositive numbers, and a minus sign on negative numbers.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(2) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "indicates that a leading space should be used on\npositive numbers, and a minus sign on negative numbers."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 4362,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "The <tt class=\"docutils literal\"><span class=\"pre\">'#'</span></tt> option causes the “alternate form” to be used for the\nconversion.  The alternate form is defined differently for different\ntypes.  This option is only valid for integer, float, complex and\nDecimal types. For integers, when binary, octal, or hexadecimal output\nis used, this option adds the prefix respective <tt class=\"docutils literal\"><span class=\"pre\">'0b'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'0o'</span></tt>, or\n<tt class=\"docutils literal\"><span class=\"pre\">'0x'</span></tt> to the output value. For floats, complex and Decimal the\nalternate form causes the result of the conversion to always contain a\ndecimal-point character, even if no digits follow it. Normally, a\ndecimal-point character appears in the result of these conversions\nonly if a digit follows it. In addition, for <tt class=\"docutils literal\"><span class=\"pre\">'g'</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">'G'</span></tt>\nconversions, trailing zeros are not removed from the result.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(9)",
      "text": [
        "The ",
        "'#'",
        " option causes the “alternate form” to be used for the\nconversion.  The alternate form is defined differently for different\ntypes.  This option is only valid for integer, float, complex and\nDecimal types. For integers, when binary, octal, or hexadecimal output\nis used, this option adds the prefix respective ",
        "'0b'",
        ", ",
        "'0o'",
        ", or\n",
        "'0x'",
        " to the output value. For floats, complex and Decimal the\nalternate form causes the result of the conversion to always contain a\ndecimal-point character, even if no digits follow it. Normally, a\ndecimal-point character appears in the result of these conversions\nonly if a digit follows it. In addition, for ",
        "'g'",
        " and ",
        "'G'",
        "\nconversions, trailing zeros are not removed from the result."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4466,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "The <tt class=\"docutils literal\"><span class=\"pre\">','</span></tt> option signals the use of a comma for a thousands separator.\nFor a locale aware separator, use the <tt class=\"docutils literal\"><span class=\"pre\">'n'</span></tt> integer presentation type\ninstead.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(10)",
      "text": [
        "The ",
        "','",
        " option signals the use of a comma for a thousands separator.\nFor a locale aware separator, use the ",
        "'n'",
        " integer presentation type\ninstead."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4504,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(11)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.1:</span> Added the <tt class=\"docutils literal\"><span class=\"pre\">','</span></tt> option (see also <span class=\"target\" id=\"index-2\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0378\"><strong>PEP 378</strong></a>).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p.versionchanged:nth-of-type(11)",
      "text": [
        "Changed in version 3.1:",
        " Added the ",
        "','",
        " option (see also ",
        "PEP 378",
        ")."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4542,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(12)",
      "html": "<em>width</em> is a decimal integer defining the minimum field width.  If not\nspecified, then the field width will be determined by the content.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(12)",
      "text": [
        "width",
        " is a decimal integer defining the minimum field width.  If not\nspecified, then the field width will be determined by the content."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4580,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(13)",
      "html": "Preceding the <em>width</em> field by a zero (<tt class=\"docutils literal\"><span class=\"pre\">'0'</span></tt>) character enables\nsign-aware zero-padding for numeric types.  This is equivalent to a <em>fill</em>\ncharacter of <tt class=\"docutils literal\"><span class=\"pre\">'0'</span></tt> with an <em>alignment</em> type of <tt class=\"docutils literal\"><span class=\"pre\">'='</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(13)",
      "text": [
        "Preceding the ",
        "width",
        " field by a zero (",
        "'0'",
        ") character enables\nsign-aware zero-padding for numeric types.  This is equivalent to a ",
        "fill",
        "\ncharacter of ",
        "'0'",
        " with an ",
        "alignment",
        " type of ",
        "'='",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 4618,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(14)",
      "html": "The <em>precision</em> is a decimal number indicating how many digits should be\ndisplayed after the decimal point for a floating point value formatted with\n<tt class=\"docutils literal\"><span class=\"pre\">'f'</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">'F'</span></tt>, or before and after the decimal point for a floating point\nvalue formatted with <tt class=\"docutils literal\"><span class=\"pre\">'g'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'G'</span></tt>.  For non-number types the field\nindicates the maximum field size - in other words, how many characters will be\nused from the field content. The <em>precision</em> is not allowed for integer values.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(14)",
      "text": [
        "The ",
        "precision",
        " is a decimal number indicating how many digits should be\ndisplayed after the decimal point for a floating point value formatted with\n",
        "'f'",
        " and ",
        "'F'",
        ", or before and after the decimal point for a floating point\nvalue formatted with ",
        "'g'",
        " or ",
        "'G'",
        ".  For non-number types the field\nindicates the maximum field size - in other words, how many characters will be\nused from the field content. The ",
        "precision",
        " is not allowed for integer values."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4700,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(15)",
      "html": "Finally, the <em>type</em> determines how the data should be presented.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(15)",
      "text": [
        "Finally, the ",
        "type",
        " determines how the data should be presented."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4738,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(16)",
      "html": "The available string presentation types are:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(16)",
      "text": [
        "The available string presentation types are:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 305,
        "top": 4776,
        "width": 81
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Type",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(3) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Type"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 386,
        "top": 4776,
        "width": 540
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(3) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 305,
        "top": 4804,
        "width": 81
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'s'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(3) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'s'"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 386,
        "top": 4804,
        "width": 540
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "String format. This is the default type for strings and\nmay be omitted.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(3) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "String format. This is the default type for strings and\nmay be omitted."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 4851,
        "width": 81
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "None",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(3) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "None"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 386,
        "top": 4851,
        "width": 540
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "The same as <tt class=\"docutils literal\"><span class=\"pre\">'s'</span></tt>.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(3) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "The same as ",
        "'s'",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4897,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(17)",
      "html": "The available integer presentation types are:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(17)",
      "text": [
        "The available integer presentation types are:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 305,
        "top": 4935,
        "width": 151
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Type",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Type"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 456,
        "top": 4935,
        "width": 1007
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 4963,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'b'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'b'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 456,
        "top": 4963,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Binary format. Outputs the number in base 2.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "Binary format. Outputs the number in base 2."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 4992,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'c'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'c'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 456,
        "top": 4992,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Character. Converts the integer to the corresponding\nunicode character before printing.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "Character. Converts the integer to the corresponding\nunicode character before printing."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5021,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'d'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'d'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 456,
        "top": 5021,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Decimal Integer. Outputs the number in base 10.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "Decimal Integer. Outputs the number in base 10."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5050,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'o'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'o'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 456,
        "top": 5050,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Octal format. Outputs the number in base 8.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "Octal format. Outputs the number in base 8."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5079,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'x'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "'x'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 456,
        "top": 5079,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Hex format. Outputs the number in base 16, using lower-\ncase letters for the digits above 9.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "Hex format. Outputs the number in base 16, using lower-\ncase letters for the digits above 9."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5108,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'X'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "'X'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 456,
        "top": 5108,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Hex format. Outputs the number in base 16, using upper-\ncase letters for the digits above 9.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "Hex format. Outputs the number in base 16, using upper-\ncase letters for the digits above 9."
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 305,
        "top": 5137,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'n'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "'n'"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 456,
        "top": 5137,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Number. This is the same as <tt class=\"docutils literal\"><span class=\"pre\">'d'</span></tt>, except that it uses\nthe current locale setting to insert the appropriate\nnumber separator characters.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "Number. This is the same as ",
        "'d'",
        ", except that it uses\nthe current locale setting to insert the appropriate\nnumber separator characters."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5185,
        "width": 151
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "None",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "None"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 456,
        "top": 5185,
        "width": 1007
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "The same as <tt class=\"docutils literal\"><span class=\"pre\">'d'</span></tt>.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(4) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "The same as ",
        "'d'",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 5231,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(18)",
      "html": "In addition to the above presentation types, integers can be formatted\nwith the floating point presentation types listed below (except\n<tt class=\"docutils literal\"><span class=\"pre\">'n'</span></tt> and None). When doing so, <a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">float()</span></tt></a> is used to convert the\ninteger to a floating point number before formatting.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(18)",
      "text": [
        "In addition to the above presentation types, integers can be formatted\nwith the floating point presentation types listed below (except\n",
        "'n'",
        " and None). When doing so, ",
        "float()",
        " is used to convert the\ninteger to a floating point number before formatting."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5291,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(19)",
      "html": "The available presentation types for floating point and decimal values are:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > p:nth-of-type(19)",
      "text": [
        "The available presentation types for floating point and decimal values are:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 305,
        "top": 5329,
        "width": 161
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Type",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Type"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 466,
        "top": 5329,
        "width": 1077
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5357,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'e'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'e'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 5357,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Exponent notation. Prints the number in scientific\nnotation using the letter ‘e’ to indicate the exponent.\nThe default precision is <tt class=\"docutils literal\"><span class=\"pre\">6</span></tt>.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "Exponent notation. Prints the number in scientific\nnotation using the letter ‘e’ to indicate the exponent.\nThe default precision is ",
        "6",
        "."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5386,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'E'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'E'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 5386,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Exponent notation. Same as <tt class=\"docutils literal\"><span class=\"pre\">'e'</span></tt> except it uses an\nupper case ‘E’ as the separator character.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "Exponent notation. Same as ",
        "'e'",
        " except it uses an\nupper case ‘E’ as the separator character."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5415,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'f'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'f'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 5415,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Fixed point. Displays the number as a fixed-point\nnumber.  The default precision is <tt class=\"docutils literal\"><span class=\"pre\">6</span></tt>.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "Fixed point. Displays the number as a fixed-point\nnumber.  The default precision is ",
        "6",
        "."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5444,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'F'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'F'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 5444,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Fixed point. Same as <tt class=\"docutils literal\"><span class=\"pre\">'f'</span></tt>, but converts <tt class=\"docutils literal\"><span class=\"pre\">nan</span></tt> to\n<tt class=\"docutils literal\"><span class=\"pre\">NAN</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">inf</span></tt> to <tt class=\"docutils literal\"><span class=\"pre\">INF</span></tt>.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "Fixed point. Same as ",
        "'f'",
        ", but converts ",
        "nan",
        " to\n",
        "NAN",
        " and ",
        "inf",
        " to ",
        "INF",
        "."
      ]
    },
    {
      "bound": {
        "height": 255,
        "left": 305,
        "top": 5473,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'g'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "'g'"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 475,
        "top": 5478,
        "width": 1060
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "left"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "General format.  For a given precision <tt class=\"docutils literal\"><span class=\"pre\">p</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">1</span></tt>,\nthis rounds the number to <tt class=\"docutils literal\"><span class=\"pre\">p</span></tt> significant digits and\nthen formats the result in either fixed-point format\nor in scientific notation, depending on its magnitude.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "General format.  For a given precision ",
        "p",
        ">=",
        "1",
        ",\nthis rounds the number to ",
        "p",
        " significant digits and\nthen formats the result in either fixed-point format\nor in scientific notation, depending on its magnitude."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 475,
        "top": 5538,
        "width": 1060
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "left"
      },
      "element": "p:nth-of-type(2)",
      "html": "The precise rules are as follows: suppose that the\nresult formatted with presentation type <tt class=\"docutils literal\"><span class=\"pre\">'e'</span></tt> and\nprecision <tt class=\"docutils literal\"><span class=\"pre\">p-1</span></tt> would have exponent <tt class=\"docutils literal\"><span class=\"pre\">exp</span></tt>.  Then\nif <tt class=\"docutils literal\"><span class=\"pre\">-4</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">exp</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">p</span></tt>, the number is formatted\nwith presentation type <tt class=\"docutils literal\"><span class=\"pre\">'f'</span></tt> and precision\n<tt class=\"docutils literal\"><span class=\"pre\">p-1-exp</span></tt>.  Otherwise, the number is formatted\nwith presentation type <tt class=\"docutils literal\"><span class=\"pre\">'e'</span></tt> and precision <tt class=\"docutils literal\"><span class=\"pre\">p-1</span></tt>.\nIn both cases insignificant trailing zeros are removed\nfrom the significand, and the decimal point is also\nremoved if there are no remaining digits following it.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "The precise rules are as follows: suppose that the\nresult formatted with presentation type ",
        "'e'",
        " and\nprecision ",
        "p-1",
        " would have exponent ",
        "exp",
        ".  Then\nif ",
        "-4",
        "<=",
        "exp",
        "<",
        "p",
        ", the number is formatted\nwith presentation type ",
        "'f'",
        " and precision\n",
        "p-1-exp",
        ".  Otherwise, the number is formatted\nwith presentation type ",
        "'e'",
        " and precision ",
        "p-1",
        ".\nIn both cases insignificant trailing zeros are removed\nfrom the significand, and the decimal point is also\nremoved if there are no remaining digits following it."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 475,
        "top": 5642,
        "width": 1060
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "left"
      },
      "element": "p:nth-of-type(3)",
      "html": "Positive and negative infinity, positive and negative\nzero, and nans, are formatted as <tt class=\"docutils literal\"><span class=\"pre\">inf</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">-inf</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">-0</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">nan</span></tt> respectively, regardless of\nthe precision.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2) > p:nth-of-type(3)",
      "text": [
        "Positive and negative infinity, positive and negative\nzero, and nans, are formatted as ",
        "inf",
        ", ",
        "-inf",
        ",\n",
        "0",
        ", ",
        "-0",
        " and ",
        "nan",
        " respectively, regardless of\nthe precision."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 475,
        "top": 5702,
        "width": 1060
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "left"
      },
      "element": "p.last:nth-of-type(4)",
      "html": "A precision of <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt> is treated as equivalent to a\nprecision of <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt>.  The default precision is <tt class=\"docutils literal\"><span class=\"pre\">6</span></tt>.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2) > p.last:nth-of-type(4)",
      "text": [
        "A precision of ",
        "0",
        " is treated as equivalent to a\nprecision of ",
        "1",
        ".  The default precision is ",
        "6",
        "."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5728,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'G'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "'G'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 5728,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "General format. Same as <tt class=\"docutils literal\"><span class=\"pre\">'g'</span></tt> except switches to\n<tt class=\"docutils literal\"><span class=\"pre\">'E'</span></tt> if the number gets too large. The\nrepresentations of infinity and NaN are uppercased, too.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "General format. Same as ",
        "'g'",
        " except switches to\n",
        "'E'",
        " if the number gets too large. The\nrepresentations of infinity and NaN are uppercased, too."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5757,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'n'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "'n'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 5757,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Number. This is the same as <tt class=\"docutils literal\"><span class=\"pre\">'g'</span></tt>, except that it uses\nthe current locale setting to insert the appropriate\nnumber separator characters.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "Number. This is the same as ",
        "'g'",
        ", except that it uses\nthe current locale setting to insert the appropriate\nnumber separator characters."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 305,
        "top": 5786,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'%'</span></tt>",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "'%'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 466,
        "top": 5786,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Percentage. Multiplies the number by 100 and displays\nin fixed (<tt class=\"docutils literal\"><span class=\"pre\">'f'</span></tt>) format, followed by a percent sign.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "Percentage. Multiplies the number by 100 and displays\nin fixed (",
        "'f'",
        ") format, followed by a percent sign."
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 305,
        "top": 5815,
        "width": 161
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "None",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(1)",
      "text": [
        "None"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 466,
        "top": 5815,
        "width": 1077
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Similar to <tt class=\"docutils literal\"><span class=\"pre\">'g'</span></tt>, except with at least one digit past\nthe decimal point and a default precision of 12. This is\nintended to match <a class=\"reference internal\" href=\"stdtypes.html#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a>, except you can add the\nother format modifiers.",
      "path": "div > div > div > div > div > div > div > blockquote > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-specification-mini-language.section:nth-of-type(3) > blockquote:nth-of-type(5) > div:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(2)",
      "text": [
        "Similar to ",
        "'g'",
        ", except with at least one digit past\nthe decimal point and a default precision of 12. This is\nintended to match ",
        "str()",
        ", except you can add the\nother format modifiers."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 5880,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "6.1.3.2. Format examples<a class=\"headerlink\" href=\"#format-examples\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > h3:nth-of-type(1)",
      "text": [
        "6.1.3.2. Format examples",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5935,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This section contains examples of the new format syntax and comparison with\nthe old <tt class=\"docutils literal\"><span class=\"pre\">%</span></tt>-formatting.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(1)",
      "text": [
        "This section contains examples of the new format syntax and comparison with\nthe old ",
        "%",
        "-formatting."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5973,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "In most of the cases the syntax is similar to the old <tt class=\"docutils literal\"><span class=\"pre\">%</span></tt>-formatting, with the\naddition of the <tt class=\"docutils literal\"><span class=\"pre\">{}</span></tt> and with <tt class=\"docutils literal\"><span class=\"pre\">:</span></tt> used instead of <tt class=\"docutils literal\"><span class=\"pre\">%</span></tt>.\nFor example, <tt class=\"docutils literal\"><span class=\"pre\">'%03.2f'</span></tt> can be translated to <tt class=\"docutils literal\"><span class=\"pre\">'{:03.2f}'</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "In most of the cases the syntax is similar to the old ",
        "%",
        "-formatting, with the\naddition of the ",
        "{}",
        " and with ",
        ":",
        " used instead of ",
        "%",
        ".\nFor example, ",
        "'%03.2f'",
        " can be translated to ",
        "'{:03.2f}'",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6011,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The new format syntax also supports new and different options, shown in the\nfollow examples.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(3)",
      "text": [
        "The new format syntax also supports new and different options, shown in the\nfollow examples."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6049,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Accessing arguments by position:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(4)",
      "text": [
        "Accessing arguments by position:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6087,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 265,
        "top": 6087,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{0}, {1}, {2}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'a'</span><span class=\"p\">,</span> <span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"s\">'c'</span><span class=\"p\">)</span>\n<span class=\"go\">'a, b, c'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{}, {}, {}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'a'</span><span class=\"p\">,</span> <span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"s\">'c'</span><span class=\"p\">)</span>  <span class=\"c\"># 3.1+ only</span>\n<span class=\"go\">'a, b, c'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{2}, {1}, {0}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'a'</span><span class=\"p\">,</span> <span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"s\">'c'</span><span class=\"p\">)</span>\n<span class=\"go\">'c, b, a'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{2}, {1}, {0}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"s\">'abc'</span><span class=\"p\">)</span>      <span class=\"c\"># unpacking argument sequence</span>\n<span class=\"go\">'c, b, a'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{0}{1}{0}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'abra'</span><span class=\"p\">,</span> <span class=\"s\">'cad'</span><span class=\"p\">)</span>   <span class=\"c\"># arguments' indices can be repeated</span>\n<span class=\"go\">'abracadabra'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'{0}, {1}, {2}'",
        ".",
        "format",
        "(",
        "'a'",
        ",",
        "'b'",
        ",",
        "'c'",
        ")",
        "'a, b, c'",
        ">>> ",
        "'{}, {}, {}'",
        ".",
        "format",
        "(",
        "'a'",
        ",",
        "'b'",
        ",",
        "'c'",
        ")",
        "# 3.1+ only",
        "'a, b, c'",
        ">>> ",
        "'{2}, {1}, {0}'",
        ".",
        "format",
        "(",
        "'a'",
        ",",
        "'b'",
        ",",
        "'c'",
        ")",
        "'c, b, a'",
        ">>> ",
        "'{2}, {1}, {0}'",
        ".",
        "format",
        "(",
        "*",
        "'abc'",
        ")",
        "# unpacking argument sequence",
        "'c, b, a'",
        ">>> ",
        "'{0}{1}{0}'",
        ".",
        "format",
        "(",
        "'abra'",
        ",",
        "'cad'",
        ")",
        "# arguments' indices can be repeated",
        "'abracadabra'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6295,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Accessing arguments by name:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(5)",
      "text": [
        "Accessing arguments by name:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6333,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 265,
        "top": 6333,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'Coordinates: {latitude}, {longitude}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"s\">'37.24N'</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"s\">'-115.81W'</span><span class=\"p\">)</span>\n<span class=\"go\">'Coordinates: 37.24N, -115.81W'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">coord</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'latitude'</span><span class=\"p\">:</span> <span class=\"s\">'37.24N'</span><span class=\"p\">,</span> <span class=\"s\">'longitude'</span><span class=\"p\">:</span> <span class=\"s\">'-115.81W'</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'Coordinates: {latitude}, {longitude}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">coord</span><span class=\"p\">)</span>\n<span class=\"go\">'Coordinates: 37.24N, -115.81W'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'Coordinates: {latitude}, {longitude}'",
        ".",
        "format",
        "(",
        "latitude",
        "=",
        "'37.24N'",
        ",",
        "longitude",
        "=",
        "'-115.81W'",
        ")",
        "'Coordinates: 37.24N, -115.81W'",
        ">>> ",
        "coord",
        "=",
        "{",
        "'latitude'",
        ":",
        "'37.24N'",
        ",",
        "'longitude'",
        ":",
        "'-115.81W'",
        "}",
        ">>> ",
        "'Coordinates: {latitude}, {longitude}'",
        ".",
        "format",
        "(",
        "**",
        "coord",
        ")",
        "'Coordinates: 37.24N, -115.81W'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6451,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Accessing arguments’ attributes:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(6)",
      "text": [
        "Accessing arguments’ attributes:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6489,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 265,
        "top": 6489,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"n\">j</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"s\">'The complex number {0} is formed from the real part {0.real} '</span>\n<span class=\"gp\">... </span> <span class=\"s\">'and the imaginary part {0.imag}.'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"go\">'The complex number (3-5j) is formed from the real part 3.0 and the imaginary part -5.0.'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Point</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"s\">'Point({self.x}, {self.y})'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"go\">'Point(4, 2)'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "c",
        "=",
        "3",
        "-",
        "5",
        "j",
        ">>> ",
        "(",
        "'The complex number {0} is formed from the real part {0.real} '",
        "... ",
        "'and the imaginary part {0.imag}.'",
        ")",
        ".",
        "format",
        "(",
        "c",
        ")",
        "'The complex number (3-5j) is formed from the real part 3.0 and the imaginary part -5.0.'",
        ">>> ",
        "class",
        "Point",
        ":",
        "... ",
        "def",
        "__init__",
        "(",
        "self",
        ",",
        "x",
        ",",
        "y",
        "):",
        "... ",
        "self",
        ".",
        "x",
        ",",
        "self",
        ".",
        "y",
        "=",
        "x",
        ",",
        "y",
        "... ",
        "def",
        "__str__",
        "(",
        "self",
        "):",
        "... ",
        "return",
        "'Point({self.x}, {self.y})'",
        ".",
        "format",
        "(",
        "self",
        "=",
        "self",
        ")",
        "...",
        ">>> ",
        "str",
        "(",
        "Point",
        "(",
        "4",
        ",",
        "2",
        "))",
        "'Point(4, 2)'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6733,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Accessing arguments’ items:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(7)",
      "text": [
        "Accessing arguments’ items:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6771,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 6771,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">coord</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'X: {0[0]};  Y: {0[1]}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">coord</span><span class=\"p\">)</span>\n<span class=\"go\">'X: 3;  Y: 5'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "coord",
        "=",
        "(",
        "3",
        ",",
        "5",
        ")",
        ">>> ",
        "'X: {0[0]};  Y: {0[1]}'",
        ".",
        "format",
        "(",
        "coord",
        ")",
        "'X: 3;  Y: 5'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6853,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "Replacing <tt class=\"docutils literal\"><span class=\"pre\">%s</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">%r</span></tt>:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(8)",
      "text": [
        "Replacing ",
        "%s",
        " and ",
        "%r",
        ":"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6891,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(5) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 6891,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">\"repr() shows quotes: {!r}; str() doesn't: {!s}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'test1'</span><span class=\"p\">,</span> <span class=\"s\">'test2'</span><span class=\"p\">)</span>\n<span class=\"go\">\"repr() shows quotes: 'test1'; str() doesn't: test2\"</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(5) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "\"repr() shows quotes: {!r}; str() doesn't: {!s}\"",
        ".",
        "format",
        "(",
        "'test1'",
        ",",
        "'test2'",
        ")",
        "\"repr() shows quotes: 'test1'; str() doesn't: test2\""
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6955,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "Aligning the text and specifying a width:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(9)",
      "text": [
        "Aligning the text and specifying a width:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6993,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(6) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 156,
        "left": 265,
        "top": 6993,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:&lt;30}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'left aligned'</span><span class=\"p\">)</span>\n<span class=\"go\">'left aligned                  '</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:&gt;30}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'right aligned'</span><span class=\"p\">)</span>\n<span class=\"go\">'                 right aligned'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:^30}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'centered'</span><span class=\"p\">)</span>\n<span class=\"go\">'           centered           '</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:*^30}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s\">'centered'</span><span class=\"p\">)</span>  <span class=\"c\"># use '*' as a fill char</span>\n<span class=\"go\">'***********centered***********'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(6) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'{:<30}'",
        ".",
        "format",
        "(",
        "'left aligned'",
        ")",
        "'left aligned                  '",
        ">>> ",
        "'{:>30}'",
        ".",
        "format",
        "(",
        "'right aligned'",
        ")",
        "'                 right aligned'",
        ">>> ",
        "'{:^30}'",
        ".",
        "format",
        "(",
        "'centered'",
        ")",
        "'           centered           '",
        ">>> ",
        "'{:*^30}'",
        ".",
        "format",
        "(",
        "'centered'",
        ")",
        "# use '*' as a fill char",
        "'***********centered***********'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7165,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "Replacing <tt class=\"docutils literal\"><span class=\"pre\">%+f</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">%-f</span></tt>, and <tt class=\"docutils literal\"><span class=\"pre\">%</span> <span class=\"pre\">f</span></tt> and specifying a sign:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(10)",
      "text": [
        "Replacing ",
        "%+f",
        ", ",
        "%-f",
        ", and ",
        "%",
        "f",
        " and specifying a sign:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7203,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(7) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 265,
        "top": 7203,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:+f}; {:+f}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mf\">3.14</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">3.14</span><span class=\"p\">)</span>  <span class=\"c\"># show it always</span>\n<span class=\"go\">'+3.140000; -3.140000'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{: f}; {: f}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mf\">3.14</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">3.14</span><span class=\"p\">)</span>  <span class=\"c\"># show a space for positive numbers</span>\n<span class=\"go\">' 3.140000; -3.140000'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:-f}; {:-f}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mf\">3.14</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">3.14</span><span class=\"p\">)</span>  <span class=\"c\"># show only the minus -- same as '{:f}; {:f}'</span>\n<span class=\"go\">'3.140000; -3.140000'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(7) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'{:+f}; {:+f}'",
        ".",
        "format",
        "(",
        "3.14",
        ",",
        "-",
        "3.14",
        ")",
        "# show it always",
        "'+3.140000; -3.140000'",
        ">>> ",
        "'{: f}; {: f}'",
        ".",
        "format",
        "(",
        "3.14",
        ",",
        "-",
        "3.14",
        ")",
        "# show a space for positive numbers",
        "' 3.140000; -3.140000'",
        ">>> ",
        "'{:-f}; {:-f}'",
        ".",
        "format",
        "(",
        "3.14",
        ",",
        "-",
        "3.14",
        ")",
        "# show only the minus -- same as '{:f}; {:f}'",
        "'3.140000; -3.140000'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7339,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "Replacing <tt class=\"docutils literal\"><span class=\"pre\">%x</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">%o</span></tt> and converting the value to different bases:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(11)",
      "text": [
        "Replacing ",
        "%x",
        " and ",
        "%o",
        " and converting the value to different bases:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7377,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(8) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 265,
        "top": 7377,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># format also supports binary numbers</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">\"int: {0:d};  hex: {0:x};  oct: {0:o};  bin: {0:b}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"go\">'int: 42;  hex: 2a;  oct: 52;  bin: 101010'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># with 0x, 0o, or 0b as prefix:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">\"int: {0:d};  hex: {0:#x};  oct: {0:#o};  bin: {0:#b}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"go\">'int: 42;  hex: 0x2a;  oct: 0o52;  bin: 0b101010'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(8) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "# format also supports binary numbers",
        ">>> ",
        "\"int: {0:d};  hex: {0:x};  oct: {0:o};  bin: {0:b}\"",
        ".",
        "format",
        "(",
        "42",
        ")",
        "'int: 42;  hex: 2a;  oct: 52;  bin: 101010'",
        ">>> ",
        "# with 0x, 0o, or 0b as prefix:",
        ">>> ",
        "\"int: {0:d};  hex: {0:#x};  oct: {0:#o};  bin: {0:#b}\"",
        ".",
        "format",
        "(",
        "42",
        ")",
        "'int: 42;  hex: 0x2a;  oct: 0o52;  bin: 0b101010'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7513,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(12)",
      "html": "Using the comma as a thousands separator:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(12)",
      "text": [
        "Using the comma as a thousands separator:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7551,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(9) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 7551,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:,}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mi\">1234567890</span><span class=\"p\">)</span>\n<span class=\"go\">'1,234,567,890'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(9) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'{:,}'",
        ".",
        "format",
        "(",
        "1234567890",
        ")",
        "'1,234,567,890'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7615,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(13)",
      "html": "Expressing a percentage:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(13)",
      "text": [
        "Expressing a percentage:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7653,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(10) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 265,
        "top": 7653,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"mi\">19</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"mi\">22</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'Correct answers: {:.2%}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"o\">/</span><span class=\"n\">total</span><span class=\"p\">)</span>\n<span class=\"go\">'Correct answers: 86.36%'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(10) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "points",
        "=",
        "19",
        ">>> ",
        "total",
        "=",
        "22",
        ">>> ",
        "'Correct answers: {:.2%}'",
        ".",
        "format",
        "(",
        "points",
        "/",
        "total",
        ")",
        "'Correct answers: 86.36%'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7753,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(14)",
      "html": "Using type-specific formatting:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(14)",
      "text": [
        "Using type-specific formatting:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7791,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(11) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 265,
        "top": 7791,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2010</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">58</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:%Y-%m-%d %H:%M:%S}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"go\">'2010-07-04 12:15:58'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(11) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "datetime",
        ">>> ",
        "d",
        "=",
        "datetime",
        ".",
        "datetime",
        "(",
        "2010",
        ",",
        "7",
        ",",
        "4",
        ",",
        "12",
        ",",
        "15",
        ",",
        "58",
        ")",
        ">>> ",
        "'{:%Y-%m-%d %H:%M:%S}'",
        ".",
        "format",
        "(",
        "d",
        ")",
        "'2010-07-04 12:15:58'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7891,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(15)",
      "html": "Nesting arguments and more complex examples:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > p:nth-of-type(15)",
      "text": [
        "Nesting arguments and more complex examples:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7929,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(12) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 480,
        "left": 265,
        "top": 7929,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">align</span><span class=\"p\">,</span> <span class=\"n\">text</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"s\">'&lt;^&gt;'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s\">'left'</span><span class=\"p\">,</span> <span class=\"s\">'center'</span><span class=\"p\">,</span> <span class=\"s\">'right'</span><span class=\"p\">]):</span>\n<span class=\"gp\">... </span>    <span class=\"s\">'{0:{fill}{align}16}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"n\">align</span><span class=\"p\">,</span> <span class=\"n\">align</span><span class=\"o\">=</span><span class=\"n\">align</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">'left&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;'</span>\n<span class=\"go\">'^^^^^center^^^^^'</span>\n<span class=\"go\">'&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;right'</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">octets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">192</span><span class=\"p\">,</span> <span class=\"mi\">168</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{:02X}{:02X}{:02X}{:02X}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">octets</span><span class=\"p\">)</span>\n<span class=\"go\">'C0A80001'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"go\">3232235521</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">num</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">):</span> \n<span class=\"gp\">... </span>    <span class=\"k\">for</span> <span class=\"n\">base</span> <span class=\"ow\">in</span> <span class=\"s\">'dXob'</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">'{0:{width}{base}}'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"n\">base</span><span class=\"o\">=</span><span class=\"n\">base</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s\">' '</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">    5     5     5   101</span>\n<span class=\"go\">    6     6     6   110</span>\n<span class=\"go\">    7     7     7   111</span>\n<span class=\"go\">    8     8    10  1000</span>\n<span class=\"go\">    9     9    11  1001</span>\n<span class=\"go\">   10     A    12  1010</span>\n<span class=\"go\">   11     B    13  1011</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#format-string-syntax.section:nth-of-type(4) > div#format-examples.section:nth-of-type(4) > div.highlight-python3:nth-of-type(12) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "for",
        "align",
        ",",
        "text",
        "in",
        "zip",
        "(",
        "'<^>'",
        ",",
        "[",
        "'left'",
        ",",
        "'center'",
        ",",
        "'right'",
        "]):",
        "... ",
        "'{0:{fill}{align}16}'",
        ".",
        "format",
        "(",
        "text",
        ",",
        "fill",
        "=",
        "align",
        ",",
        "align",
        "=",
        "align",
        ")",
        "...",
        "'left<<<<<<<<<<<<'",
        "'^^^^^center^^^^^'",
        "'>>>>>>>>>>>right'",
        ">>>",
        ">>> ",
        "octets",
        "=",
        "[",
        "192",
        ",",
        "168",
        ",",
        "0",
        ",",
        "1",
        "]",
        ">>> ",
        "'{:02X}{:02X}{:02X}{:02X}'",
        ".",
        "format",
        "(",
        "*",
        "octets",
        ")",
        "'C0A80001'",
        ">>> ",
        "int",
        "(",
        "_",
        ",",
        "16",
        ")",
        "3232235521",
        ">>>",
        ">>> ",
        "width",
        "=",
        "5",
        ">>> ",
        "for",
        "num",
        "in",
        "range",
        "(",
        "5",
        ",",
        "12",
        "):",
        "... ",
        "for",
        "base",
        "in",
        "'dXob'",
        ":",
        "... ",
        "print",
        "(",
        "'{0:{width}{base}}'",
        ".",
        "format",
        "(",
        "num",
        ",",
        "base",
        "=",
        "base",
        ",",
        "width",
        "=",
        "width",
        "),",
        "end",
        "=",
        "' '",
        ")",
        "... ",
        "print",
        "()",
        "...",
        "    5     5     5   101",
        "    6     6     6   110",
        "    7     7     7   111",
        "    8     8    10  1000",
        "    9     9    11  1001",
        "   10     A    12  1010",
        "   11     B    13  1011"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 8424,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.1.4. Template strings<a class=\"headerlink\" href=\"#template-strings\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > h2:nth-of-type(1)",
      "text": [
        "6.1.4. Template strings",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8486,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Templates provide simpler string substitutions as described in <span class=\"target\" id=\"index-3\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0292\"><strong>PEP 292</strong></a>.\nInstead of the normal <tt class=\"docutils literal\"><span class=\"pre\">%</span></tt>-based substitutions, Templates support <tt class=\"docutils literal\"><span class=\"pre\">$</span></tt>-based substitutions, using the following rules:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > p:nth-of-type(1)",
      "text": [
        "Templates provide simpler string substitutions as described in ",
        "PEP 292",
        ".\nInstead of the normal ",
        "%",
        "-based substitutions, Templates support ",
        "$",
        "-based substitutions, using the following rules:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 8546,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">$$</span></tt> is an escape; it is replaced with a single <tt class=\"docutils literal\"><span class=\"pre\">$</span></tt>.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "$$",
        " is an escape; it is replaced with a single ",
        "$",
        "."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 8566,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">$identifier</span></tt> names a substitution placeholder matching a mapping key of\n<tt class=\"docutils literal\"><span class=\"pre\">\"identifier\"</span></tt>.  By default, <tt class=\"docutils literal\"><span class=\"pre\">\"identifier\"</span></tt> must spell a Python\nidentifier.  The first non-identifier character after the <tt class=\"docutils literal\"><span class=\"pre\">$</span></tt> character\nterminates this placeholder specification.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "$identifier",
        " names a substitution placeholder matching a mapping key of\n",
        "\"identifier\"",
        ".  By default, ",
        "\"identifier\"",
        " must spell a Python\nidentifier.  The first non-identifier character after the ",
        "$",
        " character\nterminates this placeholder specification."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 8606,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">${identifier}</span></tt> is equivalent to <tt class=\"docutils literal\"><span class=\"pre\">$identifier</span></tt>.  It is required when valid\nidentifier characters follow the placeholder but are not part of the\nplaceholder, such as <tt class=\"docutils literal\"><span class=\"pre\">\"${noun}ification\"</span></tt>.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "${identifier}",
        " is equivalent to ",
        "$identifier",
        ".  It is required when valid\nidentifier characters follow the placeholder but are not part of the\nplaceholder, such as ",
        "\"${noun}ification\"",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8642,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Any other appearance of <tt class=\"docutils literal\"><span class=\"pre\">$</span></tt> in the string will result in a <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a>\nbeing raised.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > p:nth-of-type(2)",
      "text": [
        "Any other appearance of ",
        "$",
        " in the string will result in a ",
        "ValueError",
        "\nbeing raised."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8680,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <a class=\"reference internal\" href=\"#module-string\" title=\"string: Common string operations.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">string</span></tt></a> module provides a <a class=\"reference internal\" href=\"#string.Template\" title=\"string.Template\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Template</span></tt></a> class that implements\nthese rules.  The methods of <a class=\"reference internal\" href=\"#string.Template\" title=\"string.Template\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Template</span></tt></a> are:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > p:nth-of-type(3)",
      "text": [
        "The ",
        "string",
        " module provides a ",
        "Template",
        " class that implements\nthese rules.  The methods of ",
        "Template",
        " are:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8718,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.Template:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descclassname\">string.</tt><tt class=\"descname\">Template</tt><big>(</big><em>template</em><big>)</big><a class=\"headerlink\" href=\"#string.Template\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dt#string.Template:nth-of-type(1)",
      "text": [
        "class ",
        "string.",
        "Template",
        "(",
        "template",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8746,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The constructor takes a single argument which is the template string.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The constructor takes a single argument which is the template string."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 8784,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Template.substitute:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">substitute</tt><big>(</big><em>mapping</em>, <em>**kwds</em><big>)</big><a class=\"headerlink\" href=\"#string.Template.substitute\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dt#string.Template.substitute:nth-of-type(1)",
      "text": [
        "substitute",
        "(",
        "mapping",
        ", ",
        "**kwds",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 8810,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Performs the template substitution, returning a new string.  <em>mapping</em> is\nany dictionary-like object with keys that match the placeholders in the\ntemplate.  Alternatively, you can provide keyword arguments, where the\nkeywords are the placeholders.  When both <em>mapping</em> and <em>kwds</em> are given\nand there are duplicates, the placeholders from <em>kwds</em> take precedence.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Performs the template substitution, returning a new string.  ",
        "mapping",
        " is\nany dictionary-like object with keys that match the placeholders in the\ntemplate.  Alternatively, you can provide keyword arguments, where the\nkeywords are the placeholders.  When both ",
        "mapping",
        " and ",
        "kwds",
        " are given\nand there are duplicates, the placeholders from ",
        "kwds",
        " take precedence."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 8892,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Template.safe_substitute:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">safe_substitute</tt><big>(</big><em>mapping</em>, <em>**kwds</em><big>)</big><a class=\"headerlink\" href=\"#string.Template.safe_substitute\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dt#string.Template.safe_substitute:nth-of-type(1)",
      "text": [
        "safe_substitute",
        "(",
        "mapping",
        ", ",
        "**kwds",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 8918,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Like <a class=\"reference internal\" href=\"#string.Template.substitute\" title=\"string.Template.substitute\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">substitute()</span></tt></a>, except that if placeholders are missing from\n<em>mapping</em> and <em>kwds</em>, instead of raising a <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> exception, the\noriginal placeholder will appear in the resulting string intact.  Also,\nunlike with <a class=\"reference internal\" href=\"#string.Template.substitute\" title=\"string.Template.substitute\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">substitute()</span></tt></a>, any other appearances of the <tt class=\"docutils literal\"><span class=\"pre\">$</span></tt> will\nsimply return <tt class=\"docutils literal\"><span class=\"pre\">$</span></tt> instead of raising <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Like ",
        "substitute()",
        ", except that if placeholders are missing from\n",
        "mapping",
        " and ",
        "kwds",
        ", instead of raising a ",
        "KeyError",
        " exception, the\noriginal placeholder will appear in the resulting string intact.  Also,\nunlike with ",
        "substitute()",
        ", any other appearances of the ",
        "$",
        " will\nsimply return ",
        "$",
        " instead of raising ",
        "ValueError",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 8978,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "While other exceptions may still occur, this method is called “safe”\nbecause substitutions always tries to return a usable string instead of\nraising an exception.  In another sense, <a class=\"reference internal\" href=\"#string.Template.safe_substitute\" title=\"string.Template.safe_substitute\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">safe_substitute()</span></tt></a> may be\nanything other than safe, since it will silently ignore malformed\ntemplates containing dangling delimiters, unmatched braces, or\nplaceholders that are not valid Python identifiers.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "While other exceptions may still occur, this method is called “safe”\nbecause substitutions always tries to return a usable string instead of\nraising an exception.  In another sense, ",
        "safe_substitute()",
        " may be\nanything other than safe, since it will silently ignore malformed\ntemplates containing dangling delimiters, unmatched braces, or\nplaceholders that are not valid Python identifiers."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 9060,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#string.Template\" title=\"string.Template\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Template</span></tt></a> instances also provide one public data attribute:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Template",
        " instances also provide one public data attribute:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 9098,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#string.Template.template:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">template</tt><a class=\"headerlink\" href=\"#string.Template.template\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(3) > dt#string.Template.template:nth-of-type(1)",
      "text": [
        "template",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 9124,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This is the object passed to the constructor’s <em>template</em> argument.  In\ngeneral, you shouldn’t change it, but read-only access is not enforced.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This is the object passed to the constructor’s ",
        "template",
        " argument.  In\ngeneral, you shouldn’t change it, but read-only access is not enforced."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9162,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Here is an example of how to use a Template:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > p:nth-of-type(4)",
      "text": [
        "Here is an example of how to use a Template:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 9200,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 282,
        "left": 265,
        "top": 9200,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">string</span> <span class=\"k\">import</span> <span class=\"n\">Template</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s\">'$who likes $what'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">substitute</span><span class=\"p\">(</span><span class=\"n\">who</span><span class=\"o\">=</span><span class=\"s\">'tim'</span><span class=\"p\">,</span> <span class=\"n\">what</span><span class=\"o\">=</span><span class=\"s\">'kung pao'</span><span class=\"p\">)</span>\n<span class=\"go\">'tim likes kung pao'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">who</span><span class=\"o\">=</span><span class=\"s\">'tim'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s\">'Give $who $100'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">substitute</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"c\">...</span>\n<span class=\"gr\">ValueError: Invalid placeholder in string</span><span>: </span><span class=\"n\">line 1, col 11</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s\">'$who likes $what'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">substitute</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"c\">...</span>\n<span class=\"gr\">KeyError</span><span>: </span><span class=\"n\">'what'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s\">'$who likes $what'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">safe_substitute</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"go\">'tim likes $what'</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "from",
        "string",
        "import",
        "Template",
        ">>> ",
        "s",
        "=",
        "Template",
        "(",
        "'$who likes $what'",
        ")",
        ">>> ",
        "s",
        ".",
        "substitute",
        "(",
        "who",
        "=",
        "'tim'",
        ",",
        "what",
        "=",
        "'kung pao'",
        ")",
        "'tim likes kung pao'",
        ">>> ",
        "d",
        "=",
        "dict",
        "(",
        "who",
        "=",
        "'tim'",
        ")",
        ">>> ",
        "Template",
        "(",
        "'Give $who $100'",
        ")",
        ".",
        "substitute",
        "(",
        "d",
        ")",
        "Traceback (most recent call last):",
        "...",
        "ValueError: Invalid placeholder in string",
        ": ",
        "line 1, col 11",
        ">>> ",
        "Template",
        "(",
        "'$who likes $what'",
        ")",
        ".",
        "substitute",
        "(",
        "d",
        ")",
        "Traceback (most recent call last):",
        "...",
        "KeyError",
        ": ",
        "'what'",
        ">>> ",
        "Template",
        "(",
        "'$who likes $what'",
        ")",
        ".",
        "safe_substitute",
        "(",
        "d",
        ")",
        "'tim likes $what'"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 9498,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Advanced usage: you can derive subclasses of <a class=\"reference internal\" href=\"#string.Template\" title=\"string.Template\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Template</span></tt></a> to customize the\nplaceholder syntax, delimiter character, or the entire regular expression used\nto parse template strings.  To do this, you can override these class attributes:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > p:nth-of-type(5)",
      "text": [
        "Advanced usage: you can derive subclasses of ",
        "Template",
        " to customize the\nplaceholder syntax, delimiter character, or the entire regular expression used\nto parse template strings.  To do this, you can override these class attributes:"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9558,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<em>delimiter</em> – This is the literal string describing a placeholder introducing\ndelimiter.  The default value is <tt class=\"docutils literal\"><span class=\"pre\">$</span></tt>.  Note that this should <em>not</em> be a\nregular expression, as the implementation will call <a class=\"reference internal\" href=\"re.html#re.escape\" title=\"re.escape\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">re.escape()</span></tt></a> on this\nstring as needed.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul:nth-of-type(2) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "delimiter",
        " – This is the literal string describing a placeholder introducing\ndelimiter.  The default value is ",
        "$",
        ".  Note that this should ",
        "not",
        " be a\nregular expression, as the implementation will call ",
        "re.escape()",
        " on this\nstring as needed."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9618,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<em>idpattern</em> – This is the regular expression describing the pattern for\nnon-braced placeholders (the braces will be added automatically as\nappropriate).  The default value is the regular expression\n<tt class=\"docutils literal\"><span class=\"pre\">[_a-z][_a-z0-9]*</span></tt>.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul:nth-of-type(2) > li:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "idpattern",
        " – This is the regular expression describing the pattern for\nnon-braced placeholders (the braces will be added automatically as\nappropriate).  The default value is the regular expression\n",
        "[_a-z][_a-z0-9]*",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9678,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<em>flags</em> – The regular expression flags that will be applied when compiling\nthe regular expression used for recognizing substitutions.  The default value\nis <tt class=\"docutils literal\"><span class=\"pre\">re.IGNORECASE</span></tt>.  Note that <tt class=\"docutils literal\"><span class=\"pre\">re.VERBOSE</span></tt> will always be added to the\nflags, so custom <em>idpattern</em>s must follow conventions for verbose regular\nexpressions.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul:nth-of-type(2) > li:nth-of-type(3) > p.first:nth-of-type(1)",
      "text": [
        "flags",
        " – The regular expression flags that will be applied when compiling\nthe regular expression used for recognizing substitutions.  The default value\nis ",
        "re.IGNORECASE",
        ".  Note that ",
        "re.VERBOSE",
        " will always be added to the\nflags, so custom ",
        "idpattern",
        "s must follow conventions for verbose regular\nexpressions."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 9738,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2.</span> ",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul:nth-of-type(2) > li:nth-of-type(3) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.2."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 9776,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Alternatively, you can provide the entire regular expression pattern by\noverriding the class attribute <em>pattern</em>.  If you do this, the value must be a\nregular expression object with four named capturing groups.  The capturing\ngroups correspond to the rules given above, along with the invalid placeholder\nrule:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > p:nth-of-type(6)",
      "text": [
        "Alternatively, you can provide the entire regular expression pattern by\noverriding the class attribute ",
        "pattern",
        ".  If you do this, the value must be a\nregular expression object with four named capturing groups.  The capturing\ngroups correspond to the rules given above, along with the invalid placeholder\nrule:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 9836,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "<em>escaped</em> – This group matches the escape sequence, e.g. <tt class=\"docutils literal\"><span class=\"pre\">$$</span></tt>, in the\ndefault pattern.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul.simple:nth-of-type(3) > li:nth-of-type(1)",
      "text": [
        "escaped",
        " – This group matches the escape sequence, e.g. ",
        "$$",
        ", in the\ndefault pattern."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 9856,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "<em>named</em> – This group matches the unbraced placeholder name; it should not\ninclude the delimiter in capturing group.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul.simple:nth-of-type(3) > li:nth-of-type(2)",
      "text": [
        "named",
        " – This group matches the unbraced placeholder name; it should not\ninclude the delimiter in capturing group."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 9876,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "<em>braced</em> – This group matches the brace enclosed placeholder name; it should\nnot include either the delimiter or braces in the capturing group.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul.simple:nth-of-type(3) > li:nth-of-type(3)",
      "text": [
        "braced",
        " – This group matches the brace enclosed placeholder name; it should\nnot include either the delimiter or braces in the capturing group."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 9896,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "<em>invalid</em> – This group matches any other delimiter pattern (usually a single\ndelimiter), and it should appear last in the regular expression.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#template-strings.section:nth-of-type(5) > ul.simple:nth-of-type(3) > li:nth-of-type(4)",
      "text": [
        "invalid",
        " – This group matches any other delimiter pattern (usually a single\ndelimiter), and it should appear last in the regular expression."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 9932,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.1.5. Helper functions<a class=\"headerlink\" href=\"#helper-functions\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#helper-functions.section:nth-of-type(6) > h2:nth-of-type(1)",
      "text": [
        "6.1.5. Helper functions",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 9994,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#string.capwords:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">string.</tt><tt class=\"descname\">capwords</tt><big>(</big><em>s</em>, <em>sep=None</em><big>)</big><a class=\"headerlink\" href=\"#string.capwords\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#helper-functions.section:nth-of-type(6) > dl.function:nth-of-type(1) > dt#string.capwords:nth-of-type(1)",
      "text": [
        "string.",
        "capwords",
        "(",
        "s",
        ", ",
        "sep=None",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 10022,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Split the argument into words using <a class=\"reference internal\" href=\"stdtypes.html#str.split\" title=\"str.split\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.split()</span></tt></a>, capitalize each word\nusing <a class=\"reference internal\" href=\"stdtypes.html#str.capitalize\" title=\"str.capitalize\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.capitalize()</span></tt></a>, and join the capitalized words using\n<a class=\"reference internal\" href=\"stdtypes.html#str.join\" title=\"str.join\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.join()</span></tt></a>.  If the optional second argument <em>sep</em> is absent\nor <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, runs of whitespace characters are replaced by a single space\nand leading and trailing whitespace are removed, otherwise <em>sep</em> is used to\nsplit and join the words.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-string.section:nth-of-type(1) > div#helper-functions.section:nth-of-type(6) > dl.function:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Split the argument into words using ",
        "str.split()",
        ", capitalize each word\nusing ",
        "str.capitalize()",
        ", and join the capitalized words using\n",
        "str.join()",
        ".  If the optional second argument ",
        "sep",
        " is absent\nor ",
        "None",
        ", runs of whitespace characters are replaced by a single space\nand leading and trailing whitespace are removed, otherwise ",
        "sep",
        " is used to\nsplit and join the words."
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 82,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "<a href=\"../contents.html\">Table Of Contents</a>",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Table Of Contents"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 36,
        "top": 108,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#\">6.1. <tt class=\"docutils literal\"><span class=\"pre\">string</span></tt> — Common string operations</a><ul>\n<li><a class=\"reference internal\" href=\"#string-constants\">6.1.1. String constants</a></li>\n<li><a class=\"reference internal\" href=\"#string-formatting\">6.1.2. String Formatting</a></li>\n<li><a class=\"reference internal\" href=\"#format-string-syntax\">6.1.3. Format String Syntax</a><ul>\n<li><a class=\"reference internal\" href=\"#format-specification-mini-language\">6.1.3.1. Format Specification Mini-Language</a></li>\n<li><a class=\"reference internal\" href=\"#format-examples\">6.1.3.2. Format examples</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#template-strings\">6.1.4. Template strings</a></li>\n<li><a class=\"reference internal\" href=\"#helper-functions\">6.1.5. Helper functions</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "6.1. ",
        "string",
        " — Common string operations"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 140,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#string-constants\">6.1.1. String constants</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "6.1.1. String constants"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 161,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#string-formatting\">6.1.2. String Formatting</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "6.1.2. String Formatting"
      ]
    },
    {
      "bound": {
        "height": 112,
        "left": 56,
        "top": 182,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#format-string-syntax\">6.1.3. Format String Syntax</a><ul>\n<li><a class=\"reference internal\" href=\"#format-specification-mini-language\">6.1.3.1. Format Specification Mini-Language</a></li>\n<li><a class=\"reference internal\" href=\"#format-examples\">6.1.3.2. Format examples</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "6.1.3. Format String Syntax"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 76,
        "top": 214,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#format-specification-mini-language\">6.1.3.1. Format Specification Mini-Language</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "6.1.3.1. Format Specification Mini-Language"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 262,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#format-examples\">6.1.3.2. Format examples</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "6.1.3.2. Format examples"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 299,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#template-strings\">6.1.4. Template strings</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "6.1.4. Template strings"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 320,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#helper-functions\">6.1.5. Helper functions</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "6.1.5. Helper functions"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 362,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(1)",
      "html": "Previous topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(1)",
      "text": [
        "Previous topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 383,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(1)",
      "html": "<a href=\"text.html\" title=\"previous chapter\">6. Text Processing Services</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(1)",
      "text": [
        "6. Text Processing Services"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 425,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(2)",
      "html": "Next topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(2)",
      "text": [
        "Next topic"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 36,
        "top": 446,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(2)",
      "html": "<a href=\"re.html\" title=\"next chapter\">6.2. <tt class=\"docutils literal docutils literal docutils literal\"><span class=\"pre\">re</span></tt> — Regular expression operations</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(2)",
      "text": [
        "6.2. ",
        "re",
        " — Regular expression operations"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 506,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(2)",
      "html": "This Page",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(2)",
      "text": [
        "This Page"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 532,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a href=\"../bugs.html\">Report a Bug</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "Report a Bug"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 548,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a href=\"../_sources/library/string.txt\" rel=\"nofollow\">Show Source</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "Show Source"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 592,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "Quick search",
      "path": "div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Quick search"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 26,
        "top": 655,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "12px",
        "line-height": "16px",
        "margin-bottom": "12px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "12px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.searchtip:nth-of-type(1)",
      "html": "\n    Enter search terms or a module, class or function name.\n    ",
      "path": "div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > p.searchtip:nth-of-type(1)",
      "text": [
        "\n    Enter search terms or a module, class or function name.\n    "
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 235,
        "top": 1990,
        "width": 9
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "cursor": "pointer",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "position": "fixed"
      },
      "element": "span:nth-of-type(1)",
      "html": "«",
      "path": "div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div#sidebarbutton:nth-of-type(2) > span:nth-of-type(1)",
      "text": [
        "«"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 10119,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 10119,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 10119,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 10119,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"text.html\" title=\"6. Text Processing Services\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 10119,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"text.html\" title=\"6. Text Processing Services\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Standard Library</a> »</li>\n          <li><a href=\"text.html\">6. Text Processing Services</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »",
        "6. Text Processing Services",
        " »"
      ]
    },
    {
      "bound": {
        "height": 90,
        "left": 16,
        "top": 10149,
        "width": 1558
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(85, 85, 85)",
        "border-left-color": "rgb(85, 85, 85)",
        "border-right-color": "rgb(85, 85, 85)",
        "border-top-color": "rgb(85, 85, 85)",
        "color": "rgb(85, 85, 85)",
        "font-size": "12px",
        "line-height": "18px",
        "margin-left": "0px",
        "margin-right": "10px",
        "margin-top": "-24px",
        "outline-color": "rgb(85, 85, 85)",
        "padding-bottom": "9px",
        "padding-top": "9px",
        "text-align": "right"
      },
      "element": "div.footer:nth-of-type(4)",
      "html": "\n    © <a href=\"../copyright.html\">Copyright</a> 1990-2013, Python Software Foundation.\n    <br>\n    The Python Software Foundation is a non-profit corporation.\n    <a href=\"http://www.python.org/psf/donations/\">Please donate.</a>\n    <br>\n    Last updated on Aug 14, 2013.\n    <a href=\"../bugs.html\">Found a bug</a>?\n    <br>\n    Created using <a href=\"http://sphinx.pocoo.org/\">Sphinx</a> 1.0.7.\n    ",
      "path": "div",
      "selector": "div.footer:nth-of-type(4)",
      "text": [
        "\n    © ",
        "Copyright",
        " 1990-2013, Python Software Foundation.\n    ",
        "\n    The Python Software Foundation is a non-profit corporation.\n    ",
        "Please donate.",
        "\n    Last updated on Aug 14, 2013.\n    ",
        "Found a bug",
        "?\n    ",
        "\n    Created using ",
        "Sphinx",
        " 1.0.7.\n    "
      ]
    }
  ],
  "images": [
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 21,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 10126,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    }
  ]
}
{
  "body": {
    "bound": {
      "height": 7251,
      "left": 16,
      "top": 7,
      "width": 1568
    },
    "computed": {
      "alignment-baseline": "auto",
      "background-attachment": "scroll",
      "background-clip": "border-box",
      "background-color": "rgb(255, 255, 255)",
      "background-image": "none",
      "background-origin": "padding-box",
      "background-position": "0% 0%",
      "background-repeat": "repeat",
      "background-size": "auto auto",
      "baseline-shift": "baseline",
      "border-bottom-color": "rgb(0, 0, 0)",
      "border-bottom-left-radius": "0px",
      "border-bottom-right-radius": "0px",
      "border-bottom-style": "none",
      "border-bottom-width": "0px",
      "border-collapse": "separate",
      "border-left-color": "rgb(0, 0, 0)",
      "border-left-style": "none",
      "border-left-width": "0px",
      "border-right-color": "rgb(0, 0, 0)",
      "border-right-style": "none",
      "border-right-width": "0px",
      "border-top-color": "rgb(0, 0, 0)",
      "border-top-left-radius": "0px",
      "border-top-right-radius": "0px",
      "border-top-style": "none",
      "border-top-width": "0px",
      "bottom": "auto",
      "box-shadow": "none",
      "box-sizing": "content-box",
      "caption-side": "top",
      "clear": "none",
      "clip": "auto",
      "clip-path": "none",
      "clip-rule": "nonzero",
      "color": "rgb(0, 0, 0)",
      "color-interpolation": "srgb",
      "color-interpolation-filters": "linearrgb",
      "color-rendering": "auto",
      "cursor": "auto",
      "direction": "ltr",
      "display": "block",
      "dominant-baseline": "auto",
      "empty-cells": "show",
      "fill": "#000000",
      "fill-opacity": "1",
      "fill-rule": "nonzero",
      "filter": "none",
      "float": "none",
      "flood-color": "rgb(0, 0, 0)",
      "flood-opacity": "1",
      "font-family": "'Lucida Grande', Arial, sans-serif",
      "font-size": "16px",
      "font-style": "normal",
      "font-variant": "normal",
      "font-weight": "normal",
      "glyph-orientation-horizontal": "0deg",
      "glyph-orientation-vertical": "auto",
      "height": "7251px",
      "image-rendering": "auto",
      "kerning": "0",
      "left": "auto",
      "letter-spacing": "normal",
      "lighting-color": "rgb(255, 255, 255)",
      "line-height": "normal",
      "list-style-image": "none",
      "list-style-position": "outside",
      "list-style-type": "disc",
      "margin-bottom": "0px",
      "margin-left": "16px",
      "margin-right": "16px",
      "margin-top": "0px",
      "marker-end": "none",
      "marker-mid": "none",
      "marker-start": "none",
      "mask": "none",
      "max-height": "none",
      "max-width": "none",
      "min-height": "0px",
      "min-width": "0px",
      "opacity": "1",
      "orphans": "2",
      "outline-color": "rgb(0, 0, 0)",
      "outline-style": "none",
      "outline-width": "0px",
      "overflow-x": "visible",
      "overflow-y": "visible",
      "padding-bottom": "0px",
      "padding-left": "0px",
      "padding-right": "0px",
      "padding-top": "0px",
      "page-break-after": "auto",
      "page-break-before": "auto",
      "page-break-inside": "auto",
      "pointer-events": "auto",
      "position": "static",
      "resize": "none",
      "right": "auto",
      "shape-rendering": "auto",
      "speak": "normal",
      "stop-color": "rgb(0, 0, 0)",
      "stop-opacity": "1",
      "stroke": "none",
      "stroke-dasharray": "none",
      "stroke-dashoffset": "0",
      "stroke-linecap": "butt",
      "stroke-linejoin": "miter",
      "stroke-miterlimit": "4",
      "stroke-opacity": "1",
      "stroke-width": "1",
      "table-layout": "auto",
      "text-align": "-webkit-auto",
      "text-anchor": "start",
      "text-decoration": "none",
      "text-indent": "0px",
      "text-overflow": "clip",
      "text-rendering": "auto",
      "text-shadow": "none",
      "text-transform": "none",
      "top": "auto",
      "unicode-bidi": "normal",
      "vector-effect": "none",
      "vertical-align": "baseline",
      "visibility": "visible",
      "white-space": "normal",
      "widows": "2",
      "width": "1568px",
      "word-break": "normal",
      "word-spacing": "0px",
      "word-wrap": "normal",
      "writing-mode": "lr-tb",
      "z-index": "auto",
      "zoom": "1"
    },
    "scroll": {
      "left": 0,
      "top": 0
    }
  },
  "descriptions": [],
  "titles": [
    "8. Compound statements — Python v3.3.2 documentation"
  ],
  "url": "http://docs.python.org/3.3/reference/compound_stmts.html",
  "links": [
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/reference/toplevel_components.html",
    "http://docs.python.org/3.3/reference/simple_stmts.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/reference/index.html",
    "http://docs.python.org/3.3/reference/compound_stmts.html#compound-statements",
    "http://docs.python.org/3.3/reference/compound_stmts.html#if",
    "http://docs.python.org/3.3/reference/compound_stmts.html#while",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#if",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/library/functions.html#print",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-if_stmt",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-while_stmt",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-for_stmt",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-try_stmt",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-with_stmt",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-funcdef",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-classdef",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-stmt_list",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-stmt_list",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-compound_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-simple_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-simple_stmt",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/compound_stmts.html#if",
    "http://docs.python.org/3.3/reference/compound_stmts.html#if",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-if-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#if",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/expressions.html#booleans",
    "http://docs.python.org/3.3/reference/compound_stmts.html#if",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/compound_stmts.html#while",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-while-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#while",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-for-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target_list",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression_list",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/simple_stmts.html#assignment",
    "http://docs.python.org/3.3/library/exceptions.html#StopIteration",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-try-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#except",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id5",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#as",
    "http://docs.python.org/3.3/library/sys.html#module-sys",
    "http://docs.python.org/3.3/library/sys.html#sys.exc_info",
    "http://docs.python.org/3.3/library/sys.html#sys.exc_info",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/library/sys.html#sys.exc_info",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id6",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/compound_stmts.html#except",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#except",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/executionmodel.html#exceptions",
    "http://docs.python.org/3.3/reference/simple_stmts.html#raise",
    "http://docs.python.org/3.3/reference/simple_stmts.html#raise",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-with-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/datamodel.html#context-managers",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#except",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-with_item",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__exit__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__enter__",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__enter__",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__enter__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__exit__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__exit__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__exit__",
    "http://docs.python.org/3.3/library/constants.html#None",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__exit__",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__exit__",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://www.python.org/dev/peps/pep-0343",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#function-definitions",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-decorators",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-funcname",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-parameter_list",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-decorator",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-dotted_name",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-parameter_list",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-defparameter",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-parameter",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-defparameter",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-parameter",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-parameter",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-defparameter",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-parameter",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id7",
    "http://docs.python.org/3.3/glossary.html#term-decorator",
    "http://docs.python.org/3.3/glossary.html#term-parameter",
    "http://docs.python.org/3.3/glossary.html#term-argument",
    "http://docs.python.org/3.3/reference/expressions.html#calls",
    "http://docs.python.org/3.3/reference/expressions.html#lambda",
    "http://docs.python.org/3.3/reference/compound_stmts.html#def",
    "http://docs.python.org/3.3/reference/compound_stmts.html#def",
    "http://docs.python.org/3.3/reference/executionmodel.html#naming",
    "http://www.python.org/dev/peps/pep-3107",
    "http://docs.python.org/3.3/reference/compound_stmts.html#class-definitions",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-decorators",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-classname",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-inheritance",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-suite",
    "http://docs.python.org/3.3/reference/compound_stmts.html#grammar-token-parameter_list",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/datamodel.html#metaclasses",
    "http://docs.python.org/3.3/library/functions.html#object",
    "http://docs.python.org/3.3/reference/executionmodel.html#naming",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id8",
    "http://docs.python.org/3.3/reference/datamodel.html#metaclasses",
    "http://docs.python.org/3.3/reference/datamodel.html#descriptors",
    "http://www.python.org/dev/peps/pep-3115",
    "http://www.python.org/dev/peps/pep-3129",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id1",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id2",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id3",
    "http://docs.python.org/3.3/glossary.html#term-docstring",
    "http://docs.python.org/3.3/reference/compound_stmts.html#id4",
    "http://docs.python.org/3.3/glossary.html#term-docstring",
    "http://docs.python.org/3.3/contents.html",
    "http://docs.python.org/3.3/reference/compound_stmts.html#",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-if-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-while-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-for-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-try-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#the-with-statement",
    "http://docs.python.org/3.3/reference/compound_stmts.html#function-definitions",
    "http://docs.python.org/3.3/reference/compound_stmts.html#class-definitions",
    "http://docs.python.org/3.3/reference/simple_stmts.html",
    "http://docs.python.org/3.3/reference/toplevel_components.html",
    "http://docs.python.org/3.3/bugs.html",
    "http://docs.python.org/3.3/_sources/reference/compound_stmts.txt",
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/reference/toplevel_components.html",
    "http://docs.python.org/3.3/reference/simple_stmts.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/reference/index.html",
    "http://docs.python.org/3.3/copyright.html",
    "http://www.python.org/psf/donations/",
    "http://docs.python.org/3.3/bugs.html",
    "http://sphinx.pocoo.org/"
  ],
  "texts": [
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 14,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 14,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 14,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"toplevel_components.html\" title=\"9. Top-level components\" accesskey=\"N\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 14,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"simple_stmts.html\" title=\"7. Simple statements\" accesskey=\"P\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 14,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"toplevel_components.html\" title=\"9. Top-level components\" accesskey=\"N\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"simple_stmts.html\" title=\"7. Simple statements\" accesskey=\"P\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\" accesskey=\"U\">The Python Language Reference</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Language Reference",
        " »"
      ]
    },
    {
      "bound": {
        "height": 56,
        "left": 265,
        "top": 69,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "32px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "9px",
        "padding-top": "9px"
      },
      "element": "h1:nth-of-type(1)",
      "html": "8. Compound statements<a class=\"headerlink\" href=\"#compound-statements\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > h1",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > h1:nth-of-type(1)",
      "text": [
        "8. Compound statements",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 141,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-0:nth-of-type(1)",
      "html": "Compound statements contain (groups of) other statements; they affect or control\nthe execution of those other statements in some way.  In general, compound\nstatements span multiple lines, although in simple incarnations a whole compound\nstatement may be contained in one line.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > p#index-0:nth-of-type(1)",
      "text": [
        "Compound statements contain (groups of) other statements; they affect or control\nthe execution of those other statements in some way.  In general, compound\nstatements span multiple lines, although in simple incarnations a whole compound\nstatement may be contained in one line."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 201,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <a class=\"reference internal\" href=\"#if\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">if</span></tt></a>, <a class=\"reference internal\" href=\"#while\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">while</span></tt></a> and <a class=\"reference internal\" href=\"#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> statements implement\ntraditional control flow constructs.  <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> specifies exception\nhandlers and/or cleanup code for a group of statements, while the\n<a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement allows the execution of initialization and\nfinalization code around a block of code.  Function and class definitions are\nalso syntactically compound statements.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The ",
        "if",
        ", ",
        "while",
        " and ",
        "for",
        " statements implement\ntraditional control flow constructs.  ",
        "try",
        " specifies exception\nhandlers and/or cleanup code for a group of statements, while the\n",
        "with",
        " statement allows the execution of initialization and\nfinalization code around a block of code.  Function and class definitions are\nalso syntactically compound statements."
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 265,
        "top": 261,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-1:nth-of-type(3)",
      "html": "Compound statements consist of one or more ‘clauses.’  A clause consists of a\nheader and a ‘suite.’  The clause headers of a particular compound statement are\nall at the same indentation level. Each clause header begins with a uniquely\nidentifying keyword and ends with a colon.  A suite is a group of statements\ncontrolled by a clause.  A suite can be one or more semicolon-separated simple\nstatements on the same line as the header, following the header’s colon, or it\ncan be one or more indented statements on subsequent lines.  Only the latter\nform of suite can contain nested compound statements; the following is illegal,\nmostly because it wouldn’t be clear to which <a class=\"reference internal\" href=\"#if\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">if</span></tt></a> clause a following\n<a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause would belong:",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > p#index-1:nth-of-type(3)",
      "text": [
        "Compound statements consist of one or more ‘clauses.’  A clause consists of a\nheader and a ‘suite.’  The clause headers of a particular compound statement are\nall at the same indentation level. Each clause header begins with a uniquely\nidentifying keyword and ends with a colon.  A suite is a group of statements\ncontrolled by a clause.  A suite can be one or more semicolon-separated simple\nstatements on the same line as the header, following the header’s colon, or it\ncan be one or more indented statements on subsequent lines.  Only the latter\nform of suite can contain nested compound statements; the following is illegal,\nmostly because it wouldn’t be clear to which ",
        "if",
        " clause a following\n",
        "else",
        " clause would belong:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 387,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">if</span> <span class=\"n\">test1</span><span class=\"p\">:</span> <span class=\"k\">if</span> <span class=\"n\">test2</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "if",
        "test1",
        ":",
        "if",
        "test2",
        ":",
        "print",
        "(",
        "x",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 433,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Also note that the semicolon binds tighter than the colon in this context, so\nthat in the following example, either all or none of the <a class=\"reference internal\" href=\"../library/functions.html#print\" title=\"print\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">print()</span></tt></a> calls are\nexecuted:",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Also note that the semicolon binds tighter than the colon in this context, so\nthat in the following example, either all or none of the ",
        "print()",
        " calls are\nexecuted:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 471,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"n\">y</span> <span class=\"o\">&lt;</span> <span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">);</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "if",
        "x",
        "<",
        "y",
        "<",
        "z",
        ":",
        "print",
        "(",
        "x",
        ");",
        "print",
        "(",
        "y",
        ");",
        "print",
        "(",
        "z",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 517,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Summarizing:",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Summarizing:"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 265,
        "top": 555,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-compound_stmt\">compound_stmt</strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-if_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">if_stmt</span></tt></a>\n                   | <a class=\"reference internal\" href=\"#grammar-token-while_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">while_stmt</span></tt></a>\n                   | <a class=\"reference internal\" href=\"#grammar-token-for_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">for_stmt</span></tt></a>\n                   | <a class=\"reference internal\" href=\"#grammar-token-try_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">try_stmt</span></tt></a>\n                   | <a class=\"reference internal\" href=\"#grammar-token-with_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">with_stmt</span></tt></a>\n                   | <a class=\"reference internal\" href=\"#grammar-token-funcdef\"><tt class=\"xref docutils literal\"><span class=\"pre\">funcdef</span></tt></a>\n                   | <a class=\"reference internal\" href=\"#grammar-token-classdef\"><tt class=\"xref docutils literal\"><span class=\"pre\">classdef</span></tt></a>\n<strong id=\"grammar-token-suite\">suite        </strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-stmt_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">stmt_list</span></tt></a> NEWLINE | NEWLINE INDENT <a class=\"reference internal\" href=\"#grammar-token-statement\"><tt class=\"xref docutils literal\"><span class=\"pre\">statement</span></tt></a>+ DEDENT\n<strong id=\"grammar-token-statement\">statement    </strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-stmt_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">stmt_list</span></tt></a> NEWLINE | <a class=\"reference internal\" href=\"#grammar-token-compound_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">compound_stmt</span></tt></a>\n<strong id=\"grammar-token-stmt_list\">stmt_list    </strong> ::=  <a class=\"reference internal\" href=\"simple_stmts.html#grammar-token-simple_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">simple_stmt</span></tt></a> (\";\" <a class=\"reference internal\" href=\"simple_stmts.html#grammar-token-simple_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">simple_stmt</span></tt></a>)* [\";\"]\n",
      "path": "div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "compound_stmt",
        " ::=  ",
        "if_stmt",
        "\n                   | ",
        "while_stmt",
        "\n                   | ",
        "for_stmt",
        "\n                   | ",
        "try_stmt",
        "\n                   | ",
        "with_stmt",
        "\n                   | ",
        "funcdef",
        "\n                   | ",
        "classdef",
        "suite        ",
        " ::=  ",
        "stmt_list",
        " NEWLINE | NEWLINE INDENT ",
        "statement",
        "+ DEDENT\n",
        "statement    ",
        " ::=  ",
        "stmt_list",
        " NEWLINE | ",
        "compound_stmt",
        "stmt_list    ",
        " ::=  ",
        "simple_stmt",
        " (\";\" ",
        "simple_stmt",
        ")* [\";\"]\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 763,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-2:nth-of-type(6)",
      "html": "Note that statements always end in a <tt class=\"docutils literal\"><span class=\"pre\">NEWLINE</span></tt> possibly followed by a\n<tt class=\"docutils literal\"><span class=\"pre\">DEDENT</span></tt>.  Also note that optional continuation clauses always begin with a\nkeyword that cannot start a statement, thus there are no ambiguities (the\n‘dangling <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a>‘ problem is solved in Python by requiring nested\n<a class=\"reference internal\" href=\"#if\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">if</span></tt></a> statements to be indented).",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > p#index-2:nth-of-type(6)",
      "text": [
        "Note that statements always end in a ",
        "NEWLINE",
        " possibly followed by a\n",
        "DEDENT",
        ".  Also note that optional continuation clauses always begin with a\nkeyword that cannot start a statement, thus there are no ambiguities (the\n‘dangling ",
        "else",
        "‘ problem is solved in Python by requiring nested\n",
        "if",
        " statements to be indented)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 823,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "The formatting of the grammar rules in the following sections places each clause\non a separate line for clarity.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "The formatting of the grammar rules in the following sections places each clause\non a separate line for clarity."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 861,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "8.1. The <a class=\"reference internal\" href=\"#if\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">if</span></tt></a> statement<a class=\"headerlink\" href=\"#the-if-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-if-statement.section:nth-of-type(3) > h2:nth-of-type(1)",
      "text": [
        "8.1. The ",
        "if",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 924,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-3:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#if\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">if</span></tt></a> statement is used for conditional execution:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-if-statement.section:nth-of-type(3) > p#index-3:nth-of-type(1)",
      "text": [
        "The ",
        "if",
        " statement is used for conditional execution:"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 962,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-if_stmt\">if_stmt</strong> ::=  \"if\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a> \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n             ( \"elif\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a> \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a> )*\n             [\"else\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>]\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-if-statement.section:nth-of-type(3) > pre:nth-of-type(1)",
      "text": [
        "if_stmt",
        " ::=  \"if\" ",
        "expression",
        " \":\" ",
        "suite",
        "\n             ( \"elif\" ",
        "expression",
        " \":\" ",
        "suite",
        " )*\n             [\"else\" \":\" ",
        "suite",
        "]\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1044,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "It selects exactly one of the suites by evaluating the expressions one by one\nuntil one is found to be true (see section <a class=\"reference internal\" href=\"expressions.html#booleans\"><em>Boolean operations</em></a> for the definition of\ntrue and false); then that suite is executed (and no other part of the\n<a class=\"reference internal\" href=\"#if\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">if</span></tt></a> statement is executed or evaluated).  If all expressions are\nfalse, the suite of the <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause, if present, is executed.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-if-statement.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "It selects exactly one of the suites by evaluating the expressions one by one\nuntil one is found to be true (see section ",
        "Boolean operations",
        " for the definition of\ntrue and false); then that suite is executed (and no other part of the\n",
        "if",
        " statement is executed or evaluated).  If all expressions are\nfalse, the suite of the ",
        "else",
        " clause, if present, is executed."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 1104,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "8.2. The <a class=\"reference internal\" href=\"#while\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">while</span></tt></a> statement<a class=\"headerlink\" href=\"#the-while-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-while-statement.section:nth-of-type(4) > h2:nth-of-type(1)",
      "text": [
        "8.2. The ",
        "while",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1167,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-4:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#while\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">while</span></tt></a> statement is used for repeated execution as long as an\nexpression is true:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-while-statement.section:nth-of-type(4) > p#index-4:nth-of-type(1)",
      "text": [
        "The ",
        "while",
        " statement is used for repeated execution as long as an\nexpression is true:"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 1205,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-while_stmt\">while_stmt</strong> ::=  \"while\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a> \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n                [\"else\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>]\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-while-statement.section:nth-of-type(4) > pre:nth-of-type(1)",
      "text": [
        "while_stmt",
        " ::=  \"while\" ",
        "expression",
        " \":\" ",
        "suite",
        "\n                [\"else\" \":\" ",
        "suite",
        "]\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1269,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "This repeatedly tests the expression and, if it is true, executes the first\nsuite; if the expression is false (which may be the first time it is tested) the\nsuite of the <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause, if present, is executed and the loop\nterminates.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-while-statement.section:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "This repeatedly tests the expression and, if it is true, executes the first\nsuite; if the expression is false (which may be the first time it is tested) the\nsuite of the ",
        "else",
        " clause, if present, is executed and the loop\nterminates."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1329,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-5:nth-of-type(3)",
      "html": "A <a class=\"reference internal\" href=\"simple_stmts.html#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a> statement executed in the first suite terminates the loop\nwithout executing the <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause’s suite.  A <a class=\"reference internal\" href=\"simple_stmts.html#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a>\nstatement executed in the first suite skips the rest of the suite and goes back\nto testing the expression.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-while-statement.section:nth-of-type(4) > p#index-5:nth-of-type(3)",
      "text": [
        "A ",
        "break",
        " statement executed in the first suite terminates the loop\nwithout executing the ",
        "else",
        " clause’s suite.  A ",
        "continue",
        "\nstatement executed in the first suite skips the rest of the suite and goes back\nto testing the expression."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 1389,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "8.3. The <a class=\"reference internal\" href=\"#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> statement<a class=\"headerlink\" href=\"#the-for-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > h2:nth-of-type(1)",
      "text": [
        "8.3. The ",
        "for",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1452,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-6:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> statement is used to iterate over the elements of a sequence\n(such as a string, tuple or list) or other iterable object:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > p#index-6:nth-of-type(1)",
      "text": [
        "The ",
        "for",
        " statement is used to iterate over the elements of a sequence\n(such as a string, tuple or list) or other iterable object:"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 1490,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-for_stmt\">for_stmt</strong> ::=  \"for\" <a class=\"reference internal\" href=\"simple_stmts.html#grammar-token-target_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">target_list</span></tt></a> \"in\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression_list</span></tt></a> \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n              [\"else\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>]\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > pre:nth-of-type(1)",
      "text": [
        "for_stmt",
        " ::=  \"for\" ",
        "target_list",
        " \"in\" ",
        "expression_list",
        " \":\" ",
        "suite",
        "\n              [\"else\" \":\" ",
        "suite",
        "]\n"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 1554,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The expression list is evaluated once; it should yield an iterable object.  An\niterator is created for the result of the <tt class=\"docutils literal\"><span class=\"pre\">expression_list</span></tt>.  The suite is\nthen executed once for each item provided by the iterator, in the order of\nascending indices.  Each item in turn is assigned to the target list using the\nstandard rules for assignments (see <a class=\"reference internal\" href=\"simple_stmts.html#assignment\"><em>Assignment statements</em></a>), and then the suite is\nexecuted.  When the items are exhausted (which is immediately when the sequence\nis empty or an iterator raises a <a class=\"reference internal\" href=\"../library/exceptions.html#StopIteration\" title=\"StopIteration\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></tt></a> exception), the suite in\nthe <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause, if present, is executed, and the loop terminates.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > p:nth-of-type(2)",
      "text": [
        "The expression list is evaluated once; it should yield an iterable object.  An\niterator is created for the result of the ",
        "expression_list",
        ".  The suite is\nthen executed once for each item provided by the iterator, in the order of\nascending indices.  Each item in turn is assigned to the target list using the\nstandard rules for assignments (see ",
        "Assignment statements",
        "), and then the suite is\nexecuted.  When the items are exhausted (which is immediately when the sequence\nis empty or an iterator raises a ",
        "StopIteration",
        " exception), the suite in\nthe ",
        "else",
        " clause, if present, is executed, and the loop terminates."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1658,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-7:nth-of-type(3)",
      "html": "A <a class=\"reference internal\" href=\"simple_stmts.html#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a> statement executed in the first suite terminates the loop\nwithout executing the <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause’s suite.  A <a class=\"reference internal\" href=\"simple_stmts.html#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a>\nstatement executed in the first suite skips the rest of the suite and continues\nwith the next item, or with the <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause if there was no next\nitem.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > p#index-7:nth-of-type(3)",
      "text": [
        "A ",
        "break",
        " statement executed in the first suite terminates the loop\nwithout executing the ",
        "else",
        " clause’s suite.  A ",
        "continue",
        "\nstatement executed in the first suite skips the rest of the suite and continues\nwith the next item, or with the ",
        "else",
        " clause if there was no next\nitem."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1718,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The suite may assign to the variable(s) in the target list; this does not affect\nthe next item assigned to it.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > p:nth-of-type(4)",
      "text": [
        "The suite may assign to the variable(s) in the target list; this does not affect\nthe next item assigned to it."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1756,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-8:nth-of-type(5)",
      "html": "Names in the target list are not deleted when the loop is finished, but if the\nsequence is empty, it will not have been assigned to at all by the loop.  Hint:\nthe built-in function <a class=\"reference internal\" href=\"../library/stdtypes.html#range\" title=\"range\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">range()</span></tt></a> returns an iterator of integers suitable to\nemulate the effect of Pascal’s <tt class=\"docutils literal\"><span class=\"pre\">for</span> <span class=\"pre\">i</span> <span class=\"pre\">:=</span> <span class=\"pre\">a</span> <span class=\"pre\">to</span> <span class=\"pre\">b</span> <span class=\"pre\">do</span></tt>; e.g., <tt class=\"docutils literal\"><span class=\"pre\">list(range(3))</span></tt>\nreturns the list <tt class=\"docutils literal\"><span class=\"pre\">[0,</span> <span class=\"pre\">1,</span> <span class=\"pre\">2]</span></tt>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > p#index-8:nth-of-type(5)",
      "text": [
        "Names in the target list are not deleted when the loop is finished, but if the\nsequence is empty, it will not have been assigned to at all by the loop.  Hint:\nthe built-in function ",
        "range()",
        " returns an iterator of integers suitable to\nemulate the effect of Pascal’s ",
        "for",
        "i",
        ":=",
        "a",
        "to",
        "b",
        "do",
        "; e.g., ",
        "list(range(3))",
        "\nreturns the list ",
        "[0,",
        "1,",
        "2]",
        "."
      ]
    },
    {
      "bound": {
        "height": 194,
        "left": 265,
        "top": 1816,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p id=\"index-9\">There is a subtlety when the sequence is being modified by the loop (this can\nonly occur for mutable sequences, i.e. lists).  An internal counter is used\nto keep track of which item is used next, and this is incremented on each\niteration.  When this counter has reached the length of the sequence the loop\nterminates.  This means that if the suite deletes the current (or a previous)\nitem from the sequence, the next item will be skipped (since it gets the\nindex of the current item which has already been treated).  Likewise, if the\nsuite inserts an item in the sequence before the current item, the current\nitem will be treated again the next time through the loop. This can lead to\nnasty bugs that can be avoided by making a temporary copy using a slice of\nthe whole sequence, e.g.,</p>\n<div class=\"last highlight-python3\" style=\"position: relative; \"><div class=\"highlight\"><pre><span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">[:]:</span>\n    <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "There is a subtlety when the sequence is being modified by the loop (this can\nonly occur for mutable sequences, i.e. lists).  An internal counter is used\nto keep track of which item is used next, and this is incremented on each\niteration.  When this counter has reached the length of the sequence the loop\nterminates.  This means that if the suite deletes the current (or a previous)\nitem from the sequence, the next item will be skipped (since it gets the\nindex of the current item which has already been treated).  Likewise, if the\nsuite inserts an item in the sequence before the current item, the current\nitem will be treated again the next time through the loop. This can lead to\nnasty bugs that can be avoided by making a temporary copy using a slice of\nthe whole sequence, e.g.,"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 273,
        "top": 1949,
        "width": 1303
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">[:]:</span>\n    <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-for-statement.section:nth-of-type(5) > div.admonition.note:nth-of-type(1) > div.highlight-python3.last:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "for",
        "x",
        "in",
        "a",
        "[:]:",
        "if",
        "x",
        "<",
        "0",
        ":",
        "a",
        ".",
        "remove",
        "(",
        "x",
        ")"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 2020,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "8.4. The <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> statement<a class=\"headerlink\" href=\"#the-try-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > h2:nth-of-type(1)",
      "text": [
        "8.4. The ",
        "try",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2083,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-11:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> statement specifies exception handlers and/or cleanup code\nfor a group of statements:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p#index-11:nth-of-type(1)",
      "text": [
        "The ",
        "try",
        " statement specifies exception handlers and/or cleanup code\nfor a group of statements:"
      ]
    },
    {
      "bound": {
        "height": 138,
        "left": 265,
        "top": 2121,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-try_stmt\">try_stmt </strong> ::=  try1_stmt | try2_stmt\n<strong id=\"grammar-token-try1_stmt\">try1_stmt</strong> ::=  \"try\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n               (\"except\" [<a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"simple_stmts.html#grammar-token-target\"><tt class=\"xref docutils literal\"><span class=\"pre\">target</span></tt></a>]] \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>)+\n               [\"else\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>]\n               [\"finally\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>]\n<strong id=\"grammar-token-try2_stmt\">try2_stmt</strong> ::=  \"try\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n               \"finally\" \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > pre:nth-of-type(1)",
      "text": [
        "try_stmt ",
        " ::=  try1_stmt | try2_stmt\n",
        "try1_stmt",
        " ::=  \"try\" \":\" ",
        "suite",
        "\n               (\"except\" [",
        "expression",
        " [\"as\" ",
        "target",
        "]] \":\" ",
        "suite",
        ")+\n               [\"else\" \":\" ",
        "suite",
        "]\n               [\"finally\" \":\" ",
        "suite",
        "]\n",
        "try2_stmt",
        " ::=  \"try\" \":\" ",
        "suite",
        "\n               \"finally\" \":\" ",
        "suite"
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 265,
        "top": 2275,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <a class=\"reference internal\" href=\"#except\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">except</span></tt></a> clause(s) specify one or more exception handlers. When no\nexception occurs in the <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> clause, no exception handler is executed.\nWhen an exception occurs in the <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> suite, a search for an exception\nhandler is started.  This search inspects the except clauses in turn until one\nis found that matches the exception.  An expression-less except clause, if\npresent, must be last; it matches any exception.  For an except clause with an\nexpression, that expression is evaluated, and the clause matches the exception\nif the resulting object is “compatible” with the exception.  An object is\ncompatible with an exception if it is the class or a base class of the exception\nobject or a tuple containing an item compatible with the exception.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(2)",
      "text": [
        "The ",
        "except",
        " clause(s) specify one or more exception handlers. When no\nexception occurs in the ",
        "try",
        " clause, no exception handler is executed.\nWhen an exception occurs in the ",
        "try",
        " suite, a search for an exception\nhandler is started.  This search inspects the except clauses in turn until one\nis found that matches the exception.  An expression-less except clause, if\npresent, must be last; it matches any exception.  For an except clause with an\nexpression, that expression is evaluated, and the clause matches the exception\nif the resulting object is “compatible” with the exception.  An object is\ncompatible with an exception if it is the class or a base class of the exception\nobject or a tuple containing an item compatible with the exception."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2401,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If no except clause matches the exception, the search for an exception handler\ncontinues in the surrounding code and on the invocation stack.  <a class=\"footnote-reference\" href=\"#id5\" id=\"id1\">[1]</a>",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(3)",
      "text": [
        "If no except clause matches the exception, the search for an exception handler\ncontinues in the surrounding code and on the invocation stack.  ",
        "[1]"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 2439,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "If the evaluation of an expression in the header of an except clause raises an\nexception, the original search for a handler is canceled and a search starts for\nthe new exception in the surrounding code and on the call stack (it is treated\nas if the entire <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> statement raised the exception).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(4)",
      "text": [
        "If the evaluation of an expression in the header of an except clause raises an\nexception, the original search for a handler is canceled and a search starts for\nthe new exception in the surrounding code and on the call stack (it is treated\nas if the entire ",
        "try",
        " statement raised the exception)."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 2499,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "When a matching except clause is found, the exception is assigned to the target\nspecified after the <a class=\"reference internal\" href=\"#as\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">as</span></tt></a> keyword in that except clause, if present, and\nthe except clause’s suite is executed.  All except clauses must have an\nexecutable block.  When the end of this block is reached, execution continues\nnormally after the entire try statement.  (This means that if two nested\nhandlers exist for the same exception, and the exception occurs in the try\nclause of the inner handler, the outer handler will not handle the exception.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(5)",
      "text": [
        "When a matching except clause is found, the exception is assigned to the target\nspecified after the ",
        "as",
        " keyword in that except clause, if present, and\nthe except clause’s suite is executed.  All except clauses must have an\nexecutable block.  When the end of this block is reached, execution continues\nnormally after the entire try statement.  (This means that if two nested\nhandlers exist for the same exception, and the exception occurs in the try\nclause of the inner handler, the outer handler will not handle the exception.)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2581,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "When an exception has been assigned using <tt class=\"docutils literal\"><span class=\"pre\">as</span> <span class=\"pre\">target</span></tt>, it is cleared at the\nend of the except clause.  This is as if",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(6)",
      "text": [
        "When an exception has been assigned using ",
        "as",
        "target",
        ", it is cleared at the\nend of the except clause.  This is as if"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 2619,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">except</span> <span class=\"n\">E</span> <span class=\"k\">as</span> <span class=\"n\">N</span><span class=\"p\">:</span>\n    <span class=\"n\">foo</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "except",
        "E",
        "as",
        "N",
        ":",
        "foo"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2683,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "was translated to",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(7)",
      "text": [
        "was translated to"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 265,
        "top": 2721,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">except</span> <span class=\"n\">E</span> <span class=\"k\">as</span> <span class=\"n\">N</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">foo</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">del</span> <span class=\"n\">N</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "except",
        "E",
        "as",
        "N",
        ":",
        "try",
        ":",
        "foo",
        "finally",
        ":",
        "del",
        "N"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 2839,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "This means the exception must be assigned to a different name to be able to\nrefer to it after the except clause.  Exceptions are cleared because with the\ntraceback attached to them, they form a reference cycle with the stack frame,\nkeeping all locals in that frame alive until the next garbage collection occurs.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(8)",
      "text": [
        "This means the exception must be assigned to a different name to be able to\nrefer to it after the except clause.  Exceptions are cleared because with the\ntraceback attached to them, they form a reference cycle with the stack frame,\nkeeping all locals in that frame alive until the next garbage collection occurs."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 2899,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-12:nth-of-type(9)",
      "html": "Before an except clause’s suite is executed, details about the exception are\nstored in the <a class=\"reference internal\" href=\"../library/sys.html#module-sys\" title=\"sys: Access system-specific parameters and functions.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">sys</span></tt></a> module and can be access via <a class=\"reference internal\" href=\"../library/sys.html#sys.exc_info\" title=\"sys.exc_info\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sys.exc_info()</span></tt></a>.\n<a class=\"reference internal\" href=\"../library/sys.html#sys.exc_info\" title=\"sys.exc_info\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sys.exc_info()</span></tt></a> returns a 3-tuple consisting of the exception class, the\nexception instance and a traceback object (see section <a class=\"reference internal\" href=\"datamodel.html#types\"><em>The standard type hierarchy</em></a>) identifying\nthe point in the program where the exception occurred.  <a class=\"reference internal\" href=\"../library/sys.html#sys.exc_info\" title=\"sys.exc_info\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sys.exc_info()</span></tt></a>\nvalues are restored to their previous values (before the call) when returning\nfrom a function that handled an exception.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p#index-12:nth-of-type(9)",
      "text": [
        "Before an except clause’s suite is executed, details about the exception are\nstored in the ",
        "sys",
        " module and can be access via ",
        "sys.exc_info()",
        ".\n",
        "sys.exc_info()",
        " returns a 3-tuple consisting of the exception class, the\nexception instance and a traceback object (see section ",
        "The standard type hierarchy",
        ") identifying\nthe point in the program where the exception occurred.  ",
        "sys.exc_info()",
        "\nvalues are restored to their previous values (before the call) when returning\nfrom a function that handled an exception."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2981,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-13:nth-of-type(10)",
      "html": "The optional <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clause is executed if and when control flows off\nthe end of the <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> clause. <a class=\"footnote-reference\" href=\"#id6\" id=\"id2\">[2]</a> Exceptions in the <a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a>\nclause are not handled by the preceding <a class=\"reference internal\" href=\"#except\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">except</span></tt></a> clauses.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p#index-13:nth-of-type(10)",
      "text": [
        "The optional ",
        "else",
        " clause is executed if and when control flows off\nthe end of the ",
        "try",
        " clause. ",
        "[2]",
        " Exceptions in the ",
        "else",
        "\nclause are not handled by the preceding ",
        "except",
        " clauses."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 3019,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-14:nth-of-type(11)",
      "html": "If <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> is present, it specifies a ‘cleanup’ handler.  The\n<a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> clause is executed, including any <a class=\"reference internal\" href=\"#except\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">except</span></tt></a> and\n<a class=\"reference internal\" href=\"#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a> clauses.  If an exception occurs in any of the clauses and is\nnot handled, the exception is temporarily saved. The <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause\nis executed.  If there is a saved exception it is re-raised at the end of the\n<a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause.  If the <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause raises another\nexception, the saved exception is set as the context of the new exception.\nIf the <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause executes a <a class=\"reference internal\" href=\"simple_stmts.html#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a> or <a class=\"reference internal\" href=\"simple_stmts.html#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a>\nstatement, the saved exception is discarded:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p#index-14:nth-of-type(11)",
      "text": [
        "If ",
        "finally",
        " is present, it specifies a ‘cleanup’ handler.  The\n",
        "try",
        " clause is executed, including any ",
        "except",
        " and\n",
        "else",
        " clauses.  If an exception occurs in any of the clauses and is\nnot handled, the exception is temporarily saved. The ",
        "finally",
        " clause\nis executed.  If there is a saved exception it is re-raised at the end of the\n",
        "finally",
        " clause.  If the ",
        "finally",
        " clause raises another\nexception, the saved exception is set as the context of the new exception.\nIf the ",
        "finally",
        " clause executes a ",
        "return",
        " or ",
        "break",
        "\nstatement, the saved exception is discarded:"
      ]
    },
    {
      "bound": {
        "height": 156,
        "left": 265,
        "top": 3101,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">():</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mi\">0</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"mi\">42</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">f</span><span class=\"p\">()</span>\n<span class=\"mi\">42</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "f",
        "():",
        "try",
        ":",
        "1",
        "/",
        "0",
        "finally",
        ":",
        "return",
        "42",
        ">>>",
        "f",
        "()",
        "42"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3273,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(12)",
      "html": "The exception information is not available to the program during execution of\nthe <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(12)",
      "text": [
        "The exception information is not available to the program during execution of\nthe ",
        "finally",
        " clause."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3311,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-15:nth-of-type(13)",
      "html": "When a <a class=\"reference internal\" href=\"simple_stmts.html#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a>, <a class=\"reference internal\" href=\"simple_stmts.html#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a> or <a class=\"reference internal\" href=\"simple_stmts.html#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a> statement is\nexecuted in the <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> suite of a <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a>...<a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a>\nstatement, the <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause is also executed ‘on the way out.’ A\n<a class=\"reference internal\" href=\"simple_stmts.html#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a> statement is illegal in the <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause. (The\nreason is a problem with the current implementation — this restriction may be\nlifted in the future).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p#index-15:nth-of-type(13)",
      "text": [
        "When a ",
        "return",
        ", ",
        "break",
        " or ",
        "continue",
        " statement is\nexecuted in the ",
        "try",
        " suite of a ",
        "try",
        "...",
        "finally",
        "\nstatement, the ",
        "finally",
        " clause is also executed ‘on the way out.’ A\n",
        "continue",
        " statement is illegal in the ",
        "finally",
        " clause. (The\nreason is a problem with the current implementation — this restriction may be\nlifted in the future)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3371,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(14)",
      "html": "Additional information on exceptions can be found in section <a class=\"reference internal\" href=\"executionmodel.html#exceptions\"><em>Exceptions</em></a>,\nand information on using the <a class=\"reference internal\" href=\"simple_stmts.html#raise\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">raise</span></tt></a> statement to generate exceptions\nmay be found in section <a class=\"reference internal\" href=\"simple_stmts.html#raise\"><em>The raise statement</em></a>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-try-statement.section:nth-of-type(6) > p:nth-of-type(14)",
      "text": [
        "Additional information on exceptions can be found in section ",
        "Exceptions",
        ",\nand information on using the ",
        "raise",
        " statement to generate exceptions\nmay be found in section ",
        "The raise statement",
        "."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 3431,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "8.5. The <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement<a class=\"headerlink\" href=\"#the-with-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > h2:nth-of-type(1)",
      "text": [
        "8.5. The ",
        "with",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3494,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-16:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement is used to wrap the execution of a block with\nmethods defined by a context manager (see section <a class=\"reference internal\" href=\"datamodel.html#context-managers\"><em>With Statement Context Managers</em></a>).\nThis allows common <a class=\"reference internal\" href=\"#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a>...<a class=\"reference internal\" href=\"#except\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">except</span></tt></a>...<a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a>\nusage patterns to be encapsulated for convenient reuse.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > p#index-16:nth-of-type(1)",
      "text": [
        "The ",
        "with",
        " statement is used to wrap the execution of a block with\nmethods defined by a context manager (see section ",
        "With Statement Context Managers",
        ").\nThis allows common ",
        "try",
        "...",
        "except",
        "...",
        "finally",
        "\nusage patterns to be encapsulated for convenient reuse."
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 3554,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-with_stmt\">with_stmt</strong> ::=  \"with\" with_item (\",\" with_item)* \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n<strong id=\"grammar-token-with_item\">with_item</strong> ::=  <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"simple_stmts.html#grammar-token-target\"><tt class=\"xref docutils literal\"><span class=\"pre\">target</span></tt></a>]\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > pre:nth-of-type(1)",
      "text": [
        "with_stmt",
        " ::=  \"with\" with_item (\",\" with_item)* \":\" ",
        "suite",
        "with_item",
        " ::=  ",
        "expression",
        " [\"as\" ",
        "target",
        "]\n"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3618,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The execution of the <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement with one “item” proceeds as follows:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > p:nth-of-type(2)",
      "text": [
        "The execution of the ",
        "with",
        " statement with one “item” proceeds as follows:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 3656,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The context expression (the expression given in the <a class=\"reference internal\" href=\"#grammar-token-with_item\"><tt class=\"xref std std-token docutils literal\"><span class=\"pre\">with_item</span></tt></a>) is\nevaluated to obtain a context manager.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "The context expression (the expression given in the ",
        "with_item",
        ") is\nevaluated to obtain a context manager."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 3694,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The context manager’s <a class=\"reference internal\" href=\"datamodel.html#object.__exit__\" title=\"object.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a> is loaded for later use.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "The context manager’s ",
        "__exit__()",
        " is loaded for later use."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 3732,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The context manager’s <a class=\"reference internal\" href=\"datamodel.html#object.__enter__\" title=\"object.__enter__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__enter__()</span></tt></a> method is invoked.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(3) > p.first:nth-of-type(1)",
      "text": [
        "The context manager’s ",
        "__enter__()",
        " method is invoked."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 3770,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If a target was included in the <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement, the return value\nfrom <a class=\"reference internal\" href=\"datamodel.html#object.__enter__\" title=\"object.__enter__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__enter__()</span></tt></a> is assigned to it.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(4) > p.first:nth-of-type(1)",
      "text": [
        "If a target was included in the ",
        "with",
        " statement, the return value\nfrom ",
        "__enter__()",
        " is assigned to it."
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 305,
        "top": 3808,
        "width": 1279
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement guarantees that if the <a class=\"reference internal\" href=\"datamodel.html#object.__enter__\" title=\"object.__enter__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__enter__()</span></tt></a>\nmethod returns without an error, then <a class=\"reference internal\" href=\"datamodel.html#object.__exit__\" title=\"object.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a> will always be\ncalled. Thus, if an error occurs during the assignment to the target list,\nit will be treated the same as an error occurring within the suite would\nbe. See step 6 below.</p>\n",
      "path": "div > div > div > div > div > div > ol > li > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(4) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "The ",
        "with",
        " statement guarantees that if the ",
        "__enter__()",
        "\nmethod returns without an error, then ",
        "__exit__()",
        " will always be\ncalled. Thus, if an error occurs during the assignment to the target list,\nit will be treated the same as an error occurring within the suite would\nbe. See step 6 below."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 3878,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The suite is executed.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(5) > p.first:nth-of-type(1)",
      "text": [
        "The suite is executed."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 3916,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The context manager’s <a class=\"reference internal\" href=\"datamodel.html#object.__exit__\" title=\"object.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a> method is invoked.  If an exception\ncaused the suite to be exited, its type, value, and traceback are passed as\narguments to <a class=\"reference internal\" href=\"datamodel.html#object.__exit__\" title=\"object.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a>. Otherwise, three <a class=\"reference internal\" href=\"../library/constants.html#None\" title=\"None\"><tt class=\"xref py py-const xref docutils literal\"><span class=\"pre\">None</span></tt></a> arguments are\nsupplied.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > p.first:nth-of-type(1)",
      "text": [
        "The context manager’s ",
        "__exit__()",
        " method is invoked.  If an exception\ncaused the suite to be exited, its type, value, and traceback are passed as\narguments to ",
        "__exit__()",
        ". Otherwise, three ",
        "None",
        " arguments are\nsupplied."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 3976,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If the suite was exited due to an exception, and the return value from the\n<a class=\"reference internal\" href=\"datamodel.html#object.__exit__\" title=\"object.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a> method was false, the exception is reraised.  If the return\nvalue was true, the exception is suppressed, and execution continues with the\nstatement following the <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > p:nth-of-type(2)",
      "text": [
        "If the suite was exited due to an exception, and the return value from the\n",
        "__exit__()",
        " method was false, the exception is reraised.  If the return\nvalue was true, the exception is suppressed, and execution continues with the\nstatement following the ",
        "with",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 4036,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If the suite was exited for any reason other than an exception, the return\nvalue from <a class=\"reference internal\" href=\"datamodel.html#object.__exit__\" title=\"object.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a> is ignored, and execution proceeds at the normal\nlocation for the kind of exit that was taken.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > p:nth-of-type(3)",
      "text": [
        "If the suite was exited for any reason other than an exception, the return\nvalue from ",
        "__exit__()",
        " is ignored, and execution proceeds at the normal\nlocation for the kind of exit that was taken."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4096,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "With more than one item, the context managers are processed as if multiple\n<a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statements were nested:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > p:nth-of-type(3)",
      "text": [
        "With more than one item, the context managers are processed as if multiple\n",
        "with",
        " statements were nested:"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 4134,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">with</span> <span class=\"n\">A</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">b</span><span class=\"p\">:</span>\n    <span class=\"n\">suite</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "with",
        "A",
        "()",
        "as",
        "a",
        ",",
        "B",
        "()",
        "as",
        "b",
        ":",
        "suite"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4198,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "is equivalent to",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > p:nth-of-type(4)",
      "text": [
        "is equivalent to"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 4236,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">with</span> <span class=\"n\">A</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">B</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">b</span><span class=\"p\">:</span>\n        <span class=\"n\">suite</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "with",
        "A",
        "()",
        "as",
        "a",
        ":",
        "with",
        "B",
        "()",
        "as",
        "b",
        ":",
        "suite"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4318,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(5)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.1:</span> Support for multiple context expressions.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > p.versionchanged:nth-of-type(5)",
      "text": [
        "Changed in version 3.1:",
        " Support for multiple context expressions."
      ]
    },
    {
      "bound": {
        "height": 106,
        "left": 265,
        "top": 4356,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(3)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><span class=\"target\" id=\"index-17\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0343\"><strong>PEP 0343</strong></a> - The “with” statement</dt>\n<dd>The specification, background, and examples for the Python <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a>\nstatement.</dd>\n</dl>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(3)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 4402,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "<span class=\"target\" id=\"index-17\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0343\"><strong>PEP 0343</strong></a> - The “with” statement",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(3) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "PEP 0343",
        " - The “with” statement"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 4424,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(1)",
      "html": "The specification, background, and examples for the Python <a class=\"reference internal\" href=\"#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a>\nstatement.",
      "path": "div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#the-with-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(3) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(1)",
      "text": [
        "The specification, background, and examples for the Python ",
        "with",
        "\nstatement."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 4472,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "8.6. Function definitions<a class=\"headerlink\" href=\"#function-definitions\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > h2:nth-of-type(1)",
      "text": [
        "8.6. Function definitions",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4534,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-19:nth-of-type(1)",
      "html": "A function definition defines a user-defined function object (see section\n<a class=\"reference internal\" href=\"datamodel.html#types\"><em>The standard type hierarchy</em></a>):",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p#index-19:nth-of-type(1)",
      "text": [
        "A function definition defines a user-defined function object (see section\n",
        "The standard type hierarchy",
        "):"
      ]
    },
    {
      "bound": {
        "height": 210,
        "left": 265,
        "top": 4572,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-funcdef\">funcdef       </strong> ::=  [<a class=\"reference internal\" href=\"#grammar-token-decorators\"><tt class=\"xref docutils literal\"><span class=\"pre\">decorators</span></tt></a>] \"def\" <a class=\"reference internal\" href=\"#grammar-token-funcname\"><tt class=\"xref docutils literal\"><span class=\"pre\">funcname</span></tt></a> \"(\" [<a class=\"reference internal\" href=\"#grammar-token-parameter_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">parameter_list</span></tt></a>] \")\" [\"-&gt;\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a>] \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n<strong id=\"grammar-token-decorators\">decorators    </strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-decorator\"><tt class=\"xref docutils literal\"><span class=\"pre\">decorator</span></tt></a>+\n<strong id=\"grammar-token-decorator\">decorator     </strong> ::=  \"@\" <a class=\"reference internal\" href=\"#grammar-token-dotted_name\"><tt class=\"xref docutils literal\"><span class=\"pre\">dotted_name</span></tt></a> [\"(\" [<a class=\"reference internal\" href=\"#grammar-token-parameter_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">parameter_list</span></tt></a> [\",\"]] \")\"] NEWLINE\n<strong id=\"grammar-token-dotted_name\">dotted_name   </strong> ::=  <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> (\".\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>)*\n<strong id=\"grammar-token-parameter_list\">parameter_list</strong> ::=  (<a class=\"reference internal\" href=\"#grammar-token-defparameter\"><tt class=\"xref docutils literal\"><span class=\"pre\">defparameter</span></tt></a> \",\")*\n                    ( \"*\" [<a class=\"reference internal\" href=\"#grammar-token-parameter\"><tt class=\"xref docutils literal\"><span class=\"pre\">parameter</span></tt></a>] (\",\" <a class=\"reference internal\" href=\"#grammar-token-defparameter\"><tt class=\"xref docutils literal\"><span class=\"pre\">defparameter</span></tt></a>)* [\",\" \"**\" <a class=\"reference internal\" href=\"#grammar-token-parameter\"><tt class=\"xref docutils literal\"><span class=\"pre\">parameter</span></tt></a>]\n                    | \"**\" <a class=\"reference internal\" href=\"#grammar-token-parameter\"><tt class=\"xref docutils literal\"><span class=\"pre\">parameter</span></tt></a>\n                    | <a class=\"reference internal\" href=\"#grammar-token-defparameter\"><tt class=\"xref docutils literal\"><span class=\"pre\">defparameter</span></tt></a> [\",\"] )\n<strong id=\"grammar-token-parameter\">parameter     </strong> ::=  <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> [\":\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a>]\n<strong id=\"grammar-token-defparameter\">defparameter  </strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-parameter\"><tt class=\"xref docutils literal\"><span class=\"pre\">parameter</span></tt></a> [\"=\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a>]\n<strong id=\"grammar-token-funcname\">funcname      </strong> ::=  <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > pre:nth-of-type(1)",
      "text": [
        "funcdef       ",
        " ::=  [",
        "decorators",
        "] \"def\" ",
        "funcname",
        " \"(\" [",
        "parameter_list",
        "] \")\" [\"->\" ",
        "expression",
        "] \":\" ",
        "suite",
        "decorators    ",
        " ::=  ",
        "decorator",
        "+\n",
        "decorator     ",
        " ::=  \"@\" ",
        "dotted_name",
        " [\"(\" [",
        "parameter_list",
        " [\",\"]] \")\"] NEWLINE\n",
        "dotted_name   ",
        " ::=  ",
        "identifier",
        " (\".\" ",
        "identifier",
        ")*\n",
        "parameter_list",
        " ::=  (",
        "defparameter",
        " \",\")*\n                    ( \"*\" [",
        "parameter",
        "] (\",\" ",
        "defparameter",
        ")* [\",\" \"**\" ",
        "parameter",
        "]\n                    | \"**\" ",
        "parameter",
        "\n                    | ",
        "defparameter",
        " [\",\"] )\n",
        "parameter     ",
        " ::=  ",
        "identifier",
        " [\":\" ",
        "expression",
        "]\n",
        "defparameter  ",
        " ::=  ",
        "parameter",
        " [\"=\" ",
        "expression",
        "]\n",
        "funcname      ",
        " ::=  ",
        "identifier"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 4798,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A function definition is an executable statement.  Its execution binds the\nfunction name in the current local namespace to a function object (a wrapper\naround the executable code for the function).  This function object contains a\nreference to the current global namespace as the global namespace to be used\nwhen the function is called.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p:nth-of-type(2)",
      "text": [
        "A function definition is an executable statement.  Its execution binds the\nfunction name in the current local namespace to a function object (a wrapper\naround the executable code for the function).  This function object contains a\nreference to the current global namespace as the global namespace to be used\nwhen the function is called."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4858,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The function definition does not execute the function body; this gets executed\nonly when the function is called. <a class=\"footnote-reference\" href=\"#id7\" id=\"id3\">[3]</a>",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p:nth-of-type(3)",
      "text": [
        "The function definition does not execute the function body; this gets executed\nonly when the function is called. ",
        "[3]"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 4896,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-20:nth-of-type(4)",
      "html": "A function definition may be wrapped by one or more <a class=\"reference internal\" href=\"../glossary.html#term-decorator\"><em class=\"xref std std-term\">decorator</em></a> expressions.\nDecorator expressions are evaluated when the function is defined, in the scope\nthat contains the function definition.  The result must be a callable, which is\ninvoked with the function object as the only argument. The returned value is\nbound to the function name instead of the function object.  Multiple decorators\nare applied in nested fashion. For example, the following code",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p#index-20:nth-of-type(4)",
      "text": [
        "A function definition may be wrapped by one or more ",
        "decorator",
        " expressions.\nDecorator expressions are evaluated when the function is defined, in the scope\nthat contains the function definition.  The result must be a callable, which is\ninvoked with the function object as the only argument. The returned value is\nbound to the function name instead of the function object.  Multiple decorators\nare applied in nested fashion. For example, the following code"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 4978,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"nd\">@f1</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n<span class=\"nd\">@f2</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span> <span class=\"k\">pass</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "@f1",
        "(",
        "arg",
        ")",
        "@f2",
        "def",
        "func",
        "():",
        "pass"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5060,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "is equivalent to",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p:nth-of-type(5)",
      "text": [
        "is equivalent to"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 5098,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span> <span class=\"k\">pass</span>\n<span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)(</span><span class=\"n\">f2</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">))</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "func",
        "():",
        "pass",
        "func",
        "=",
        "f1",
        "(",
        "arg",
        ")(",
        "f2",
        "(",
        "func",
        "))"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 5162,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-21:nth-of-type(6)",
      "html": "When one or more <a class=\"reference internal\" href=\"../glossary.html#term-parameter\"><em class=\"xref std std-term\">parameters</em></a> have the form <em>parameter</em> <tt class=\"docutils literal\"><span class=\"pre\">=</span></tt>\n<em>expression</em>, the function is said to have “default parameter values.”  For a\nparameter with a default value, the corresponding <a class=\"reference internal\" href=\"../glossary.html#term-argument\"><em class=\"xref std std-term\">argument</em></a> may be\nomitted from a call, in which\ncase the parameter’s default value is substituted.  If a parameter has a default\nvalue, all following parameters up until the “<tt class=\"docutils literal\"><span class=\"pre\">*</span></tt>” must also have a default\nvalue — this is a syntactic restriction that is not expressed by the grammar.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p#index-21:nth-of-type(6)",
      "text": [
        "When one or more ",
        "parameters",
        " have the form ",
        "parameter",
        "=",
        "expression",
        ", the function is said to have “default parameter values.”  For a\nparameter with a default value, the corresponding ",
        "argument",
        " may be\nomitted from a call, in which\ncase the parameter’s default value is substituted.  If a parameter has a default\nvalue, all following parameters up until the “",
        "*",
        "” must also have a default\nvalue — this is a syntactic restriction that is not expressed by the grammar."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 5244,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "<strong>Default parameter values are evaluated when the function definition is\nexecuted.</strong> This means that the expression is evaluated once, when the function\nis defined, and that the same “pre-computed” value is used for each call.  This\nis especially important to understand when a default parameter is a mutable\nobject, such as a list or a dictionary: if the function modifies the object\n(e.g. by appending an item to a list), the default value is in effect modified.\nThis is generally not what was intended.  A way around this is to use <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>\nas the default, and explicitly test for it in the body of the function, e.g.:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p:nth-of-type(7)",
      "text": [
        "Default parameter values are evaluated when the function definition is\nexecuted.",
        " This means that the expression is evaluated once, when the function\nis defined, and that the same “pre-computed” value is used for each call.  This\nis especially important to understand when a default parameter is a mutable\nobject, such as a list or a dictionary: if the function modifies the object\n(e.g. by appending an item to a list), the default value is in effect modified.\nThis is generally not what was intended.  A way around this is to use ",
        "None",
        "\nas the default, and explicitly test for it in the body of the function, e.g.:"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 265,
        "top": 5348,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">whats_on_the_telly</span><span class=\"p\">(</span><span class=\"n\">penguin</span><span class=\"o\">=</span><span class=\"k\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">penguin</span> <span class=\"ow\">is</span> <span class=\"k\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">penguin</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">penguin</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">\"property of the zoo\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">penguin</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "whats_on_the_telly",
        "(",
        "penguin",
        "=",
        "None",
        "):",
        "if",
        "penguin",
        "is",
        "None",
        ":",
        "penguin",
        "=",
        "[]",
        "penguin",
        ".",
        "append",
        "(",
        "\"property of the zoo\"",
        ")",
        "return",
        "penguin"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 5466,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-22:nth-of-type(8)",
      "html": "Function call semantics are described in more detail in section <a class=\"reference internal\" href=\"expressions.html#calls\"><em>Calls</em></a>. A\nfunction call always assigns values to all parameters mentioned in the parameter\nlist, either from position arguments, from keyword arguments, or from default\nvalues.  If the form “<tt class=\"docutils literal\"><span class=\"pre\">*identifier</span></tt>” is present, it is initialized to a tuple\nreceiving any excess positional parameters, defaulting to the empty tuple.  If\nthe form “<tt class=\"docutils literal\"><span class=\"pre\">**identifier</span></tt>” is present, it is initialized to a new dictionary\nreceiving any excess keyword arguments, defaulting to a new empty dictionary.\nParameters after “<tt class=\"docutils literal\"><span class=\"pre\">*</span></tt>” or “<tt class=\"docutils literal\"><span class=\"pre\">*identifier</span></tt>” are keyword-only parameters and\nmay only be passed used keyword arguments.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p#index-22:nth-of-type(8)",
      "text": [
        "Function call semantics are described in more detail in section ",
        "Calls",
        ". A\nfunction call always assigns values to all parameters mentioned in the parameter\nlist, either from position arguments, from keyword arguments, or from default\nvalues.  If the form “",
        "*identifier",
        "” is present, it is initialized to a tuple\nreceiving any excess positional parameters, defaulting to the empty tuple.  If\nthe form “",
        "**identifier",
        "” is present, it is initialized to a new dictionary\nreceiving any excess keyword arguments, defaulting to a new empty dictionary.\nParameters after “",
        "*",
        "” or “",
        "*identifier",
        "” are keyword-only parameters and\nmay only be passed used keyword arguments."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 5570,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-23:nth-of-type(9)",
      "html": "Parameters may have annotations of the form “<tt class=\"docutils literal\"><span class=\"pre\">:</span> <span class=\"pre\">expression</span></tt>” following the\nparameter name.  Any parameter may have an annotation even those of the form\n<tt class=\"docutils literal\"><span class=\"pre\">*identifier</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">**identifier</span></tt>.  Functions may have “return” annotation of\nthe form “<tt class=\"docutils literal\"><span class=\"pre\">-&gt;</span> <span class=\"pre\">expression</span></tt>” after the parameter list.  These annotations can be\nany valid Python expression and are evaluated when the function definition is\nexecuted.  Annotations may be evaluated in a different order than they appear in\nthe source code.  The presence of annotations does not change the semantics of a\nfunction.  The annotation values are available as values of a dictionary keyed\nby the parameters’ names in the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__annotations__</span></tt> attribute of the\nfunction object.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p#index-23:nth-of-type(9)",
      "text": [
        "Parameters may have annotations of the form “",
        ":",
        "expression",
        "” following the\nparameter name.  Any parameter may have an annotation even those of the form\n",
        "*identifier",
        " or ",
        "**identifier",
        ".  Functions may have “return” annotation of\nthe form “",
        "->",
        "expression",
        "” after the parameter list.  These annotations can be\nany valid Python expression and are evaluated when the function definition is\nexecuted.  Annotations may be evaluated in a different order than they appear in\nthe source code.  The presence of annotations does not change the semantics of a\nfunction.  The annotation values are available as values of a dictionary keyed\nby the parameters’ names in the ",
        "__annotations__",
        " attribute of the\nfunction object."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 5674,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-24:nth-of-type(10)",
      "html": "It is also possible to create anonymous functions (functions not bound to a\nname), for immediate use in expressions.  This uses lambda forms, described in\nsection <a class=\"reference internal\" href=\"expressions.html#lambda\"><em>Lambdas</em></a>.  Note that the lambda form is merely a shorthand for a\nsimplified function definition; a function defined in a “<a class=\"reference internal\" href=\"#def\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">def</span></tt></a>”\nstatement can be passed around or assigned to another name just like a function\ndefined by a lambda form.  The “<a class=\"reference internal\" href=\"#def\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">def</span></tt></a>” form is actually more powerful\nsince it allows the execution of multiple statements and annotations.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p#index-24:nth-of-type(10)",
      "text": [
        "It is also possible to create anonymous functions (functions not bound to a\nname), for immediate use in expressions.  This uses lambda forms, described in\nsection ",
        "Lambdas",
        ".  Note that the lambda form is merely a shorthand for a\nsimplified function definition; a function defined in a “",
        "def",
        "”\nstatement can be passed around or assigned to another name just like a function\ndefined by a lambda form.  The “",
        "def",
        "” form is actually more powerful\nsince it allows the execution of multiple statements and annotations."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 5756,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "<strong>Programmer’s note:</strong> Functions are first-class objects.  A “<tt class=\"docutils literal\"><span class=\"pre\">def</span></tt>” form\nexecuted inside a function definition defines a local function that can be\nreturned or passed around.  Free variables used in the nested function can\naccess the local variables of the function containing the def.  See section\n<a class=\"reference internal\" href=\"executionmodel.html#naming\"><em>Naming and binding</em></a> for details.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > p:nth-of-type(11)",
      "text": [
        "Programmer’s note:",
        " Functions are first-class objects.  A “",
        "def",
        "” form\nexecuted inside a function definition defines a local function that can be\nreturned or passed around.  Free variables used in the nested function can\naccess the local variables of the function containing the def.  See section\n",
        "Naming and binding",
        " for details."
      ]
    },
    {
      "bound": {
        "height": 106,
        "left": 265,
        "top": 5816,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(4)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><span class=\"target\" id=\"index-25\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3107\"><strong>PEP 3107</strong></a> - Function Annotations</dt>\n<dd>The original specification for function annotations.</dd>\n</dl>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > div.admonition.admonition-see-also.seealso:nth-of-type(4)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 5862,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "<span class=\"target\" id=\"index-25\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3107\"><strong>PEP 3107</strong></a> - Function Annotations",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > div.admonition.admonition-see-also.seealso:nth-of-type(4) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "PEP 3107",
        " - Function Annotations"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 5884,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(1)",
      "html": "The original specification for function annotations.",
      "path": "div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#function-definitions.section:nth-of-type(8) > div.admonition.admonition-see-also.seealso:nth-of-type(4) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(1)",
      "text": [
        "The original specification for function annotations."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 5932,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "8.7. Class definitions<a class=\"headerlink\" href=\"#class-definitions\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > h2:nth-of-type(1)",
      "text": [
        "8.7. Class definitions",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5994,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-26:nth-of-type(1)",
      "html": "A class definition defines a class object (see section <a class=\"reference internal\" href=\"datamodel.html#types\"><em>The standard type hierarchy</em></a>):",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p#index-26:nth-of-type(1)",
      "text": [
        "A class definition defines a class object (see section ",
        "The standard type hierarchy",
        "):"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 6032,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-classdef\">classdef   </strong> ::=  [<a class=\"reference internal\" href=\"#grammar-token-decorators\"><tt class=\"xref docutils literal\"><span class=\"pre\">decorators</span></tt></a>] \"class\" <a class=\"reference internal\" href=\"#grammar-token-classname\"><tt class=\"xref docutils literal\"><span class=\"pre\">classname</span></tt></a> [<a class=\"reference internal\" href=\"#grammar-token-inheritance\"><tt class=\"xref docutils literal\"><span class=\"pre\">inheritance</span></tt></a>] \":\" <a class=\"reference internal\" href=\"#grammar-token-suite\"><tt class=\"xref docutils literal\"><span class=\"pre\">suite</span></tt></a>\n<strong id=\"grammar-token-inheritance\">inheritance</strong> ::=  \"(\" [<a class=\"reference internal\" href=\"#grammar-token-parameter_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">parameter_list</span></tt></a>] \")\"\n<strong id=\"grammar-token-classname\">classname  </strong> ::=  <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > pre:nth-of-type(1)",
      "text": [
        "classdef   ",
        " ::=  [",
        "decorators",
        "] \"class\" ",
        "classname",
        " [",
        "inheritance",
        "] \":\" ",
        "suite",
        "inheritance",
        " ::=  \"(\" [",
        "parameter_list",
        "] \")\"\n",
        "classname  ",
        " ::=  ",
        "identifier"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 6114,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A class definition is an executable statement.  The inheritance list usually\ngives a list of base classes (see <a class=\"reference internal\" href=\"datamodel.html#metaclasses\"><em>Customizing class creation</em></a> for more advanced uses), so\neach item in the list should evaluate to a class object which allows\nsubclassing.  Classes without an inheritance list inherit, by default, from the\nbase class <a class=\"reference internal\" href=\"../library/functions.html#object\" title=\"object\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></tt></a>; hence,",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(2)",
      "text": [
        "A class definition is an executable statement.  The inheritance list usually\ngives a list of base classes (see ",
        "Customizing class creation",
        " for more advanced uses), so\neach item in the list should evaluate to a class object which allows\nsubclassing.  Classes without an inheritance list inherit, by default, from the\nbase class ",
        "object",
        "; hence,"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 6174,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "Foo",
        ":",
        "pass"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6238,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "is equivalent to",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(3)",
      "text": [
        "is equivalent to"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 6276,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "Foo",
        "(",
        "object",
        "):",
        "pass"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 6340,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The class’s suite is then executed in a new execution frame (see <a class=\"reference internal\" href=\"executionmodel.html#naming\"><em>Naming and binding</em></a>),\nusing a newly created local namespace and the original global namespace.\n(Usually, the suite contains mostly function definitions.)  When the class’s\nsuite finishes execution, its execution frame is discarded but its local\nnamespace is saved. <a class=\"footnote-reference\" href=\"#id8\" id=\"id4\">[4]</a> A class object is then created using the inheritance\nlist for the base classes and the saved local namespace for the attribute\ndictionary.  The class name is bound to this class object in the original local\nnamespace.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(4)",
      "text": [
        "The class’s suite is then executed in a new execution frame (see ",
        "Naming and binding",
        "),\nusing a newly created local namespace and the original global namespace.\n(Usually, the suite contains mostly function definitions.)  When the class’s\nsuite finishes execution, its execution frame is discarded but its local\nnamespace is saved. ",
        "[4]",
        " A class object is then created using the inheritance\nlist for the base classes and the saved local namespace for the attribute\ndictionary.  The class name is bound to this class object in the original local\nnamespace."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6444,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Class creation can be customized heavily using <a class=\"reference internal\" href=\"datamodel.html#metaclasses\"><em>metaclasses</em></a>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(5)",
      "text": [
        "Class creation can be customized heavily using ",
        "metaclasses",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6482,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Classes can also be decorated: just like when decorating functions,",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(6)",
      "text": [
        "Classes can also be decorated: just like when decorating functions,"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 6520,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"nd\">@f1</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n<span class=\"nd\">@f2</span>\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span> <span class=\"k\">pass</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "@f1",
        "(",
        "arg",
        ")",
        "@f2",
        "class",
        "Foo",
        ":",
        "pass"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6602,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "is equivalent to",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(7)",
      "text": [
        "is equivalent to"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 6640,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span> <span class=\"k\">pass</span>\n<span class=\"n\">Foo</span> <span class=\"o\">=</span> <span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)(</span><span class=\"n\">f2</span><span class=\"p\">(</span><span class=\"n\">Foo</span><span class=\"p\">))</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "Foo",
        ":",
        "pass",
        "Foo",
        "=",
        "f1",
        "(",
        "arg",
        ")(",
        "f2",
        "(",
        "Foo",
        "))"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6704,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "The evaluation rules for the decorator expressions are the same as for function\ndecorators.  The result must be a class object, which is then bound to the class\nname.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(8)",
      "text": [
        "The evaluation rules for the decorator expressions are the same as for function\ndecorators.  The result must be a class object, which is then bound to the class\nname."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 6742,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "<strong>Programmer’s note:</strong> Variables defined in the class definition are class\nattributes; they are shared by instances.  Instance attributes can be set in a\nmethod with <tt class=\"docutils literal\"><span class=\"pre\">self.name</span> <span class=\"pre\">=</span> <span class=\"pre\">value</span></tt>.  Both class and instance attributes are\naccessible through the notation “<tt class=\"docutils literal\"><span class=\"pre\">self.name</span></tt>”, and an instance attribute hides\na class attribute with the same name when accessed in this way.  Class\nattributes can be used as defaults for instance attributes, but using mutable\nvalues there can lead to unexpected results.  <a class=\"reference internal\" href=\"datamodel.html#descriptors\"><em>Descriptors</em></a>\ncan be used to create instance variables with different implementation details.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p:nth-of-type(9)",
      "text": [
        "Programmer’s note:",
        " Variables defined in the class definition are class\nattributes; they are shared by instances.  Instance attributes can be set in a\nmethod with ",
        "self.name",
        "=",
        "value",
        ".  Both class and instance attributes are\naccessible through the notation “",
        "self.name",
        "”, and an instance attribute hides\na class attribute with the same name when accessed in this way.  Class\nattributes can be used as defaults for instance attributes, but using mutable\nvalues there can lead to unexpected results.  ",
        "Descriptors",
        "\ncan be used to create instance variables with different implementation details."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 265,
        "top": 6846,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(5)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><span class=\"target\" id=\"index-27\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3115\"><strong>PEP 3115</strong></a> - Metaclasses in Python 3\n<span class=\"target\" id=\"index-28\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3129\"><strong>PEP 3129</strong></a> - Class Decorators</p>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > div.admonition.admonition-see-also.seealso:nth-of-type(5)",
      "text": [
        "See also",
        "PEP 3115",
        " - Metaclasses in Python 3\n",
        "PEP 3129",
        " - Class Decorators"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6914,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "30px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.rubric:nth-of-type(10)",
      "html": "Footnotes",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > p.rubric:nth-of-type(10)",
      "text": [
        "Footnotes"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 6952,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id1\">[1]</a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id5.docutils.footnote:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[1]"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 300,
        "top": 6952,
        "width": 1284
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "The exception is propagated to the invocation stack unless\nthere is a <a class=\"reference internal\" href=\"#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause which happens to raise another\nexception. That new exception causes the old one to be lost.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id5.docutils.footnote:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "The exception is propagated to the invocation stack unless\nthere is a ",
        "finally",
        " clause which happens to raise another\nexception. That new exception causes the old one to be lost."
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 7009,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id2\">[2]</a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id6.docutils.footnote:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[2]"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 300,
        "top": 7009,
        "width": 985
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Currently, control “flows off the end” except in the case of an exception\nor the execution of a <a class=\"reference internal\" href=\"simple_stmts.html#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a>, <a class=\"reference internal\" href=\"simple_stmts.html#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a>, or\n<a class=\"reference internal\" href=\"simple_stmts.html#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id6.docutils.footnote:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "Currently, control “flows off the end” except in the case of an exception\nor the execution of a ",
        "return",
        ", ",
        "continue",
        ", or\n",
        "break",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 7047,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id3\">[3]</a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id7.docutils.footnote:nth-of-type(3) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[3]"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 300,
        "top": 7047,
        "width": 1208
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "A string literal appearing as the first statement in the function body is\ntransformed into the function’s <tt class=\"docutils literal\"><span class=\"pre\">__doc__</span></tt> attribute and therefore the\nfunction’s <a class=\"reference internal\" href=\"../glossary.html#term-docstring\"><em class=\"xref std std-term\">docstring</em></a>.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id7.docutils.footnote:nth-of-type(3) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "A string literal appearing as the first statement in the function body is\ntransformed into the function’s ",
        "__doc__",
        " attribute and therefore the\nfunction’s ",
        "docstring",
        "."
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 7085,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id4\">[4]</a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id8.docutils.footnote:nth-of-type(4) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[4]"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 300,
        "top": 7085,
        "width": 1151
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "A string literal appearing as the first statement in the class body is\ntransformed into the namespace’s <tt class=\"docutils literal\"><span class=\"pre\">__doc__</span></tt> item and therefore the class’s\n<a class=\"reference internal\" href=\"../glossary.html#term-docstring\"><em class=\"xref std std-term\">docstring</em></a>.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#compound-statements.section:nth-of-type(1) > div#class-definitions.section:nth-of-type(9) > table#id8.docutils.footnote:nth-of-type(4) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "A string literal appearing as the first statement in the class body is\ntransformed into the namespace’s ",
        "__doc__",
        " item and therefore the class’s\n",
        "docstring",
        "."
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 82,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "<a href=\"../contents.html\">Table Of Contents</a>",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Table Of Contents"
      ]
    },
    {
      "bound": {
        "height": 158,
        "left": 36,
        "top": 108,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#\">8. Compound statements</a><ul>\n<li><a class=\"reference internal\" href=\"#the-if-statement\">8.1. The <tt class=\"docutils literal\"><span class=\"pre\">if</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-while-statement\">8.2. The <tt class=\"docutils literal\"><span class=\"pre\">while</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-for-statement\">8.3. The <tt class=\"docutils literal\"><span class=\"pre\">for</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-try-statement\">8.4. The <tt class=\"docutils literal\"><span class=\"pre\">try</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-with-statement\">8.5. The <tt class=\"docutils literal\"><span class=\"pre\">with</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#function-definitions\">8.6. Function definitions</a></li>\n<li><a class=\"reference internal\" href=\"#class-definitions\">8.7. Class definitions</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "8. Compound statements"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 124,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#the-if-statement\">8.1. The <tt class=\"docutils literal\"><span class=\"pre\">if</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "8.1. The ",
        "if",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 145,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#the-while-statement\">8.2. The <tt class=\"docutils literal\"><span class=\"pre\">while</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "8.2. The ",
        "while",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 166,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#the-for-statement\">8.3. The <tt class=\"docutils literal\"><span class=\"pre\">for</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "8.3. The ",
        "for",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 187,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#the-try-statement\">8.4. The <tt class=\"docutils literal\"><span class=\"pre\">try</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "8.4. The ",
        "try",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 208,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#the-with-statement\">8.5. The <tt class=\"docutils literal\"><span class=\"pre\">with</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "8.5. The ",
        "with",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 229,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(6)",
      "html": "<a class=\"reference internal\" href=\"#function-definitions\">8.6. Function definitions</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6)",
      "text": [
        "8.6. Function definitions"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 250,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(7)",
      "html": "<a class=\"reference internal\" href=\"#class-definitions\">8.7. Class definitions</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(7)",
      "text": [
        "8.7. Class definitions"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 292,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(1)",
      "html": "Previous topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(1)",
      "text": [
        "Previous topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 313,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(1)",
      "html": "<a href=\"simple_stmts.html\" title=\"previous chapter\">7. Simple statements</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(1)",
      "text": [
        "7. Simple statements"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 355,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(2)",
      "html": "Next topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(2)",
      "text": [
        "Next topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 376,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(2)",
      "html": "<a href=\"toplevel_components.html\" title=\"next chapter\">9. Top-level components</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(2)",
      "text": [
        "9. Top-level components"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 420,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(2)",
      "html": "This Page",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(2)",
      "text": [
        "This Page"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 446,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a href=\"../bugs.html\">Report a Bug</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "Report a Bug"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 462,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a href=\"../_sources/reference/compound_stmts.txt\" rel=\"nofollow\">Show Source</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "Show Source"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 506,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "Quick search",
      "path": "div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Quick search"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 26,
        "top": 569,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "12px",
        "line-height": "16px",
        "margin-bottom": "12px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "12px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.searchtip:nth-of-type(1)",
      "html": "\n    Enter search terms or a module, class or function name.\n    ",
      "path": "div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > p.searchtip:nth-of-type(1)",
      "text": [
        "\n    Enter search terms or a module, class or function name.\n    "
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 235,
        "top": 1990,
        "width": 9
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "cursor": "pointer",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "position": "fixed"
      },
      "element": "span:nth-of-type(1)",
      "html": "«",
      "path": "div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div#sidebarbutton:nth-of-type(2) > span:nth-of-type(1)",
      "text": [
        "«"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 7138,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 7138,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 7138,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"toplevel_components.html\" title=\"9. Top-level components\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 7138,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"simple_stmts.html\" title=\"7. Simple statements\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 7138,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"toplevel_components.html\" title=\"9. Top-level components\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"simple_stmts.html\" title=\"7. Simple statements\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Language Reference</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Language Reference",
        " »"
      ]
    },
    {
      "bound": {
        "height": 90,
        "left": 16,
        "top": 7168,
        "width": 1558
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(85, 85, 85)",
        "border-left-color": "rgb(85, 85, 85)",
        "border-right-color": "rgb(85, 85, 85)",
        "border-top-color": "rgb(85, 85, 85)",
        "color": "rgb(85, 85, 85)",
        "font-size": "12px",
        "line-height": "18px",
        "margin-left": "0px",
        "margin-right": "10px",
        "margin-top": "-24px",
        "outline-color": "rgb(85, 85, 85)",
        "padding-bottom": "9px",
        "padding-top": "9px",
        "text-align": "right"
      },
      "element": "div.footer:nth-of-type(4)",
      "html": "\n    © <a href=\"../copyright.html\">Copyright</a> 1990-2013, Python Software Foundation.\n    <br>\n    The Python Software Foundation is a non-profit corporation.\n    <a href=\"http://www.python.org/psf/donations/\">Please donate.</a>\n    <br>\n    Last updated on Aug 14, 2013.\n    <a href=\"../bugs.html\">Found a bug</a>?\n    <br>\n    Created using <a href=\"http://sphinx.pocoo.org/\">Sphinx</a> 1.0.7.\n    ",
      "path": "div",
      "selector": "div.footer:nth-of-type(4)",
      "text": [
        "\n    © ",
        "Copyright",
        " 1990-2013, Python Software Foundation.\n    ",
        "\n    The Python Software Foundation is a non-profit corporation.\n    ",
        "Please donate.",
        "\n    Last updated on Aug 14, 2013.\n    ",
        "Found a bug",
        "?\n    ",
        "\n    Created using ",
        "Sphinx",
        " 1.0.7.\n    "
      ]
    }
  ],
  "images": [
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 21,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 7145,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    }
  ]
}
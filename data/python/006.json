{
  "body": {
    "bound": {
      "height": 10215,
      "left": 16,
      "top": 7,
      "width": 1568
    },
    "computed": {
      "alignment-baseline": "auto",
      "background-attachment": "scroll",
      "background-clip": "border-box",
      "background-color": "rgb(255, 255, 255)",
      "background-image": "none",
      "background-origin": "padding-box",
      "background-position": "0% 0%",
      "background-repeat": "repeat",
      "background-size": "auto auto",
      "baseline-shift": "baseline",
      "border-bottom-color": "rgb(0, 0, 0)",
      "border-bottom-left-radius": "0px",
      "border-bottom-right-radius": "0px",
      "border-bottom-style": "none",
      "border-bottom-width": "0px",
      "border-collapse": "separate",
      "border-left-color": "rgb(0, 0, 0)",
      "border-left-style": "none",
      "border-left-width": "0px",
      "border-right-color": "rgb(0, 0, 0)",
      "border-right-style": "none",
      "border-right-width": "0px",
      "border-top-color": "rgb(0, 0, 0)",
      "border-top-left-radius": "0px",
      "border-top-right-radius": "0px",
      "border-top-style": "none",
      "border-top-width": "0px",
      "bottom": "auto",
      "box-shadow": "none",
      "box-sizing": "content-box",
      "caption-side": "top",
      "clear": "none",
      "clip": "auto",
      "clip-path": "none",
      "clip-rule": "nonzero",
      "color": "rgb(0, 0, 0)",
      "color-interpolation": "srgb",
      "color-interpolation-filters": "linearrgb",
      "color-rendering": "auto",
      "cursor": "auto",
      "direction": "ltr",
      "display": "block",
      "dominant-baseline": "auto",
      "empty-cells": "show",
      "fill": "#000000",
      "fill-opacity": "1",
      "fill-rule": "nonzero",
      "filter": "none",
      "float": "none",
      "flood-color": "rgb(0, 0, 0)",
      "flood-opacity": "1",
      "font-family": "'Lucida Grande', Arial, sans-serif",
      "font-size": "16px",
      "font-style": "normal",
      "font-variant": "normal",
      "font-weight": "normal",
      "glyph-orientation-horizontal": "0deg",
      "glyph-orientation-vertical": "auto",
      "height": "10215px",
      "image-rendering": "auto",
      "kerning": "0",
      "left": "auto",
      "letter-spacing": "normal",
      "lighting-color": "rgb(255, 255, 255)",
      "line-height": "normal",
      "list-style-image": "none",
      "list-style-position": "outside",
      "list-style-type": "disc",
      "margin-bottom": "0px",
      "margin-left": "16px",
      "margin-right": "16px",
      "margin-top": "0px",
      "marker-end": "none",
      "marker-mid": "none",
      "marker-start": "none",
      "mask": "none",
      "max-height": "none",
      "max-width": "none",
      "min-height": "0px",
      "min-width": "0px",
      "opacity": "1",
      "orphans": "2",
      "outline-color": "rgb(0, 0, 0)",
      "outline-style": "none",
      "outline-width": "0px",
      "overflow-x": "visible",
      "overflow-y": "visible",
      "padding-bottom": "0px",
      "padding-left": "0px",
      "padding-right": "0px",
      "padding-top": "0px",
      "page-break-after": "auto",
      "page-break-before": "auto",
      "page-break-inside": "auto",
      "pointer-events": "auto",
      "position": "static",
      "resize": "none",
      "right": "auto",
      "shape-rendering": "auto",
      "speak": "normal",
      "stop-color": "rgb(0, 0, 0)",
      "stop-opacity": "1",
      "stroke": "none",
      "stroke-dasharray": "none",
      "stroke-dashoffset": "0",
      "stroke-linecap": "butt",
      "stroke-linejoin": "miter",
      "stroke-miterlimit": "4",
      "stroke-opacity": "1",
      "stroke-width": "1",
      "table-layout": "auto",
      "text-align": "-webkit-auto",
      "text-anchor": "start",
      "text-decoration": "none",
      "text-indent": "0px",
      "text-overflow": "clip",
      "text-rendering": "auto",
      "text-shadow": "none",
      "text-transform": "none",
      "top": "auto",
      "unicode-bidi": "normal",
      "vector-effect": "none",
      "vertical-align": "baseline",
      "visibility": "visible",
      "white-space": "normal",
      "widows": "2",
      "width": "1568px",
      "word-break": "normal",
      "word-spacing": "0px",
      "word-wrap": "normal",
      "writing-mode": "lr-tb",
      "z-index": "auto",
      "zoom": "1"
    },
    "scroll": {
      "left": 0,
      "top": 0
    }
  },
  "descriptions": [],
  "titles": [
    "7. Simple statements — Python v3.3.2 documentation"
  ],
  "url": "http://docs.python.org/3.3/reference/simple_stmts.html",
  "links": [
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/reference/compound_stmts.html",
    "http://docs.python.org/3.3/reference/expressions.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/reference/index.html",
    "http://docs.python.org/3.3/reference/simple_stmts.html#simple-statements",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-expression_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-assert_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-assignment_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-augmented_assignment_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-pass_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-del_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-return_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-yield_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-raise_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-break_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-continue_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-import_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-global_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-nonlocal_stmt",
    "http://docs.python.org/3.3/reference/simple_stmts.html#expression-statements",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression_list",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/reference/simple_stmts.html#assignment-statements",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target_list",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression_list",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-yield_expression",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target_list",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target_list",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-attributeref",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-subscription",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-slicing",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target",
    "http://docs.python.org/3.3/reference/expressions.html#primaries",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#nonlocal",
    "http://docs.python.org/3.3/reference/simple_stmts.html#nonlocal",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/exceptions.html#AttributeError",
    "http://docs.python.org/3.3/library/functions.html#property",
    "http://docs.python.org/3.3/library/exceptions.html#IndexError",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__setitem__",
    "http://www.python.org/dev/peps/pep-3132",
    "http://docs.python.org/3.3/reference/simple_stmts.html#augmented-assignment-statements",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-augtarget",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-augop",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression_list",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-yield_expression",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-attributeref",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-subscription",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-slicing",
    "http://docs.python.org/3.3/reference/expressions.html#primaries",
    "http://docs.python.org/3.3/reference/simple_stmts.html#attr-target-note",
    "http://docs.python.org/3.3/reference/simple_stmts.html#assert",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-assert-statement",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/library/constants.html#__debug__",
    "http://docs.python.org/3.3/library/exceptions.html#AssertionError",
    "http://docs.python.org/3.3/library/constants.html#__debug__",
    "http://docs.python.org/3.3/library/constants.html#__debug__",
    "http://docs.python.org/3.3/reference/simple_stmts.html#pass",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-pass-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#pass",
    "http://docs.python.org/3.3/reference/simple_stmts.html#del",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-del-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-target_list",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/library/exceptions.html#NameError",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-return-statement",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression_list",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#return",
    "http://docs.python.org/3.3/library/exceptions.html#StopIteration",
    "http://docs.python.org/3.3/library/exceptions.html#StopIteration",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-yield-statement",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-yield_expression",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/library/functions.html#next",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression_list",
    "http://docs.python.org/3.3/library/functions.html#next",
    "http://docs.python.org/3.3/library/functions.html#next",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://docs.python.org/3.3/reference/expressions.html#yieldexpr",
    "http://www.python.org/dev/peps/pep-0255",
    "http://docs.python.org/3.3/reference/simple_stmts.html#yield",
    "http://www.python.org/dev/peps/pep-0342",
    "http://www.python.org/dev/peps/pep-0380",
    "http://docs.python.org/3.3/reference/simple_stmts.html#raise",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-raise-statement",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/expressions.html#grammar-token-expression",
    "http://docs.python.org/3.3/reference/simple_stmts.html#raise",
    "http://docs.python.org/3.3/library/exceptions.html#RuntimeError",
    "http://docs.python.org/3.3/reference/simple_stmts.html#raise",
    "http://docs.python.org/3.3/library/exceptions.html#BaseException",
    "http://docs.python.org/3.3/reference/executionmodel.html#exceptions",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-break-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/compound_stmts.html#while",
    "http://docs.python.org/3.3/reference/compound_stmts.html#else",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/simple_stmts.html#break",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-continue-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/compound_stmts.html#while",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#continue",
    "http://docs.python.org/3.3/reference/compound_stmts.html#try",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/compound_stmts.html#finally",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-import-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-module",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-name",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-module",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-name",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-relative_module",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-name",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-name",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-relative_module",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-name",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-name",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-module",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#grammar-token-module",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#from",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/reference/import.html#importsystem",
    "http://docs.python.org/3.3/reference/compound_stmts.html#as",
    "http://docs.python.org/3.3/reference/compound_stmts.html#as",
    "http://docs.python.org/3.3/reference/simple_stmts.html#from",
    "http://docs.python.org/3.3/reference/simple_stmts.html#from",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/library/exceptions.html#ImportError",
    "http://docs.python.org/3.3/reference/compound_stmts.html#as",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/reference/simple_stmts.html#from",
    "http://docs.python.org/3.3/library/exceptions.html#SyntaxError",
    "http://docs.python.org/3.3/reference/simple_stmts.html#from",
    "http://www.python.org/dev/peps/pep-0328",
    "http://docs.python.org/3.3/library/importlib.html#importlib.import_module",
    "http://docs.python.org/3.3/reference/simple_stmts.html#future-statements",
    "http://docs.python.org/3.3/library/__future__.html#module-__future__",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#compile",
    "http://docs.python.org/3.3/library/functions.html#compile",
    "http://docs.python.org/3.3/using/cmdline.html#cmdoption-i",
    "http://www.python.org/dev/peps/pep-0236",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-global-statement",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/compound_stmts.html#class",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/library/functions.html#compile",
    "http://docs.python.org/3.3/reference/simple_stmts.html#nonlocal",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-nonlocal-statement",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#grammar-token-identifier",
    "http://docs.python.org/3.3/reference/simple_stmts.html#nonlocal",
    "http://docs.python.org/3.3/reference/simple_stmts.html#nonlocal",
    "http://docs.python.org/3.3/reference/simple_stmts.html#global",
    "http://docs.python.org/3.3/reference/simple_stmts.html#nonlocal",
    "http://www.python.org/dev/peps/pep-3104",
    "http://docs.python.org/3.3/reference/simple_stmts.html#nonlocal",
    "http://docs.python.org/3.3/contents.html",
    "http://docs.python.org/3.3/reference/simple_stmts.html#",
    "http://docs.python.org/3.3/reference/simple_stmts.html#expression-statements",
    "http://docs.python.org/3.3/reference/simple_stmts.html#assignment-statements",
    "http://docs.python.org/3.3/reference/simple_stmts.html#augmented-assignment-statements",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-assert-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-pass-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-del-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-return-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-yield-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-raise-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-break-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-continue-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-import-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#future-statements",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-global-statement",
    "http://docs.python.org/3.3/reference/simple_stmts.html#the-nonlocal-statement",
    "http://docs.python.org/3.3/reference/expressions.html",
    "http://docs.python.org/3.3/reference/compound_stmts.html",
    "http://docs.python.org/3.3/bugs.html",
    "http://docs.python.org/3.3/_sources/reference/simple_stmts.txt",
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/reference/compound_stmts.html",
    "http://docs.python.org/3.3/reference/expressions.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/reference/index.html",
    "http://docs.python.org/3.3/copyright.html",
    "http://www.python.org/psf/donations/",
    "http://docs.python.org/3.3/bugs.html",
    "http://sphinx.pocoo.org/"
  ],
  "texts": [
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 14,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 14,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 14,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"compound_stmts.html\" title=\"8. Compound statements\" accesskey=\"N\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 14,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"expressions.html\" title=\"6. Expressions\" accesskey=\"P\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 14,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"compound_stmts.html\" title=\"8. Compound statements\" accesskey=\"N\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"expressions.html\" title=\"6. Expressions\" accesskey=\"P\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\" accesskey=\"U\">The Python Language Reference</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Language Reference",
        " »"
      ]
    },
    {
      "bound": {
        "height": 56,
        "left": 265,
        "top": 69,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "32px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "9px",
        "padding-top": "9px"
      },
      "element": "h1:nth-of-type(1)",
      "html": "7. Simple statements<a class=\"headerlink\" href=\"#simple-statements\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > h1",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > h1:nth-of-type(1)",
      "text": [
        "7. Simple statements",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 141,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-0:nth-of-type(1)",
      "html": "Simple statements are comprised within a single logical line. Several simple\nstatements may occur on a single line separated by semicolons.  The syntax for\nsimple statements is:",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > p#index-0:nth-of-type(1)",
      "text": [
        "Simple statements are comprised within a single logical line. Several simple\nstatements may occur on a single line separated by semicolons.  The syntax for\nsimple statements is:"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 265,
        "top": 201,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-simple_stmt\">simple_stmt</strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-expression_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-assert_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">assert_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-assignment_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">assignment_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-augmented_assignment_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">augmented_assignment_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-pass_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">pass_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-del_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">del_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-return_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">return_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-yield_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">yield_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-raise_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">raise_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-break_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">break_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-continue_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">continue_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-import_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">import_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-global_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">global_stmt</span></tt></a>\n                 | <a class=\"reference internal\" href=\"#grammar-token-nonlocal_stmt\"><tt class=\"xref docutils literal\"><span class=\"pre\">nonlocal_stmt</span></tt></a>\n",
      "path": "div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "simple_stmt",
        " ::=  ",
        "expression_stmt",
        "\n                 | ",
        "assert_stmt",
        "\n                 | ",
        "assignment_stmt",
        "\n                 | ",
        "augmented_assignment_stmt",
        "\n                 | ",
        "pass_stmt",
        "\n                 | ",
        "del_stmt",
        "\n                 | ",
        "return_stmt",
        "\n                 | ",
        "yield_stmt",
        "\n                 | ",
        "raise_stmt",
        "\n                 | ",
        "break_stmt",
        "\n                 | ",
        "continue_stmt",
        "\n                 | ",
        "import_stmt",
        "\n                 | ",
        "global_stmt",
        "\n                 | ",
        "nonlocal_stmt"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 480,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.1. Expression statements<a class=\"headerlink\" href=\"#expression-statements\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#expression-statements.section:nth-of-type(1) > h2:nth-of-type(1)",
      "text": [
        "7.1. Expression statements",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 542,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-2:nth-of-type(1)",
      "html": "Expression statements are used (mostly interactively) to compute and write a\nvalue, or (usually) to call a procedure (a function that returns no meaningful\nresult; in Python, procedures return the value <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>).  Other uses of\nexpression statements are allowed and occasionally useful.  The syntax for an\nexpression statement is:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#expression-statements.section:nth-of-type(1) > p#index-2:nth-of-type(1)",
      "text": [
        "Expression statements are used (mostly interactively) to compute and write a\nvalue, or (usually) to call a procedure (a function that returns no meaningful\nresult; in Python, procedures return the value ",
        "None",
        ").  Other uses of\nexpression statements are allowed and occasionally useful.  The syntax for an\nexpression statement is:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 602,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-expression_stmt\">expression_stmt</strong> ::=  <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression_list</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#expression-statements.section:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "expression_stmt",
        " ::=  ",
        "expression_list"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 648,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "An expression statement evaluates the expression list (which may be a single\nexpression).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#expression-statements.section:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "An expression statement evaluates the expression list (which may be a single\nexpression)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 686,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-3:nth-of-type(3)",
      "html": "In interactive mode, if the value is not <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, it is converted to a string\nusing the built-in <a class=\"reference internal\" href=\"../library/functions.html#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a> function and the resulting string is written to\nstandard output on a line by itself (except if the result is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, so that\nprocedure calls do not cause any output.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#expression-statements.section:nth-of-type(1) > p#index-3:nth-of-type(3)",
      "text": [
        "In interactive mode, if the value is not ",
        "None",
        ", it is converted to a string\nusing the built-in ",
        "repr()",
        " function and the resulting string is written to\nstandard output on a line by itself (except if the result is ",
        "None",
        ", so that\nprocedure calls do not cause any output.)"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 746,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.2. Assignment statements<a class=\"headerlink\" href=\"#assignment-statements\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > h2:nth-of-type(1)",
      "text": [
        "7.2. Assignment statements",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 808,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-4:nth-of-type(1)",
      "html": "Assignment statements are used to (re)bind names to values and to modify\nattributes or items of mutable objects:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > p#index-4:nth-of-type(1)",
      "text": [
        "Assignment statements are used to (re)bind names to values and to modify\nattributes or items of mutable objects:"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 265,
        "top": 846,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-assignment_stmt\">assignment_stmt</strong> ::=  (<a class=\"reference internal\" href=\"#grammar-token-target_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">target_list</span></tt></a> \"=\")+ (<a class=\"reference internal\" href=\"expressions.html#grammar-token-expression_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression_list</span></tt></a> | <a class=\"reference internal\" href=\"expressions.html#grammar-token-yield_expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">yield_expression</span></tt></a>)\n<strong id=\"grammar-token-target_list\">target_list    </strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-target\"><tt class=\"xref docutils literal\"><span class=\"pre\">target</span></tt></a> (\",\" <a class=\"reference internal\" href=\"#grammar-token-target\"><tt class=\"xref docutils literal\"><span class=\"pre\">target</span></tt></a>)* [\",\"]\n<strong id=\"grammar-token-target\">target         </strong> ::=  <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>\n                     | \"(\" <a class=\"reference internal\" href=\"#grammar-token-target_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">target_list</span></tt></a> \")\"\n                     | \"[\" <a class=\"reference internal\" href=\"#grammar-token-target_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">target_list</span></tt></a> \"]\"\n                     | <a class=\"reference internal\" href=\"expressions.html#grammar-token-attributeref\"><tt class=\"xref docutils literal\"><span class=\"pre\">attributeref</span></tt></a>\n                     | <a class=\"reference internal\" href=\"expressions.html#grammar-token-subscription\"><tt class=\"xref docutils literal\"><span class=\"pre\">subscription</span></tt></a>\n                     | <a class=\"reference internal\" href=\"expressions.html#grammar-token-slicing\"><tt class=\"xref docutils literal\"><span class=\"pre\">slicing</span></tt></a>\n                     | \"*\" <a class=\"reference internal\" href=\"#grammar-token-target\"><tt class=\"xref docutils literal\"><span class=\"pre\">target</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > pre:nth-of-type(1)",
      "text": [
        "assignment_stmt",
        " ::=  (",
        "target_list",
        " \"=\")+ (",
        "expression_list",
        " | ",
        "yield_expression",
        ")\n",
        "target_list    ",
        " ::=  ",
        "target",
        " (\",\" ",
        "target",
        ")* [\",\"]\n",
        "target         ",
        " ::=  ",
        "identifier",
        "\n                     | \"(\" ",
        "target_list",
        " \")\"\n                     | \"[\" ",
        "target_list",
        " \"]\"\n                     | ",
        "attributeref",
        "\n                     | ",
        "subscription",
        "\n                     | ",
        "slicing",
        "\n                     | \"*\" ",
        "target"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1036,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "(See section <a class=\"reference internal\" href=\"expressions.html#primaries\"><em>Primaries</em></a> for the syntax definitions for the last three\nsymbols.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "(See section ",
        "Primaries",
        " for the syntax definitions for the last three\nsymbols.)"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1074,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "An assignment statement evaluates the expression list (remember that this can be\na single expression or a comma-separated list, the latter yielding a tuple) and\nassigns the single resulting object to each of the target lists, from left to\nright.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > p:nth-of-type(3)",
      "text": [
        "An assignment statement evaluates the expression list (remember that this can be\na single expression or a comma-separated list, the latter yielding a tuple) and\nassigns the single resulting object to each of the target lists, from left to\nright."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 1134,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-5:nth-of-type(4)",
      "html": "Assignment is defined recursively depending on the form of the target (list).\nWhen a target is part of a mutable object (an attribute reference, subscription\nor slicing), the mutable object must ultimately perform the assignment and\ndecide about its validity, and may raise an exception if the assignment is\nunacceptable.  The rules observed by various types and the exceptions raised are\ngiven with the definition of the object types (see section <a class=\"reference internal\" href=\"datamodel.html#types\"><em>The standard type hierarchy</em></a>).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > p#index-5:nth-of-type(4)",
      "text": [
        "Assignment is defined recursively depending on the form of the target (list).\nWhen a target is part of a mutable object (an attribute reference, subscription\nor slicing), the mutable object must ultimately perform the assignment and\ndecide about its validity, and may raise an exception if the assignment is\nunacceptable.  The rules observed by various types and the exceptions raised are\ngiven with the definition of the object types (see section ",
        "The standard type hierarchy",
        ")."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1216,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-6:nth-of-type(5)",
      "html": "Assignment of an object to a target list, optionally enclosed in parentheses or\nsquare brackets, is recursively defined as follows.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > p#index-6:nth-of-type(5)",
      "text": [
        "Assignment of an object to a target list, optionally enclosed in parentheses or\nsquare brackets, is recursively defined as follows."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 1254,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "If the target list is a single target: The object is assigned to that target.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "If the target list is a single target: The object is assigned to that target."
      ]
    },
    {
      "bound": {
        "height": 160,
        "left": 305,
        "top": 1274,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "If the target list is a comma-separated list of targets: The object must be an\niterable with the same number of items as there are targets in the target list,\nand the items are assigned, from left to right, to the corresponding targets.<ul>\n<li>If the target list contains one target prefixed with an asterisk, called a\n“starred” target: The object must be a sequence with at least as many items\nas there are targets in the target list, minus one.  The first items of the\nsequence are assigned, from left to right, to the targets before the starred\ntarget.  The final items of the sequence are assigned to the targets after\nthe starred target.  A list of the remaining items in the sequence is then\nassigned to the starred target (the list can be empty).</li>\n<li>Else: The object must be a sequence with the same number of items as there\nare targets in the target list, and the items are assigned, from left to\nright, to the corresponding targets.</li>\n</ul>\n",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "If the target list is a comma-separated list of targets: The object must be an\niterable with the same number of items as there are targets in the target list,\nand the items are assigned, from left to right, to the corresponding targets."
      ]
    },
    {
      "bound": {
        "height": 80,
        "left": 345,
        "top": 1314,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "If the target list contains one target prefixed with an asterisk, called a\n“starred” target: The object must be a sequence with at least as many items\nas there are targets in the target list, minus one.  The first items of the\nsequence are assigned, from left to right, to the targets before the starred\ntarget.  The final items of the sequence are assigned to the targets after\nthe starred target.  A list of the remaining items in the sequence is then\nassigned to the starred target (the list can be empty).",
      "path": "div > div > div > div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(2) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "If the target list contains one target prefixed with an asterisk, called a\n“starred” target: The object must be a sequence with at least as many items\nas there are targets in the target list, minus one.  The first items of the\nsequence are assigned, from left to right, to the targets before the starred\ntarget.  The final items of the sequence are assigned to the targets after\nthe starred target.  A list of the remaining items in the sequence is then\nassigned to the starred target (the list can be empty)."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 345,
        "top": 1394,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Else: The object must be a sequence with the same number of items as there\nare targets in the target list, and the items are assigned, from left to\nright, to the corresponding targets.",
      "path": "div > div > div > div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(2) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Else: The object must be a sequence with the same number of items as there\nare targets in the target list, and the items are assigned, from left to\nright, to the corresponding targets."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1450,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Assignment of an object to a single target is recursively defined as follows.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > p:nth-of-type(6)",
      "text": [
        "Assignment of an object to a single target is recursively defined as follows."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 1488,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If the target is an identifier (name):",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "If the target is an identifier (name):"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 1526,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "If the name does not occur in a <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> or <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a>\nstatement in the current code block: the name is bound to the object in the\ncurrent local namespace.",
      "path": "div > div > div > div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "If the name does not occur in a ",
        "global",
        " or ",
        "nonlocal",
        "\nstatement in the current code block: the name is bound to the object in the\ncurrent local namespace."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 1546,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Otherwise: the name is bound to the object in the global namespace or the\nouter namespace determined by <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a>, respectively.",
      "path": "div > div > div > div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Otherwise: the name is bound to the object in the global namespace or the\nouter namespace determined by ",
        "nonlocal",
        ", respectively."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 1582,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-7:nth-of-type(2)",
      "html": "The name is rebound if it was already bound.  This may cause the reference\ncount for the object previously bound to the name to reach zero, causing the\nobject to be deallocated and its destructor (if it has one) to be called.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li:nth-of-type(1) > p#index-7:nth-of-type(2)",
      "text": [
        "The name is rebound if it was already bound.  This may cause the reference\ncount for the object previously bound to the name to reach zero, causing the\nobject to be deallocated and its destructor (if it has one) to be called."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 1642,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If the target is a target list enclosed in parentheses or in square brackets:\nThe object must be an iterable with the same number of items as there are\ntargets in the target list, and its items are assigned, from left to right,\nto the corresponding targets.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "If the target is a target list enclosed in parentheses or in square brackets:\nThe object must be an iterable with the same number of items as there are\ntargets in the target list, and its items are assigned, from left to right,\nto the corresponding targets."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 305,
        "top": 1702,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If the target is an attribute reference: The primary expression in the\nreference is evaluated.  It should yield an object with assignable attributes;\nif this is not the case, <a class=\"reference internal\" href=\"../library/exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> is raised.  That object is then\nasked to assign the assigned object to the given attribute; if it cannot\nperform the assignment, it raises an exception (usually but not necessarily\n<a class=\"reference internal\" href=\"../library/exceptions.html#AttributeError\" title=\"AttributeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">AttributeError</span></tt></a>).",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-8:nth-of-type(3) > p.first:nth-of-type(1)",
      "text": [
        "If the target is an attribute reference: The primary expression in the\nreference is evaluated.  It should yield an object with assignable attributes;\nif this is not the case, ",
        "TypeError",
        " is raised.  That object is then\nasked to assign the assigned object to the given attribute; if it cannot\nperform the assignment, it raises an exception (usually but not necessarily\n",
        "AttributeError",
        ")."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 305,
        "top": 1784,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#attr-target-note:nth-of-type(2)",
      "html": "Note: If the object is a class instance and the attribute reference occurs on\nboth sides of the assignment operator, the RHS expression, <tt class=\"docutils literal\"><span class=\"pre\">a.x</span></tt> can access\neither an instance attribute or (if no instance attribute exists) a class\nattribute.  The LHS target <tt class=\"docutils literal\"><span class=\"pre\">a.x</span></tt> is always set as an instance attribute,\ncreating it if necessary.  Thus, the two occurrences of <tt class=\"docutils literal\"><span class=\"pre\">a.x</span></tt> do not\nnecessarily refer to the same attribute: if the RHS expression refers to a\nclass attribute, the LHS creates a new instance attribute as the target of the\nassignment:",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-8:nth-of-type(3) > p#attr-target-note:nth-of-type(2)",
      "text": [
        "Note: If the object is a class instance and the attribute reference occurs on\nboth sides of the assignment operator, the RHS expression, ",
        "a.x",
        " can access\neither an instance attribute or (if no instance attribute exists) a class\nattribute.  The LHS target ",
        "a.x",
        " is always set as an instance attribute,\ncreating it if necessary.  Thus, the two occurrences of ",
        "a.x",
        " do not\nnecessarily refer to the same attribute: if the RHS expression refers to a\nclass attribute, the LHS creates a new instance attribute as the target of the\nassignment:"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 305,
        "top": 1888,
        "width": 1279
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">class</span> <span class=\"nc\">Cls</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>             <span class=\"c\"># class variable</span>\n<span class=\"n\">inst</span> <span class=\"o\">=</span> <span class=\"n\">Cls</span><span class=\"p\">()</span>\n<span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>   <span class=\"c\"># writes inst.x as 4 leaving Cls.x as 3</span>\n",
      "path": "div > div > div > div > div > div > ul > li > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-8:nth-of-type(3) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "class",
        "Cls",
        ":",
        "x",
        "=",
        "3",
        "# class variable",
        "inst",
        "=",
        "Cls",
        "()",
        "inst",
        ".",
        "x",
        "=",
        "inst",
        ".",
        "x",
        "+",
        "1",
        "# writes inst.x as 4 leaving Cls.x as 3"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 1988,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "This description does not necessarily apply to descriptor attributes, such as\nproperties created with <a class=\"reference internal\" href=\"../library/functions.html#property\" title=\"property\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">property()</span></tt></a>.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-8:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "This description does not necessarily apply to descriptor attributes, such as\nproperties created with ",
        "property()",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 2026,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If the target is a subscription: The primary expression in the reference is\nevaluated.  It should yield either a mutable sequence object (such as a list)\nor a mapping object (such as a dictionary).  Next, the subscript expression is\nevaluated.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-9:nth-of-type(4) > p.first:nth-of-type(1)",
      "text": [
        "If the target is a subscription: The primary expression in the reference is\nevaluated.  It should yield either a mutable sequence object (such as a list)\nor a mapping object (such as a dictionary).  Next, the subscript expression is\nevaluated."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 305,
        "top": 2086,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-10:nth-of-type(2)",
      "html": "If the primary is a mutable sequence object (such as a list), the subscript\nmust yield an integer.  If it is negative, the sequence’s length is added to\nit.  The resulting value must be a nonnegative integer less than the\nsequence’s length, and the sequence is asked to assign the assigned object to\nits item with that index.  If the index is out of range, <a class=\"reference internal\" href=\"../library/exceptions.html#IndexError\" title=\"IndexError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">IndexError</span></tt></a> is\nraised (assignment to a subscripted sequence cannot add new items to a list).",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-9:nth-of-type(4) > p#index-10:nth-of-type(2)",
      "text": [
        "If the primary is a mutable sequence object (such as a list), the subscript\nmust yield an integer.  If it is negative, the sequence’s length is added to\nit.  The resulting value must be a nonnegative integer less than the\nsequence’s length, and the sequence is asked to assign the assigned object to\nits item with that index.  If the index is out of range, ",
        "IndexError",
        " is\nraised (assignment to a subscripted sequence cannot add new items to a list)."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 305,
        "top": 2168,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-11:nth-of-type(3)",
      "html": "If the primary is a mapping object (such as a dictionary), the subscript must\nhave a type compatible with the mapping’s key type, and the mapping is then\nasked to create a key/datum pair which maps the subscript to the assigned\nobject.  This can either replace an existing key/value pair with the same key\nvalue, or insert a new key/value pair (if no key with the same value existed).",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-9:nth-of-type(4) > p#index-11:nth-of-type(3)",
      "text": [
        "If the primary is a mapping object (such as a dictionary), the subscript must\nhave a type compatible with the mapping’s key type, and the mapping is then\nasked to create a key/datum pair which maps the subscript to the assigned\nobject.  This can either replace an existing key/value pair with the same key\nvalue, or insert a new key/value pair (if no key with the same value existed)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 2250,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "For user-defined objects, the <a class=\"reference internal\" href=\"datamodel.html#object.__setitem__\" title=\"object.__setitem__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__setitem__()</span></tt></a> method is called with\nappropriate arguments.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-9:nth-of-type(4) > p:nth-of-type(4)",
      "text": [
        "For user-defined objects, the ",
        "__setitem__()",
        " method is called with\nappropriate arguments."
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 305,
        "top": 2288,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If the target is a slicing: The primary expression in the reference is\nevaluated.  It should yield a mutable sequence object (such as a list).  The\nassigned object should be a sequence object of the same type.  Next, the lower\nand upper bound expressions are evaluated, insofar they are present; defaults\nare zero and the sequence’s length.  The bounds should evaluate to integers.\nIf either bound is negative, the sequence’s length is added to it.  The\nresulting bounds are clipped to lie between zero and the sequence’s length,\ninclusive.  Finally, the sequence object is asked to replace the slice with\nthe items of the assigned sequence.  The length of the slice may be different\nfrom the length of the assigned sequence, thus changing the length of the\ntarget sequence, if the object allows it.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > ul:nth-of-type(2) > li#index-12:nth-of-type(5) > p.first:nth-of-type(1)",
      "text": [
        "If the target is a slicing: The primary expression in the reference is\nevaluated.  It should yield a mutable sequence object (such as a list).  The\nassigned object should be a sequence object of the same type.  Next, the lower\nand upper bound expressions are evaluated, insofar they are present; defaults\nare zero and the sequence’s length.  The bounds should evaluate to integers.\nIf either bound is negative, the sequence’s length is added to it.  The\nresulting bounds are clipped to lie between zero and the sequence’s length,\ninclusive.  Finally, the sequence object is asked to replace the slice with\nthe items of the assigned sequence.  The length of the slice may be different\nfrom the length of the assigned sequence, thus changing the length of the\ntarget sequence, if the object allows it."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 273,
        "top": 2422,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<strong>CPython implementation detail:</strong> In the current implementation, the syntax for targets is taken to be the same\nas for expressions, and invalid syntax is rejected during the code generation\nphase, causing less detailed error messages.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div.compound.impl-detail:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "CPython implementation detail:",
        " In the current implementation, the syntax for targets is taken to be the same\nas for expressions, and invalid syntax is rejected during the code generation\nphase, causing less detailed error messages."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 2490,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "WARNING: Although the definition of assignment implies that overlaps between the\nleft-hand side and the right-hand side are ‘safe’ (for example <tt class=\"docutils literal\"><span class=\"pre\">a,</span> <span class=\"pre\">b</span> <span class=\"pre\">=</span> <span class=\"pre\">b,</span> <span class=\"pre\">a</span></tt>\nswaps two variables), overlaps <em>within</em> the collection of assigned-to variables\nare not safe!  For instance, the following program prints <tt class=\"docutils literal\"><span class=\"pre\">[0,</span> <span class=\"pre\">2]</span></tt>:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > p:nth-of-type(7)",
      "text": [
        "WARNING: Although the definition of assignment implies that overlaps between the\nleft-hand side and the right-hand side are ‘safe’ (for example ",
        "a,",
        "b",
        "=",
        "b,",
        "a",
        "\nswaps two variables), overlaps ",
        "within",
        " the collection of assigned-to variables\nare not safe!  For instance, the following program prints ",
        "[0,",
        "2]",
        ":"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 265,
        "top": 2550,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "x",
        "=",
        "[",
        "0",
        ",",
        "1",
        "]",
        "i",
        "=",
        "0",
        "i",
        ",",
        "x",
        "[",
        "i",
        "]",
        "=",
        "1",
        ",",
        "2",
        "print",
        "(",
        "x",
        ")"
      ]
    },
    {
      "bound": {
        "height": 106,
        "left": 265,
        "top": 2649,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(3)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><span class=\"target\" id=\"index-13\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3132\"><strong>PEP 3132</strong></a> - Extended Iterable Unpacking</dt>\n<dd>The specification for the <tt class=\"docutils literal\"><span class=\"pre\">*target</span></tt> feature.</dd>\n</dl>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div.admonition.admonition-see-also.seealso:nth-of-type(3)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 2695,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "<span class=\"target\" id=\"index-13\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3132\"><strong>PEP 3132</strong></a> - Extended Iterable Unpacking",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div.admonition.admonition-see-also.seealso:nth-of-type(3) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "PEP 3132",
        " - Extended Iterable Unpacking"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 2717,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(1)",
      "html": "The specification for the <tt class=\"docutils literal\"><span class=\"pre\">*target</span></tt> feature.",
      "path": "div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div.admonition.admonition-see-also.seealso:nth-of-type(3) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(1)",
      "text": [
        "The specification for the ",
        "*target",
        " feature."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 2765,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "7.2.1. Augmented assignment statements<a class=\"headerlink\" href=\"#augmented-assignment-statements\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > h3:nth-of-type(1)",
      "text": [
        "7.2.1. Augmented assignment statements",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2820,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-14:nth-of-type(1)",
      "html": "Augmented assignment is the combination, in a single statement, of a binary\noperation and an assignment statement:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > p#index-14:nth-of-type(1)",
      "text": [
        "Augmented assignment is the combination, in a single statement, of a binary\noperation and an assignment statement:"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 265,
        "top": 2858,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-augmented_assignment_stmt\">augmented_assignment_stmt</strong> ::=  <a class=\"reference internal\" href=\"#grammar-token-augtarget\"><tt class=\"xref docutils literal\"><span class=\"pre\">augtarget</span></tt></a> <a class=\"reference internal\" href=\"#grammar-token-augop\"><tt class=\"xref docutils literal\"><span class=\"pre\">augop</span></tt></a> (<a class=\"reference internal\" href=\"expressions.html#grammar-token-expression_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression_list</span></tt></a> | <a class=\"reference internal\" href=\"expressions.html#grammar-token-yield_expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">yield_expression</span></tt></a>)\n<strong id=\"grammar-token-augtarget\">augtarget                </strong> ::=  <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> | <a class=\"reference internal\" href=\"expressions.html#grammar-token-attributeref\"><tt class=\"xref docutils literal\"><span class=\"pre\">attributeref</span></tt></a> | <a class=\"reference internal\" href=\"expressions.html#grammar-token-subscription\"><tt class=\"xref docutils literal\"><span class=\"pre\">subscription</span></tt></a> | <a class=\"reference internal\" href=\"expressions.html#grammar-token-slicing\"><tt class=\"xref docutils literal\"><span class=\"pre\">slicing</span></tt></a>\n<strong id=\"grammar-token-augop\">augop                    </strong> ::=  \"+=\" | \"-=\" | \"*=\" | \"/=\" | \"//=\" | \"%=\" | \"**=\"\n                               | \"&gt;&gt;=\" | \"&lt;&lt;=\" | \"&amp;=\" | \"^=\" | \"|=\"\n",
      "path": "div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > pre:nth-of-type(1)",
      "text": [
        "augmented_assignment_stmt",
        " ::=  ",
        "augtarget",
        "augop",
        " (",
        "expression_list",
        " | ",
        "yield_expression",
        ")\n",
        "augtarget                ",
        " ::=  ",
        "identifier",
        " | ",
        "attributeref",
        " | ",
        "subscription",
        " | ",
        "slicing",
        "augop                    ",
        " ::=  \"+=\" | \"-=\" | \"*=\" | \"/=\" | \"//=\" | \"%=\" | \"**=\"\n                               | \">>=\" | \"<<=\" | \"&=\" | \"^=\" | \"|=\"\n"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2958,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "(See section <a class=\"reference internal\" href=\"expressions.html#primaries\"><em>Primaries</em></a> for the syntax definitions for the last three\nsymbols.)",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "(See section ",
        "Primaries",
        " for the syntax definitions for the last three\nsymbols.)"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 2996,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "An augmented assignment evaluates the target (which, unlike normal assignment\nstatements, cannot be an unpacking) and the expression list, performs the binary\noperation specific to the type of assignment on the two operands, and assigns\nthe result to the original target.  The target is only evaluated once.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > p:nth-of-type(3)",
      "text": [
        "An augmented assignment evaluates the target (which, unlike normal assignment\nstatements, cannot be an unpacking) and the expression list, performs the binary\noperation specific to the type of assignment on the two operands, and assigns\nthe result to the original target.  The target is only evaluated once."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 3056,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "An augmented assignment expression like <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">+=</span> <span class=\"pre\">1</span></tt> can be rewritten as <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">=</span> <span class=\"pre\">x</span> <span class=\"pre\">+</span>\n<span class=\"pre\">1</span></tt> to achieve a similar, but not exactly equal effect. In the augmented\nversion, <tt class=\"docutils literal\"><span class=\"pre\">x</span></tt> is only evaluated once. Also, when possible, the actual operation\nis performed <em>in-place</em>, meaning that rather than creating a new object and\nassigning that to the target, the old object is modified instead.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > p:nth-of-type(4)",
      "text": [
        "An augmented assignment expression like ",
        "x",
        "+=",
        "1",
        " can be rewritten as ",
        "x",
        "=",
        "x",
        "+",
        "1",
        " to achieve a similar, but not exactly equal effect. In the augmented\nversion, ",
        "x",
        " is only evaluated once. Also, when possible, the actual operation\nis performed ",
        "in-place",
        ", meaning that rather than creating a new object and\nassigning that to the target, the old object is modified instead."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 3138,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "With the exception of assigning to tuples and multiple targets in a single\nstatement, the assignment done by augmented assignment statements is handled the\nsame way as normal assignments. Similarly, with the exception of the possible\n<em>in-place</em> behavior, the binary operation performed by augmented assignment is\nthe same as the normal binary operations.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > p:nth-of-type(5)",
      "text": [
        "With the exception of assigning to tuples and multiple targets in a single\nstatement, the assignment done by augmented assignment statements is handled the\nsame way as normal assignments. Similarly, with the exception of the possible\n",
        "in-place",
        " behavior, the binary operation performed by augmented assignment is\nthe same as the normal binary operations."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3220,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "For targets which are attribute references, the same <a class=\"reference internal\" href=\"#attr-target-note\"><em>caveat about class\nand instance attributes</em></a> applies as for regular assignments.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#assignment-statements.section:nth-of-type(2) > div#augmented-assignment-statements.section:nth-of-type(4) > p:nth-of-type(6)",
      "text": [
        "For targets which are attribute references, the same ",
        "caveat about class\nand instance attributes",
        " applies as for regular assignments."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 3258,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.3. The <a class=\"reference internal\" href=\"#assert\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">assert</span></tt></a> statement<a class=\"headerlink\" href=\"#the-assert-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > h2:nth-of-type(1)",
      "text": [
        "7.3. The ",
        "assert",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3321,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-15:nth-of-type(1)",
      "html": "Assert statements are a convenient way to insert debugging assertions into a\nprogram:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > p#index-15:nth-of-type(1)",
      "text": [
        "Assert statements are a convenient way to insert debugging assertions into a\nprogram:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 3359,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-assert_stmt\">assert_stmt</strong> ::=  \"assert\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a> [\",\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a>]\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > pre:nth-of-type(1)",
      "text": [
        "assert_stmt",
        " ::=  \"assert\" ",
        "expression",
        " [\",\" ",
        "expression",
        "]\n"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3405,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The simple form, <tt class=\"docutils literal\"><span class=\"pre\">assert</span> <span class=\"pre\">expression</span></tt>, is equivalent to",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "The simple form, ",
        "assert",
        "expression",
        ", is equivalent to"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 3443,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">if</span> <span class=\"n\">__debug__</span><span class=\"p\">:</span>\n   <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">expression</span><span class=\"p\">:</span> <span class=\"k\">raise</span> <span class=\"ne\">AssertionError</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "if",
        "__debug__",
        ":",
        "if",
        "not",
        "expression",
        ":",
        "raise",
        "AssertionError"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3507,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The extended form, <tt class=\"docutils literal\"><span class=\"pre\">assert</span> <span class=\"pre\">expression1,</span> <span class=\"pre\">expression2</span></tt>, is equivalent to",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "The extended form, ",
        "assert",
        "expression1,",
        "expression2",
        ", is equivalent to"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 3545,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">if</span> <span class=\"n\">__debug__</span><span class=\"p\">:</span>\n   <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">expression1</span><span class=\"p\">:</span> <span class=\"k\">raise</span> <span class=\"ne\">AssertionError</span><span class=\"p\">(</span><span class=\"n\">expression2</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "if",
        "__debug__",
        ":",
        "if",
        "not",
        "expression1",
        ":",
        "raise",
        "AssertionError",
        "(",
        "expression2",
        ")"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 3609,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-16:nth-of-type(4)",
      "html": "These equivalences assume that <a class=\"reference internal\" href=\"../library/constants.html#__debug__\" title=\"__debug__\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">__debug__</span></tt></a> and <a class=\"reference internal\" href=\"../library/exceptions.html#AssertionError\" title=\"AssertionError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">AssertionError</span></tt></a> refer to\nthe built-in variables with those names.  In the current implementation, the\nbuilt-in variable <a class=\"reference internal\" href=\"../library/constants.html#__debug__\" title=\"__debug__\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">__debug__</span></tt></a> is <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> under normal circumstances,\n<tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> when optimization is requested (command line option -O).  The current\ncode generator emits no code for an assert statement when optimization is\nrequested at compile time.  Note that it is unnecessary to include the source\ncode for the expression that failed in the error message; it will be displayed\nas part of the stack trace.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > p#index-16:nth-of-type(4)",
      "text": [
        "These equivalences assume that ",
        "__debug__",
        " and ",
        "AssertionError",
        " refer to\nthe built-in variables with those names.  In the current implementation, the\nbuilt-in variable ",
        "__debug__",
        " is ",
        "True",
        " under normal circumstances,\n",
        "False",
        " when optimization is requested (command line option -O).  The current\ncode generator emits no code for an assert statement when optimization is\nrequested at compile time.  Note that it is unnecessary to include the source\ncode for the expression that failed in the error message; it will be displayed\nas part of the stack trace."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3713,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Assignments to <a class=\"reference internal\" href=\"../library/constants.html#__debug__\" title=\"__debug__\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">__debug__</span></tt></a> are illegal.  The value for the built-in variable\nis determined when the interpreter starts.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-assert-statement.section:nth-of-type(3) > p:nth-of-type(5)",
      "text": [
        "Assignments to ",
        "__debug__",
        " are illegal.  The value for the built-in variable\nis determined when the interpreter starts."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 3751,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.4. The <a class=\"reference internal\" href=\"#pass\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">pass</span></tt></a> statement<a class=\"headerlink\" href=\"#the-pass-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-pass-statement.section:nth-of-type(4) > h2:nth-of-type(1)",
      "text": [
        "7.4. The ",
        "pass",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 3813,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-17:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-pass_stmt\">pass_stmt</strong> ::=  \"pass\"\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-pass-statement.section:nth-of-type(4) > pre#index-17:nth-of-type(1)",
      "text": [
        "pass_stmt",
        " ::=  \"pass\"\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3859,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#pass\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">pass</span></tt></a> is a null operation — when it is executed, nothing happens.\nIt is useful as a placeholder when a statement is required syntactically, but no\ncode needs to be executed, for example:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-pass-statement.section:nth-of-type(4) > p:nth-of-type(1)",
      "text": [
        "pass",
        " is a null operation — when it is executed, nothing happens.\nIt is useful as a placeholder when a statement is required syntactically, but no\ncode needs to be executed, for example:"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 3919,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">):</span> <span class=\"k\">pass</span>    <span class=\"c\"># a function that does nothing (yet)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span> <span class=\"k\">pass</span>       <span class=\"c\"># a class with no methods (yet)</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-pass-statement.section:nth-of-type(4) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "f",
        "(",
        "arg",
        "):",
        "pass",
        "# a function that does nothing (yet)",
        "class",
        "C",
        ":",
        "pass",
        "# a class with no methods (yet)"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 4000,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.5. The <a class=\"reference internal\" href=\"#del\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">del</span></tt></a> statement<a class=\"headerlink\" href=\"#the-del-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-del-statement.section:nth-of-type(5) > h2:nth-of-type(1)",
      "text": [
        "7.5. The ",
        "del",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 4062,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-18:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-del_stmt\">del_stmt</strong> ::=  \"del\" <a class=\"reference internal\" href=\"#grammar-token-target_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">target_list</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-del-statement.section:nth-of-type(5) > pre#index-18:nth-of-type(1)",
      "text": [
        "del_stmt",
        " ::=  \"del\" ",
        "target_list"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4108,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Deletion is recursively defined very similar to the way assignment is defined.\nRather than spelling it out in full details, here are some hints.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-del-statement.section:nth-of-type(5) > p:nth-of-type(1)",
      "text": [
        "Deletion is recursively defined very similar to the way assignment is defined.\nRather than spelling it out in full details, here are some hints."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4146,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Deletion of a target list recursively deletes each target, from left to right.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-del-statement.section:nth-of-type(5) > p:nth-of-type(2)",
      "text": [
        "Deletion of a target list recursively deletes each target, from left to right."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 4184,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-19:nth-of-type(3)",
      "html": "Deletion of a name removes the binding of that name from the local or global\nnamespace, depending on whether the name occurs in a <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement\nin the same code block.  If the name is unbound, a <a class=\"reference internal\" href=\"../library/exceptions.html#NameError\" title=\"NameError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">NameError</span></tt></a> exception\nwill be raised.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-del-statement.section:nth-of-type(5) > p#index-19:nth-of-type(3)",
      "text": [
        "Deletion of a name removes the binding of that name from the local or global\nnamespace, depending on whether the name occurs in a ",
        "global",
        " statement\nin the same code block.  If the name is unbound, a ",
        "NameError",
        " exception\nwill be raised."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 4244,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-20:nth-of-type(4)",
      "html": "Deletion of attribute references, subscriptions and slicings is passed to the\nprimary object involved; deletion of a slicing is in general equivalent to\nassignment of an empty slice of the right type (but even this is determined by\nthe sliced object).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-del-statement.section:nth-of-type(5) > p#index-20:nth-of-type(4)",
      "text": [
        "Deletion of attribute references, subscriptions and slicings is passed to the\nprimary object involved; deletion of a slicing is in general equivalent to\nassignment of an empty slice of the right type (but even this is determined by\nthe sliced object)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4304,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(5)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.2:</span> Previously it was illegal to delete a name from the local namespace if it\noccurs as a free variable in a nested block.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-del-statement.section:nth-of-type(5) > p.versionchanged:nth-of-type(5)",
      "text": [
        "Changed in version 3.2:",
        " Previously it was illegal to delete a name from the local namespace if it\noccurs as a free variable in a nested block."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 4342,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.6. The <a class=\"reference internal\" href=\"#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a> statement<a class=\"headerlink\" href=\"#the-return-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-return-statement.section:nth-of-type(6) > h2:nth-of-type(1)",
      "text": [
        "7.6. The ",
        "return",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 4404,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-21:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-return_stmt\">return_stmt</strong> ::=  \"return\" [<a class=\"reference internal\" href=\"expressions.html#grammar-token-expression_list\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression_list</span></tt></a>]\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-return-statement.section:nth-of-type(6) > pre#index-21:nth-of-type(1)",
      "text": [
        "return_stmt",
        " ::=  \"return\" [",
        "expression_list",
        "]\n"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4450,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a> may only occur syntactically nested in a function definition,\nnot within a nested class definition.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-return-statement.section:nth-of-type(6) > p:nth-of-type(1)",
      "text": [
        "return",
        " may only occur syntactically nested in a function definition,\nnot within a nested class definition."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4488,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If an expression list is present, it is evaluated, else <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> is substituted.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-return-statement.section:nth-of-type(6) > p:nth-of-type(2)",
      "text": [
        "If an expression list is present, it is evaluated, else ",
        "None",
        " is substituted."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4526,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a> leaves the current function call with the expression list (or\n<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>) as return value.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-return-statement.section:nth-of-type(6) > p:nth-of-type(3)",
      "text": [
        "return",
        " leaves the current function call with the expression list (or\n",
        "None",
        ") as return value."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4564,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-22:nth-of-type(4)",
      "html": "When <a class=\"reference internal\" href=\"#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a> passes control out of a <a class=\"reference internal\" href=\"compound_stmts.html#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> statement with a\n<a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause, that <a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause is executed before\nreally leaving the function.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-return-statement.section:nth-of-type(6) > p#index-22:nth-of-type(4)",
      "text": [
        "When ",
        "return",
        " passes control out of a ",
        "try",
        " statement with a\n",
        "finally",
        " clause, that ",
        "finally",
        " clause is executed before\nreally leaving the function."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 4602,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "In a generator function, the <a class=\"reference internal\" href=\"#return\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></tt></a> statement indicates that the\ngenerator is done and will cause <a class=\"reference internal\" href=\"../library/exceptions.html#StopIteration\" title=\"StopIteration\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></tt></a> to be raised. The returned\nvalue (if any) is used as an argument to construct <a class=\"reference internal\" href=\"../library/exceptions.html#StopIteration\" title=\"StopIteration\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></tt></a> and\nbecomes the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">StopIteration.value</span></tt> attribute.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-return-statement.section:nth-of-type(6) > p:nth-of-type(5)",
      "text": [
        "In a generator function, the ",
        "return",
        " statement indicates that the\ngenerator is done and will cause ",
        "StopIteration",
        " to be raised. The returned\nvalue (if any) is used as an argument to construct ",
        "StopIteration",
        " and\nbecomes the ",
        "StopIteration.value",
        " attribute."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 4662,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.7. The <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> statement<a class=\"headerlink\" href=\"#the-yield-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > h2:nth-of-type(1)",
      "text": [
        "7.7. The ",
        "yield",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 4724,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-23:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-yield_stmt\">yield_stmt</strong> ::=  <a class=\"reference internal\" href=\"expressions.html#grammar-token-yield_expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">yield_expression</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > pre#index-23:nth-of-type(1)",
      "text": [
        "yield_stmt",
        " ::=  ",
        "yield_expression"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 4770,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> statement is only used when defining a generator function,\nand is only used in the body of the generator function. Using a <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a>\nstatement in a function definition is sufficient to cause that definition to\ncreate a generator function instead of a normal function.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > p:nth-of-type(1)",
      "text": [
        "The ",
        "yield",
        " statement is only used when defining a generator function,\nand is only used in the body of the generator function. Using a ",
        "yield",
        "\nstatement in a function definition is sufficient to cause that definition to\ncreate a generator function instead of a normal function."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 4830,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "When a generator function is called, it returns an iterator known as a generator\niterator, or more commonly, a generator.  The body of the generator function is\nexecuted by calling the <a class=\"reference internal\" href=\"../library/functions.html#next\" title=\"next\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">next()</span></tt></a> function on the generator repeatedly until\nit raises an exception.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > p:nth-of-type(2)",
      "text": [
        "When a generator function is called, it returns an iterator known as a generator\niterator, or more commonly, a generator.  The body of the generator function is\nexecuted by calling the ",
        "next()",
        " function on the generator repeatedly until\nit raises an exception."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 4890,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "When a <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> statement is executed, the state of the generator is\nfrozen and the value of <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression_list\"><tt class=\"xref std std-token docutils literal\"><span class=\"pre\">expression_list</span></tt></a> is returned to <a class=\"reference internal\" href=\"../library/functions.html#next\" title=\"next\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">next()</span></tt></a>‘s\ncaller.  By “frozen” we mean that all local state is retained, including the\ncurrent bindings of local variables, the instruction pointer, and the internal\nevaluation stack: enough information is saved so that the next time <a class=\"reference internal\" href=\"../library/functions.html#next\" title=\"next\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">next()</span></tt></a>\nis invoked, the function can proceed exactly as if the <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a>\nstatement were just another external call.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > p:nth-of-type(3)",
      "text": [
        "When a ",
        "yield",
        " statement is executed, the state of the generator is\nfrozen and the value of ",
        "expression_list",
        " is returned to ",
        "next()",
        "‘s\ncaller.  By “frozen” we mean that all local state is retained, including the\ncurrent bindings of local variables, the instruction pointer, and the internal\nevaluation stack: enough information is saved so that the next time ",
        "next()",
        "\nis invoked, the function can proceed exactly as if the ",
        "yield",
        "\nstatement were just another external call."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 4972,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> statement is allowed in the <a class=\"reference internal\" href=\"compound_stmts.html#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> clause of a\n<a class=\"reference internal\" href=\"compound_stmts.html#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> ...  <a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> construct.  If the generator is not\nresumed before it is finalized (by reaching a zero reference count or by being\ngarbage collected), the generator-iterator’s <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">close()</span></tt> method will be\ncalled, allowing any pending <a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clauses to execute.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > p:nth-of-type(4)",
      "text": [
        "The ",
        "yield",
        " statement is allowed in the ",
        "try",
        " clause of a\n",
        "try",
        " ...  ",
        "finally",
        " construct.  If the generator is not\nresumed before it is finalized (by reaching a zero reference count or by being\ngarbage collected), the generator-iterator’s ",
        "close()",
        " method will be\ncalled, allowing any pending ",
        "finally",
        " clauses to execute."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5032,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "When <tt class=\"docutils literal\"><span class=\"pre\">yield</span> <span class=\"pre\">from</span> <span class=\"pre\">&lt;expr&gt;</span></tt> is used, it treats the supplied expression as\na subiterator, producing values from it until the underlying iterator is\nexhausted.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > p:nth-of-type(5)",
      "text": [
        "When ",
        "yield",
        "from",
        "<expr>",
        " is used, it treats the supplied expression as\na subiterator, producing values from it until the underlying iterator is\nexhausted."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 5070,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(1)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> Added <tt class=\"docutils literal\"><span class=\"pre\">yield</span> <span class=\"pre\">from</span> <span class=\"pre\">&lt;expr&gt;</span></tt> to delegate control flow to a subiterator",
      "path": "div > div > div > div > div > div > blockquote > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > blockquote:nth-of-type(1) > div:nth-of-type(1) > p.versionchanged:nth-of-type(1)",
      "text": [
        "Changed in version 3.3:",
        " Added ",
        "yield",
        "from",
        "<expr>",
        " to delegate control flow to a subiterator"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5108,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "For full details of <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> semantics, refer to the <a class=\"reference internal\" href=\"expressions.html#yieldexpr\"><em>Yield expressions</em></a>\nsection.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > p:nth-of-type(6)",
      "text": [
        "For full details of ",
        "yield",
        " semantics, refer to the ",
        "Yield expressions",
        "\nsection."
      ]
    },
    {
      "bound": {
        "height": 210,
        "left": 265,
        "top": 5146,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><span class=\"target\" id=\"index-24\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0255\"><strong>PEP 0255</strong></a> - Simple Generators</dt>\n<dd>The proposal for adding generators and the <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> statement to Python.</dd>\n<dt><span class=\"target\" id=\"index-25\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0342\"><strong>PEP 0342</strong></a> - Coroutines via Enhanced Generators</dt>\n<dd>The proposal to enhance the API and syntax of generators, making them\nusable as simple coroutines.</dd>\n<dt><span class=\"target\" id=\"index-26\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0380\"><strong>PEP 0380</strong></a> - Syntax for Delegating to a Subgenerator</dt>\n<dd>The proposal to introduce the <tt class=\"xref std std-token docutils literal\"><span class=\"pre\">yield_from</span></tt> syntax, making delegation\nto sub-generators easy.</dd>\n</dl>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 5192,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "<span class=\"target\" id=\"index-24\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0255\"><strong>PEP 0255</strong></a> - Simple Generators",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "PEP 0255",
        " - Simple Generators"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 5214,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(1)",
      "html": "The proposal for adding generators and the <a class=\"reference internal\" href=\"#yield\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></tt></a> statement to Python.",
      "path": "div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(1)",
      "text": [
        "The proposal for adding generators and the ",
        "yield",
        " statement to Python."
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 5244,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "<span class=\"target\" id=\"index-25\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0342\"><strong>PEP 0342</strong></a> - Coroutines via Enhanced Generators",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(2)",
      "text": [
        "PEP 0342",
        " - Coroutines via Enhanced Generators"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 5266,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(2)",
      "html": "The proposal to enhance the API and syntax of generators, making them\nusable as simple coroutines.",
      "path": "div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(2)",
      "text": [
        "The proposal to enhance the API and syntax of generators, making them\nusable as simple coroutines."
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 5296,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(3)",
      "html": "<span class=\"target\" id=\"index-26\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0380\"><strong>PEP 0380</strong></a> - Syntax for Delegating to a Subgenerator",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(3)",
      "text": [
        "PEP 0380",
        " - Syntax for Delegating to a Subgenerator"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 5318,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(3)",
      "html": "The proposal to introduce the <tt class=\"xref std std-token docutils literal\"><span class=\"pre\">yield_from</span></tt> syntax, making delegation\nto sub-generators easy.",
      "path": "div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-yield-statement.section:nth-of-type(7) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(3)",
      "text": [
        "The proposal to introduce the ",
        "yield_from",
        " syntax, making delegation\nto sub-generators easy."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 5366,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.8. The <a class=\"reference internal\" href=\"#raise\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">raise</span></tt></a> statement<a class=\"headerlink\" href=\"#the-raise-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > h2:nth-of-type(1)",
      "text": [
        "7.8. The ",
        "raise",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 5428,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-27:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-raise_stmt\">raise_stmt</strong> ::=  \"raise\" [<a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a> [\"from\" <a class=\"reference internal\" href=\"expressions.html#grammar-token-expression\"><tt class=\"xref docutils literal\"><span class=\"pre\">expression</span></tt></a>]]\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > pre#index-27:nth-of-type(1)",
      "text": [
        "raise_stmt",
        " ::=  \"raise\" [",
        "expression",
        " [\"from\" ",
        "expression",
        "]]\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 5474,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "If no expressions are present, <a class=\"reference internal\" href=\"#raise\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">raise</span></tt></a> re-raises the last exception\nthat was active in the current scope.  If no exception is active in the current\nscope, a <a class=\"reference internal\" href=\"../library/exceptions.html#RuntimeError\" title=\"RuntimeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">RuntimeError</span></tt></a> exception is raised indicating that this is an\nerror.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > p:nth-of-type(1)",
      "text": [
        "If no expressions are present, ",
        "raise",
        " re-raises the last exception\nthat was active in the current scope.  If no exception is active in the current\nscope, a ",
        "RuntimeError",
        " exception is raised indicating that this is an\nerror."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 5534,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Otherwise, <a class=\"reference internal\" href=\"#raise\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">raise</span></tt></a> evaluates the first expression as the exception\nobject.  It must be either a subclass or an instance of <a class=\"reference internal\" href=\"../library/exceptions.html#BaseException\" title=\"BaseException\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">BaseException</span></tt></a>.\nIf it is a class, the exception instance will be obtained when needed by\ninstantiating the class with no arguments.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > p:nth-of-type(2)",
      "text": [
        "Otherwise, ",
        "raise",
        " evaluates the first expression as the exception\nobject.  It must be either a subclass or an instance of ",
        "BaseException",
        ".\nIf it is a class, the exception instance will be obtained when needed by\ninstantiating the class with no arguments."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5594,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <em class=\"dfn\">type</em> of the exception is the exception instance’s class, the\n<em class=\"dfn\">value</em> is the instance itself.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > p:nth-of-type(3)",
      "text": [
        "The ",
        "type",
        " of the exception is the exception instance’s class, the\n",
        "value",
        " is the instance itself."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 5632,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-28:nth-of-type(4)",
      "html": "A traceback object is normally created automatically when an exception is raised\nand attached to it as the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__traceback__</span></tt> attribute, which is writable.\nYou can create an exception and set your own traceback in one step using the\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">with_traceback()</span></tt> exception method (which returns the same exception\ninstance, with its traceback set to its argument), like so:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > p#index-28:nth-of-type(4)",
      "text": [
        "A traceback object is normally created automatically when an exception is raised\nand attached to it as the ",
        "__traceback__",
        " attribute, which is writable.\nYou can create an exception and set your own traceback in one step using the\n",
        "with_traceback()",
        " exception method (which returns the same exception\ninstance, with its traceback set to its argument), like so:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 5692,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s\">\"foo occurred\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_traceback</span><span class=\"p\">(</span><span class=\"n\">tracebackobj</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "raise",
        "Exception",
        "(",
        "\"foo occurred\"",
        ")",
        ".",
        "with_traceback",
        "(",
        "tracebackobj",
        ")"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 5738,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-29:nth-of-type(5)",
      "html": "The <tt class=\"docutils literal\"><span class=\"pre\">from</span></tt> clause is used for exception chaining: if given, the second\n<em>expression</em> must be another exception class or instance, which will then be\nattached to the raised exception as the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__cause__</span></tt> attribute (which is\nwritable).  If the raised exception is not handled, both exceptions will be\nprinted:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > p#index-29:nth-of-type(5)",
      "text": [
        "The ",
        "from",
        " clause is used for exception chaining: if given, the second\n",
        "expression",
        " must be another exception class or instance, which will then be\nattached to the raised exception as the ",
        "__cause__",
        " attribute (which is\nwritable).  If the raised exception is not handled, both exceptions will be\nprinted:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 5798,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 265,
        "top": 5798,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s\">\"Something bad happened\"</span><span class=\"p\">)</span> <span class=\"kn\">from</span> <span class=\"nn\">exc</span>\n<span class=\"gp\">...</span>\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">2</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">ZeroDivisionError</span><span>: </span><span class=\"n\">int division or modulo by zero</span>\n\n<span class=\"go\">The above exception was the direct cause of the following exception:</span>\n\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">4</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">RuntimeError</span><span>: </span><span class=\"n\">Something bad happened</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "try",
        ":",
        "... ",
        "print",
        "(",
        "1",
        "/",
        "0",
        ")",
        "... ",
        "except",
        "Exception",
        "as",
        "exc",
        ":",
        "... ",
        "raise",
        "RuntimeError",
        "(",
        "\"Something bad happened\"",
        ")",
        "from",
        "exc",
        "...",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "2",
        ", in ",
        "<module>",
        "ZeroDivisionError",
        ": ",
        "int division or modulo by zero",
        "The above exception was the direct cause of the following exception:",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "4",
        ", in ",
        "<module>",
        "RuntimeError",
        ": ",
        "Something bad happened"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6078,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "A similar mechanism works implicitly if an exception is raised inside an\nexception handler: the previous exception is then attached as the new\nexception’s <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__context__</span></tt> attribute:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > p:nth-of-type(6)",
      "text": [
        "A similar mechanism works implicitly if an exception is raised inside an\nexception handler: the previous exception is then attached as the new\nexception’s ",
        "__context__",
        " attribute:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6116,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 265,
        "top": 6116,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"k\">except</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"s\">\"Something bad happened\"</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">2</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">ZeroDivisionError</span><span>: </span><span class=\"n\">int division or modulo by zero</span>\n\n<span class=\"go\">During handling of the above exception, another exception occurred:</span>\n\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">4</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">RuntimeError</span><span>: </span><span class=\"n\">Something bad happened</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "try",
        ":",
        "... ",
        "print",
        "(",
        "1",
        "/",
        "0",
        ")",
        "... ",
        "except",
        ":",
        "... ",
        "raise",
        "RuntimeError",
        "(",
        "\"Something bad happened\"",
        ")",
        "...",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "2",
        ", in ",
        "<module>",
        "ZeroDivisionError",
        ": ",
        "int division or modulo by zero",
        "During handling of the above exception, another exception occurred:",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "4",
        ", in ",
        "<module>",
        "RuntimeError",
        ": ",
        "Something bad happened"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6396,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Additional information on exceptions can be found in section <a class=\"reference internal\" href=\"executionmodel.html#exceptions\"><em>Exceptions</em></a>,\nand information about handling exceptions is in section <a class=\"reference internal\" href=\"compound_stmts.html#try\"><em>The try statement</em></a>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-raise-statement.section:nth-of-type(8) > p:nth-of-type(7)",
      "text": [
        "Additional information on exceptions can be found in section ",
        "Exceptions",
        ",\nand information about handling exceptions is in section ",
        "The try statement",
        "."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 6434,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.9. The <a class=\"reference internal\" href=\"#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a> statement<a class=\"headerlink\" href=\"#the-break-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-break-statement.section:nth-of-type(9) > h2:nth-of-type(1)",
      "text": [
        "7.9. The ",
        "break",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 6496,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-30:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-break_stmt\">break_stmt</strong> ::=  \"break\"\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-break-statement.section:nth-of-type(9) > pre#index-30:nth-of-type(1)",
      "text": [
        "break_stmt",
        " ::=  \"break\"\n"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6542,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a> may only occur syntactically nested in a <a class=\"reference internal\" href=\"compound_stmts.html#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> or\n<a class=\"reference internal\" href=\"compound_stmts.html#while\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">while</span></tt></a> loop, but not nested in a function or class definition within\nthat loop.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-break-statement.section:nth-of-type(9) > p:nth-of-type(1)",
      "text": [
        "break",
        " may only occur syntactically nested in a ",
        "for",
        " or\n",
        "while",
        " loop, but not nested in a function or class definition within\nthat loop."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6580,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-31:nth-of-type(2)",
      "html": "It terminates the nearest enclosing loop, skipping the optional <a class=\"reference internal\" href=\"compound_stmts.html#else\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">else</span></tt></a>\nclause if the loop has one.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-break-statement.section:nth-of-type(9) > p#index-31:nth-of-type(2)",
      "text": [
        "It terminates the nearest enclosing loop, skipping the optional ",
        "else",
        "\nclause if the loop has one."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6618,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If a <a class=\"reference internal\" href=\"compound_stmts.html#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> loop is terminated by <a class=\"reference internal\" href=\"#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a>, the loop control\ntarget keeps its current value.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-break-statement.section:nth-of-type(9) > p:nth-of-type(3)",
      "text": [
        "If a ",
        "for",
        " loop is terminated by ",
        "break",
        ", the loop control\ntarget keeps its current value."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6656,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-32:nth-of-type(4)",
      "html": "When <a class=\"reference internal\" href=\"#break\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">break</span></tt></a> passes control out of a <a class=\"reference internal\" href=\"compound_stmts.html#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> statement with a\n<a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause, that <a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause is executed before\nreally leaving the loop.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-break-statement.section:nth-of-type(9) > p#index-32:nth-of-type(4)",
      "text": [
        "When ",
        "break",
        " passes control out of a ",
        "try",
        " statement with a\n",
        "finally",
        " clause, that ",
        "finally",
        " clause is executed before\nreally leaving the loop."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 6694,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.10. The <a class=\"reference internal\" href=\"#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a> statement<a class=\"headerlink\" href=\"#the-continue-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-continue-statement.section:nth-of-type(10) > h2:nth-of-type(1)",
      "text": [
        "7.10. The ",
        "continue",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 6756,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-33:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-continue_stmt\">continue_stmt</strong> ::=  \"continue\"\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-continue-statement.section:nth-of-type(10) > pre#index-33:nth-of-type(1)",
      "text": [
        "continue_stmt",
        " ::=  \"continue\"\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 6802,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a> may only occur syntactically nested in a <a class=\"reference internal\" href=\"compound_stmts.html#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> or\n<a class=\"reference internal\" href=\"compound_stmts.html#while\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">while</span></tt></a> loop, but not nested in a function or class definition or\n<a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause within that loop.  It continues with the next\ncycle of the nearest enclosing loop.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-continue-statement.section:nth-of-type(10) > p:nth-of-type(1)",
      "text": [
        "continue",
        " may only occur syntactically nested in a ",
        "for",
        " or\n",
        "while",
        " loop, but not nested in a function or class definition or\n",
        "finally",
        " clause within that loop.  It continues with the next\ncycle of the nearest enclosing loop."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6862,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "When <a class=\"reference internal\" href=\"#continue\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">continue</span></tt></a> passes control out of a <a class=\"reference internal\" href=\"compound_stmts.html#try\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></tt></a> statement with a\n<a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause, that <a class=\"reference internal\" href=\"compound_stmts.html#finally\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></tt></a> clause is executed before\nreally starting the next loop cycle.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-continue-statement.section:nth-of-type(10) > p:nth-of-type(2)",
      "text": [
        "When ",
        "continue",
        " passes control out of a ",
        "try",
        " statement with a\n",
        "finally",
        " clause, that ",
        "finally",
        " clause is executed before\nreally starting the next loop cycle."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 6900,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.11. The <a class=\"reference internal\" href=\"#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement<a class=\"headerlink\" href=\"#the-import-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > h2:nth-of-type(1)",
      "text": [
        "7.11. The ",
        "import",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 265,
        "top": 6962,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-34:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-import_stmt\">import_stmt    </strong> ::=  \"import\" <a class=\"reference internal\" href=\"#grammar-token-module\"><tt class=\"xref docutils literal\"><span class=\"pre\">module</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"#grammar-token-name\"><tt class=\"xref docutils literal\"><span class=\"pre\">name</span></tt></a>] ( \",\" <a class=\"reference internal\" href=\"#grammar-token-module\"><tt class=\"xref docutils literal\"><span class=\"pre\">module</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"#grammar-token-name\"><tt class=\"xref docutils literal\"><span class=\"pre\">name</span></tt></a>] )*\n                     | \"from\" <a class=\"reference internal\" href=\"#grammar-token-relative_module\"><tt class=\"xref docutils literal\"><span class=\"pre\">relative_module</span></tt></a> \"import\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"#grammar-token-name\"><tt class=\"xref docutils literal\"><span class=\"pre\">name</span></tt></a>]\n                     ( \",\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"#grammar-token-name\"><tt class=\"xref docutils literal\"><span class=\"pre\">name</span></tt></a>] )*\n                     | \"from\" <a class=\"reference internal\" href=\"#grammar-token-relative_module\"><tt class=\"xref docutils literal\"><span class=\"pre\">relative_module</span></tt></a> \"import\" \"(\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"#grammar-token-name\"><tt class=\"xref docutils literal\"><span class=\"pre\">name</span></tt></a>]\n                     ( \",\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> [\"as\" <a class=\"reference internal\" href=\"#grammar-token-name\"><tt class=\"xref docutils literal\"><span class=\"pre\">name</span></tt></a>] )* [\",\"] \")\"\n                     | \"from\" <a class=\"reference internal\" href=\"#grammar-token-module\"><tt class=\"xref docutils literal\"><span class=\"pre\">module</span></tt></a> \"import\" \"*\"\n<strong id=\"grammar-token-module\">module         </strong> ::=  (<a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> \".\")* <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>\n<strong id=\"grammar-token-relative_module\">relative_module</strong> ::=  \".\"* <a class=\"reference internal\" href=\"#grammar-token-module\"><tt class=\"xref docutils literal\"><span class=\"pre\">module</span></tt></a> | \".\"+\n<strong id=\"grammar-token-name\">name           </strong> ::=  <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > pre#index-34:nth-of-type(1)",
      "text": [
        "import_stmt    ",
        " ::=  \"import\" ",
        "module",
        " [\"as\" ",
        "name",
        "] ( \",\" ",
        "module",
        " [\"as\" ",
        "name",
        "] )*\n                     | \"from\" ",
        "relative_module",
        " \"import\" ",
        "identifier",
        " [\"as\" ",
        "name",
        "]\n                     ( \",\" ",
        "identifier",
        " [\"as\" ",
        "name",
        "] )*\n                     | \"from\" ",
        "relative_module",
        " \"import\" \"(\" ",
        "identifier",
        " [\"as\" ",
        "name",
        "]\n                     ( \",\" ",
        "identifier",
        " [\"as\" ",
        "name",
        "] )* [\",\"] \")\"\n                     | \"from\" ",
        "module",
        " \"import\" \"*\"\n",
        "module         ",
        " ::=  (",
        "identifier",
        " \".\")* ",
        "identifier",
        "relative_module",
        " ::=  \".\"* ",
        "module",
        " | \".\"+\n",
        "name           ",
        " ::=  ",
        "identifier"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7152,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The basic import statement (no <a class=\"reference internal\" href=\"#from\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">from</span></tt></a> clause) is executed in two\nsteps:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(1)",
      "text": [
        "The basic import statement (no ",
        "from",
        " clause) is executed in two\nsteps:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 7190,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "find a module, loading and initializing it if necessary",
      "path": "div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "find a module, loading and initializing it if necessary"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 7210,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "define a name or names in the local namespace for the scope where\nthe <a class=\"reference internal\" href=\"#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement occurs.",
      "path": "div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "define a name or names in the local namespace for the scope where\nthe ",
        "import",
        " statement occurs."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 7246,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "When the statement contains multiple clauses (separated by\ncommas) the two steps are carried out separately for each clause, just\nas though the clauses had been separated out into individiual import\nstatements.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(2)",
      "text": [
        "When the statement contains multiple clauses (separated by\ncommas) the two steps are carried out separately for each clause, just\nas though the clauses had been separated out into individiual import\nstatements."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 7306,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The details of the first step, finding and loading modules is described in\ngreater detail in the section on the <a class=\"reference internal\" href=\"import.html#importsystem\"><em>import system</em></a>,\nwhich also describes the various types of packages and modules that can\nbe imported, as well as all the hooks that can be used to customize\nthe import system. Note that failures in this step may indicate either\nthat the module could not be located, <em>or</em> that an error occurred while\ninitializing the module, which includes execution of the module’s code.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(3)",
      "text": [
        "The details of the first step, finding and loading modules is described in\ngreater detail in the section on the ",
        "import system",
        ",\nwhich also describes the various types of packages and modules that can\nbe imported, as well as all the hooks that can be used to customize\nthe import system. Note that failures in this step may indicate either\nthat the module could not be located, ",
        "or",
        " that an error occurred while\ninitializing the module, which includes execution of the module’s code."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7388,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "If the requested module is retrieved successfully, it will be made\navailable in the local namespace in one of three ways:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(4)",
      "text": [
        "If the requested module is retrieved successfully, it will be made\navailable in the local namespace in one of three ways:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 7426,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "If the module name is followed by <a class=\"reference internal\" href=\"compound_stmts.html#as\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">as</span></tt></a>, then the name\nfollowing <a class=\"reference internal\" href=\"compound_stmts.html#as\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">as</span></tt></a> is bound directly to the imported module.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "If the module name is followed by ",
        "as",
        ", then the name\nfollowing ",
        "as",
        " is bound directly to the imported module."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 7446,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "If no other name is specified, and the module being imported is a top\nlevel module, the module’s name is bound in the local namespace as a\nreference to the imported module",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "If no other name is specified, and the module being imported is a top\nlevel module, the module’s name is bound in the local namespace as a\nreference to the imported module"
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 7486,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "If the module being imported is <em>not</em> a top level module, then the name\nof the top level package that contains the module is bound in the local\nnamespace as a reference to the top level package. The imported module\nmust be accessed using its full qualified name rather than directly",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "If the module being imported is ",
        "not",
        " a top level module, then the name\nof the top level package that contains the module is bound in the local\nnamespace as a reference to the top level package. The imported module\nmust be accessed using its full qualified name rather than directly"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7542,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-35:nth-of-type(5)",
      "html": "The <a class=\"reference internal\" href=\"#from\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">from</span></tt></a> form uses a slightly more complex process:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p#index-35:nth-of-type(5)",
      "text": [
        "The ",
        "from",
        " form uses a slightly more complex process:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 7580,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "find the module specified in the <a class=\"reference internal\" href=\"#from\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">from</span></tt></a> clause loading and\ninitializing it if necessary;",
      "path": "div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "find the module specified in the ",
        "from",
        " clause loading and\ninitializing it if necessary;"
      ]
    },
    {
      "bound": {
        "height": 100,
        "left": 305,
        "top": 7600,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "for each of the identifiers specified in the <a class=\"reference internal\" href=\"#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> clauses:<ol class=\"arabic\">\n<li>check if the imported module has an attribute by that name</li>\n<li>if not, attempt to import a submodule with that name and then\ncheck the imported module again for that attribute</li>\n<li>if the attribute is not found, <a class=\"reference internal\" href=\"../library/exceptions.html#ImportError\" title=\"ImportError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ImportError</span></tt></a> is raised.</li>\n<li>otherwise, a reference to that value is bound in the local namespace,\nusing the name in the <a class=\"reference internal\" href=\"compound_stmts.html#as\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">as</span></tt></a> clause if it is present,\notherwise using the attribute name</li>\n</ol>\n",
      "path": "div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "for each of the identifiers specified in the ",
        "import",
        " clauses:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 7620,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "check if the imported module has an attribute by that name",
      "path": "div > div > div > div > div > div > ol > li > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(2) > li:nth-of-type(2) > ol.arabic:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "check if the imported module has an attribute by that name"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 7640,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "if not, attempt to import a submodule with that name and then\ncheck the imported module again for that attribute",
      "path": "div > div > div > div > div > div > ol > li > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(2) > li:nth-of-type(2) > ol.arabic:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "if not, attempt to import a submodule with that name and then\ncheck the imported module again for that attribute"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 7660,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "if the attribute is not found, <a class=\"reference internal\" href=\"../library/exceptions.html#ImportError\" title=\"ImportError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ImportError</span></tt></a> is raised.",
      "path": "div > div > div > div > div > div > ol > li > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(2) > li:nth-of-type(2) > ol.arabic:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "if the attribute is not found, ",
        "ImportError",
        " is raised."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 7680,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "otherwise, a reference to that value is bound in the local namespace,\nusing the name in the <a class=\"reference internal\" href=\"compound_stmts.html#as\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">as</span></tt></a> clause if it is present,\notherwise using the attribute name",
      "path": "div > div > div > div > div > div > ol > li > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > ol.arabic.simple:nth-of-type(2) > li:nth-of-type(2) > ol.arabic:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "otherwise, a reference to that value is bound in the local namespace,\nusing the name in the ",
        "as",
        " clause if it is present,\notherwise using the attribute name"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7716,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Examples:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(6)",
      "text": [
        "Examples:"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 265,
        "top": 7754,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"kn\">import</span> <span class=\"nn\">foo</span>                 <span class=\"c\"># foo imported and bound locally</span>\n<span class=\"kn\">import</span> <span class=\"nn\">foo.bar.baz</span>         <span class=\"c\"># foo.bar.baz imported, foo bound locally</span>\n<span class=\"kn\">import</span> <span class=\"nn\">foo.bar.baz</span> <span class=\"k\">as</span> <span class=\"nn\">fbb</span>  <span class=\"c\"># foo.bar.baz imported and bound as fbb</span>\n<span class=\"kn\">from</span> <span class=\"nn\">foo.bar</span> <span class=\"k\">import</span> <span class=\"n\">baz</span>    <span class=\"c\"># foo.bar.baz imported and bound as baz</span>\n<span class=\"kn\">from</span> <span class=\"nn\">foo</span> <span class=\"k\">import</span> <span class=\"n\">attr</span>       <span class=\"c\"># foo imported and foo.attr bound as attr</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "import",
        "foo",
        "# foo imported and bound locally",
        "import",
        "foo.bar.baz",
        "# foo.bar.baz imported, foo bound locally",
        "import",
        "foo.bar.baz",
        "as",
        "fbb",
        "# foo.bar.baz imported and bound as fbb",
        "from",
        "foo.bar",
        "import",
        "baz",
        "# foo.bar.baz imported and bound as baz",
        "from",
        "foo",
        "import",
        "attr",
        "# foo imported and foo.attr bound as attr"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7872,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "If the list of identifiers is replaced by a star (<tt class=\"docutils literal\"><span class=\"pre\">'*'</span></tt>), all public\nnames defined in the module are bound in the local namespace for the scope\nwhere the <a class=\"reference internal\" href=\"#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement occurs.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(7)",
      "text": [
        "If the list of identifiers is replaced by a star (",
        "'*'",
        "), all public\nnames defined in the module are bound in the local namespace for the scope\nwhere the ",
        "import",
        " statement occurs."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 7910,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-36:nth-of-type(8)",
      "html": "The <em>public names</em> defined by a module are determined by checking the module’s\nnamespace for a variable named <tt class=\"docutils literal\"><span class=\"pre\">__all__</span></tt>; if defined, it must be a sequence\nof strings which are names defined or imported by that module.  The names\ngiven in <tt class=\"docutils literal\"><span class=\"pre\">__all__</span></tt> are all considered public and are required to exist.  If\n<tt class=\"docutils literal\"><span class=\"pre\">__all__</span></tt> is not defined, the set of public names includes all names found\nin the module’s namespace which do not begin with an underscore character\n(<tt class=\"docutils literal\"><span class=\"pre\">'_'</span></tt>).  <tt class=\"docutils literal\"><span class=\"pre\">__all__</span></tt> should contain the entire public API. It is intended\nto avoid accidentally exporting items that are not part of the API (such as\nlibrary modules which were imported and used within the module).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p#index-36:nth-of-type(8)",
      "text": [
        "The ",
        "public names",
        " defined by a module are determined by checking the module’s\nnamespace for a variable named ",
        "__all__",
        "; if defined, it must be a sequence\nof strings which are names defined or imported by that module.  The names\ngiven in ",
        "__all__",
        " are all considered public and are required to exist.  If\n",
        "__all__",
        " is not defined, the set of public names includes all names found\nin the module’s namespace which do not begin with an underscore character\n(",
        "'_'",
        ").  ",
        "__all__",
        " should contain the entire public API. It is intended\nto avoid accidentally exporting items that are not part of the API (such as\nlibrary modules which were imported and used within the module)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8014,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "The <a class=\"reference internal\" href=\"#from\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">from</span></tt></a> form with <tt class=\"docutils literal\"><span class=\"pre\">*</span></tt> may only occur in a module scope.  The wild\ncard form of import — <tt class=\"docutils literal\"><span class=\"pre\">import</span> <span class=\"pre\">*</span></tt> — is only allowed at the module level.\nAttempting to use it in class or function definitions will raise a\n<a class=\"reference internal\" href=\"../library/exceptions.html#SyntaxError\" title=\"SyntaxError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">SyntaxError</span></tt></a>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(9)",
      "text": [
        "The ",
        "from",
        " form with ",
        "*",
        " may only occur in a module scope.  The wild\ncard form of import — ",
        "import",
        "*",
        " — is only allowed at the module level.\nAttempting to use it in class or function definitions will raise a\n",
        "SyntaxError",
        "."
      ]
    },
    {
      "bound": {
        "height": 132,
        "left": 265,
        "top": 8074,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-37:nth-of-type(10)",
      "html": "When specifying what module to import you do not have to specify the absolute\nname of the module. When a module or package is contained within another\npackage it is possible to make a relative import within the same top package\nwithout having to mention the package name. By using leading dots in the\nspecified module or package after <a class=\"reference internal\" href=\"#from\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">from</span></tt></a> you can specify how high to\ntraverse up the current package hierarchy without specifying exact names. One\nleading dot means the current package where the module making the import\nexists. Two dots means up one package level. Three dots is up two levels, etc.\nSo if you execute <tt class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">.</span> <span class=\"pre\">import</span> <span class=\"pre\">mod</span></tt> from a module in the <tt class=\"docutils literal\"><span class=\"pre\">pkg</span></tt> package\nthen you will end up importing <tt class=\"docutils literal\"><span class=\"pre\">pkg.mod</span></tt>. If you execute <tt class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">..subpkg2</span>\n<span class=\"pre\">import</span> <span class=\"pre\">mod</span></tt> from within <tt class=\"docutils literal\"><span class=\"pre\">pkg.subpkg1</span></tt> you will import <tt class=\"docutils literal\"><span class=\"pre\">pkg.subpkg2.mod</span></tt>.\nThe specification for relative imports is contained within <span class=\"target\" id=\"index-38\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0328\"><strong>PEP 328</strong></a>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p#index-37:nth-of-type(10)",
      "text": [
        "When specifying what module to import you do not have to specify the absolute\nname of the module. When a module or package is contained within another\npackage it is possible to make a relative import within the same top package\nwithout having to mention the package name. By using leading dots in the\nspecified module or package after ",
        "from",
        " you can specify how high to\ntraverse up the current package hierarchy without specifying exact names. One\nleading dot means the current package where the module making the import\nexists. Two dots means up one package level. Three dots is up two levels, etc.\nSo if you execute ",
        "from",
        ".",
        "import",
        "mod",
        " from a module in the ",
        "pkg",
        " package\nthen you will end up importing ",
        "pkg.mod",
        ". If you execute ",
        "from",
        "..subpkg2",
        "import",
        "mod",
        " from within ",
        "pkg.subpkg1",
        " you will import ",
        "pkg.subpkg2.mod",
        ".\nThe specification for relative imports is contained within ",
        "PEP 328",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8222,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "<a class=\"reference internal\" href=\"../library/importlib.html#importlib.import_module\" title=\"importlib.import_module\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">importlib.import_module()</span></tt></a> is provided to support applications that\ndetermine which modules need to be loaded dynamically.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > p:nth-of-type(11)",
      "text": [
        "importlib.import_module()",
        " is provided to support applications that\ndetermine which modules need to be loaded dynamically."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 8260,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "7.11.1. Future statements<a class=\"headerlink\" href=\"#future-statements\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > h3:nth-of-type(1)",
      "text": [
        "7.11.1. Future statements",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 8315,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-39:nth-of-type(1)",
      "html": "A <em class=\"dfn\">future statement</em> is a directive to the compiler that a particular\nmodule should be compiled using syntax or semantics that will be available in a\nspecified future release of Python.  The future statement is intended to ease\nmigration to future versions of Python that introduce incompatible changes to\nthe language.  It allows use of the new features on a per-module basis before\nthe release in which the feature becomes standard.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p#index-39:nth-of-type(1)",
      "text": [
        "A ",
        "future statement",
        " is a directive to the compiler that a particular\nmodule should be compiled using syntax or semantics that will be available in a\nspecified future release of Python.  The future statement is intended to ease\nmigration to future versions of Python that introduce incompatible changes to\nthe language.  It allows use of the new features on a per-module basis before\nthe release in which the feature becomes standard."
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 265,
        "top": 8397,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-future_statement\">future_statement</strong> ::=  \"from\" \"__future__\" \"import\" feature [\"as\" name]\n                      (\",\" feature [\"as\" name])*\n                      | \"from\" \"__future__\" \"import\" \"(\" feature [\"as\" name]\n                      (\",\" feature [\"as\" name])* [\",\"] \")\"\n<strong id=\"grammar-token-feature\">feature         </strong> ::=  identifier\n<strong id=\"id1\">name            </strong> ::=  identifier\n",
      "path": "div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > pre:nth-of-type(1)",
      "text": [
        "future_statement",
        " ::=  \"from\" \"__future__\" \"import\" feature [\"as\" name]\n                      (\",\" feature [\"as\" name])*\n                      | \"from\" \"__future__\" \"import\" \"(\" feature [\"as\" name]\n                      (\",\" feature [\"as\" name])* [\",\"] \")\"\n",
        "feature         ",
        " ::=  identifier\n",
        "name            ",
        " ::=  identifier\n"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8533,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A future statement must appear near the top of the module.  The only lines that\ncan appear before a future statement are:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "A future statement must appear near the top of the module.  The only lines that\ncan appear before a future statement are:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 8571,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "the module docstring (if any),",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "the module docstring (if any),"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 8591,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "comments,",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "comments,"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 8611,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "blank lines, and",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "blank lines, and"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 8631,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "other future statements.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "other future statements."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8667,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The features recognized by Python 3.0 are <tt class=\"docutils literal\"><span class=\"pre\">absolute_import</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">division</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">generators</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">unicode_literals</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">print_function</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">nested_scopes</span></tt> and\n<tt class=\"docutils literal\"><span class=\"pre\">with_statement</span></tt>.  They are all redundant because they are always enabled, and\nonly kept for backwards compatibility.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(3)",
      "text": [
        "The features recognized by Python 3.0 are ",
        "absolute_import",
        ", ",
        "division",
        ",\n",
        "generators",
        ", ",
        "unicode_literals",
        ", ",
        "print_function",
        ", ",
        "nested_scopes",
        " and\n",
        "with_statement",
        ".  They are all redundant because they are always enabled, and\nonly kept for backwards compatibility."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 8727,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "A future statement is recognized and treated specially at compile time: Changes\nto the semantics of core constructs are often implemented by generating\ndifferent code.  It may even be the case that a new feature introduces new\nincompatible syntax (such as a new reserved word), in which case the compiler\nmay need to parse the module differently.  Such decisions cannot be pushed off\nuntil runtime.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(4)",
      "text": [
        "A future statement is recognized and treated specially at compile time: Changes\nto the semantics of core constructs are often implemented by generating\ndifferent code.  It may even be the case that a new feature introduces new\nincompatible syntax (such as a new reserved word), in which case the compiler\nmay need to parse the module differently.  Such decisions cannot be pushed off\nuntil runtime."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8809,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "For any given release, the compiler knows which feature names have been defined,\nand raises a compile-time error if a future statement contains a feature not\nknown to it.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(5)",
      "text": [
        "For any given release, the compiler knows which feature names have been defined,\nand raises a compile-time error if a future statement contains a feature not\nknown to it."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8847,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The direct runtime semantics are the same as for any import statement: there is\na standard module <a class=\"reference internal\" href=\"../library/__future__.html#module-__future__\" title=\"__future__: Future statement definitions\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">__future__</span></tt></a>, described later, and it will be imported in\nthe usual way at the time the future statement is executed.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(6)",
      "text": [
        "The direct runtime semantics are the same as for any import statement: there is\na standard module ",
        "__future__",
        ", described later, and it will be imported in\nthe usual way at the time the future statement is executed."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8907,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "The interesting runtime semantics depend on the specific feature enabled by the\nfuture statement.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(7)",
      "text": [
        "The interesting runtime semantics depend on the specific feature enabled by the\nfuture statement."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8945,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "Note that there is nothing special about the statement:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(8)",
      "text": [
        "Note that there is nothing special about the statement:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 8983,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"kn\">import</span> <span class=\"nn\">__future__</span> <span class=\"p\">[</span><span class=\"k\">as</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "import",
        "__future__",
        "[",
        "as",
        "name",
        "]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9029,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "That is not a future statement; it’s an ordinary import statement with no\nspecial semantics or syntax restrictions.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(9)",
      "text": [
        "That is not a future statement; it’s an ordinary import statement with no\nspecial semantics or syntax restrictions."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 9067,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "Code compiled by calls to the built-in functions <a class=\"reference internal\" href=\"../library/functions.html#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a> and <a class=\"reference internal\" href=\"../library/functions.html#compile\" title=\"compile\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></tt></a>\nthat occur in a module <tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">M</span></tt> containing a future statement will, by default,\nuse the new syntax or semantics associated with the future statement.  This can\nbe controlled by optional arguments to <a class=\"reference internal\" href=\"../library/functions.html#compile\" title=\"compile\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></tt></a> — see the documentation\nof that function for details.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(10)",
      "text": [
        "Code compiled by calls to the built-in functions ",
        "exec()",
        " and ",
        "compile()",
        "\nthat occur in a module ",
        "M",
        " containing a future statement will, by default,\nuse the new syntax or semantics associated with the future statement.  This can\nbe controlled by optional arguments to ",
        "compile()",
        " — see the documentation\nof that function for details."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 9127,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "A future statement typed at an interactive interpreter prompt will take effect\nfor the rest of the interpreter session.  If an interpreter is started with the\n<a class=\"reference internal\" href=\"../using/cmdline.html#cmdoption-i\"><em class=\"xref std std-option\">-i</em></a> option, is passed a script name to execute, and the script includes\na future statement, it will be in effect in the interactive session started\nafter the script is executed.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > p:nth-of-type(11)",
      "text": [
        "A future statement typed at an interactive interpreter prompt will take effect\nfor the rest of the interpreter session.  If an interpreter is started with the\n",
        "-i",
        " option, is passed a script name to execute, and the script includes\na future statement, it will be in effect in the interactive session started\nafter the script is executed."
      ]
    },
    {
      "bound": {
        "height": 106,
        "left": 265,
        "top": 9187,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(2)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><span class=\"target\" id=\"index-40\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0236\"><strong>PEP 236</strong></a> - Back to the __future__</dt>\n<dd>The original proposal for the __future__ mechanism.</dd>\n</dl>\n",
      "path": "div > div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > div.admonition.admonition-see-also.seealso:nth-of-type(2)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 9233,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "<span class=\"target\" id=\"index-40\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0236\"><strong>PEP 236</strong></a> - Back to the __future__",
      "path": "div > div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > div.admonition.admonition-see-also.seealso:nth-of-type(2) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "PEP 236",
        " - Back to the __future__"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 9255,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(1)",
      "html": "The original proposal for the __future__ mechanism.",
      "path": "div > div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-import-statement.section:nth-of-type(11) > div#future-statements.section:nth-of-type(2) > div.admonition.admonition-see-also.seealso:nth-of-type(2) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(1)",
      "text": [
        "The original proposal for the __future__ mechanism."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 9303,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.12. The <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement<a class=\"headerlink\" href=\"#the-global-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-global-statement.section:nth-of-type(12) > h2:nth-of-type(1)",
      "text": [
        "7.12. The ",
        "global",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 9365,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-41:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-global_stmt\">global_stmt</strong> ::=  \"global\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> (\",\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>)*\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-global-statement.section:nth-of-type(12) > pre#index-41:nth-of-type(1)",
      "text": [
        "global_stmt",
        " ::=  \"global\" ",
        "identifier",
        " (\",\" ",
        "identifier",
        ")*\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 9411,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement is a declaration which holds for the entire\ncurrent code block.  It means that the listed identifiers are to be interpreted\nas globals.  It would be impossible to assign to a global variable without\n<a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a>, although free variables may refer to globals without being\ndeclared global.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-global-statement.section:nth-of-type(12) > p:nth-of-type(1)",
      "text": [
        "The ",
        "global",
        " statement is a declaration which holds for the entire\ncurrent code block.  It means that the listed identifiers are to be interpreted\nas globals.  It would be impossible to assign to a global variable without\n",
        "global",
        ", although free variables may refer to globals without being\ndeclared global."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9471,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Names listed in a <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement must not be used in the same code\nblock textually preceding that <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-global-statement.section:nth-of-type(12) > p:nth-of-type(2)",
      "text": [
        "Names listed in a ",
        "global",
        " statement must not be used in the same code\nblock textually preceding that ",
        "global",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9509,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Names listed in a <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement must not be defined as formal\nparameters or in a <a class=\"reference internal\" href=\"compound_stmts.html#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> loop control target, <a class=\"reference internal\" href=\"compound_stmts.html#class\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">class</span></tt></a>\ndefinition, function definition, or <a class=\"reference internal\" href=\"#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-global-statement.section:nth-of-type(12) > p:nth-of-type(3)",
      "text": [
        "Names listed in a ",
        "global",
        " statement must not be defined as formal\nparameters or in a ",
        "for",
        " loop control target, ",
        "class",
        "\ndefinition, function definition, or ",
        "import",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 273,
        "top": 9555,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<strong>CPython implementation detail:</strong> The current implementation does not enforce the latter two restrictions, but\nprograms should not abuse this freedom, as future implementations may enforce\nthem or silently change the meaning of the program.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-global-statement.section:nth-of-type(12) > div.compound.impl-detail:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "CPython implementation detail:",
        " The current implementation does not enforce the latter two restrictions, but\nprograms should not abuse this freedom, as future implementations may enforce\nthem or silently change the meaning of the program."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 9623,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-42:nth-of-type(4)",
      "html": "<strong>Programmer’s note:</strong> the <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> is a directive to the parser.  It\napplies only to code parsed at the same time as the <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement.\nIn particular, a <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement contained in a string or code\nobject supplied to the built-in <a class=\"reference internal\" href=\"../library/functions.html#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a> function does not affect the code\nblock <em>containing</em> the function call, and code contained in such a string is\nunaffected by <a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statements in the code containing the function\ncall.  The same applies to the <a class=\"reference internal\" href=\"../library/functions.html#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a> and <a class=\"reference internal\" href=\"../library/functions.html#compile\" title=\"compile\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></tt></a> functions.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-global-statement.section:nth-of-type(12) > p#index-42:nth-of-type(4)",
      "text": [
        "Programmer’s note:",
        " the ",
        "global",
        " is a directive to the parser.  It\napplies only to code parsed at the same time as the ",
        "global",
        " statement.\nIn particular, a ",
        "global",
        " statement contained in a string or code\nobject supplied to the built-in ",
        "exec()",
        " function does not affect the code\nblock ",
        "containing",
        " the function call, and code contained in such a string is\nunaffected by ",
        "global",
        " statements in the code containing the function\ncall.  The same applies to the ",
        "eval()",
        " and ",
        "compile()",
        " functions."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 9705,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "7.13. The <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a> statement<a class=\"headerlink\" href=\"#the-nonlocal-statement\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > h2:nth-of-type(1)",
      "text": [
        "7.13. The ",
        "nonlocal",
        " statement",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 9767,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre#index-43:nth-of-type(1)",
      "html": "<strong id=\"grammar-token-nonlocal_stmt\">nonlocal_stmt</strong> ::=  \"nonlocal\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a> (\",\" <a class=\"reference internal\" href=\"lexical_analysis.html#grammar-token-identifier\"><tt class=\"xref docutils literal\"><span class=\"pre\">identifier</span></tt></a>)*\n",
      "path": "div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > pre#index-43:nth-of-type(1)",
      "text": [
        "nonlocal_stmt",
        " ::=  \"nonlocal\" ",
        "identifier",
        " (\",\" ",
        "identifier",
        ")*\n"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 9813,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a> statement causes the listed identifiers to refer to\npreviously bound variables in the nearest enclosing scope.  This is important\nbecause the default behavior for binding is to search the local namespace\nfirst.  The statement allows encapsulated code to rebind variables outside of\nthe local scope besides the global (module) scope.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > p:nth-of-type(1)",
      "text": [
        "The ",
        "nonlocal",
        " statement causes the listed identifiers to refer to\npreviously bound variables in the nearest enclosing scope.  This is important\nbecause the default behavior for binding is to search the local namespace\nfirst.  The statement allows encapsulated code to rebind variables outside of\nthe local scope besides the global (module) scope."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 9873,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Names listed in a <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a> statement, unlike to those listed in a\n<a class=\"reference internal\" href=\"#global\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">global</span></tt></a> statement, must refer to pre-existing bindings in an\nenclosing scope (the scope in which a new binding should be created cannot\nbe determined unambiguously).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > p:nth-of-type(2)",
      "text": [
        "Names listed in a ",
        "nonlocal",
        " statement, unlike to those listed in a\n",
        "global",
        " statement, must refer to pre-existing bindings in an\nenclosing scope (the scope in which a new binding should be created cannot\nbe determined unambiguously)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9933,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Names listed in a <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a> statement must not collide with\npre-existing bindings in the local scope.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > p:nth-of-type(3)",
      "text": [
        "Names listed in a ",
        "nonlocal",
        " statement must not collide with\npre-existing bindings in the local scope."
      ]
    },
    {
      "bound": {
        "height": 106,
        "left": 265,
        "top": 9971,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><span class=\"target\" id=\"index-44\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3104\"><strong>PEP 3104</strong></a> - Access to Names in Outer Scopes</dt>\n<dd>The specification for the <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a> statement.</dd>\n</dl>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 10017,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "<span class=\"target\" id=\"index-44\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3104\"><strong>PEP 3104</strong></a> - Access to Names in Outer Scopes",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "PEP 3104",
        " - Access to Names in Outer Scopes"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 10039,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(1)",
      "html": "The specification for the <a class=\"reference internal\" href=\"#nonlocal\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">nonlocal</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#simple-statements.section:nth-of-type(1) > div#the-nonlocal-statement.section:nth-of-type(13) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(1)",
      "text": [
        "The specification for the ",
        "nonlocal",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 82,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "<a href=\"../contents.html\">Table Of Contents</a>",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Table Of Contents"
      ]
    },
    {
      "bound": {
        "height": 492,
        "left": 36,
        "top": 108,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#\">7. Simple statements</a><ul>\n<li><a class=\"reference internal\" href=\"#expression-statements\">7.1. Expression statements</a></li>\n<li><a class=\"reference internal\" href=\"#assignment-statements\">7.2. Assignment statements</a><ul>\n<li><a class=\"reference internal\" href=\"#augmented-assignment-statements\">7.2.1. Augmented assignment statements</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#the-assert-statement\">7.3. The <tt class=\"docutils literal\"><span class=\"pre\">assert</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-pass-statement\">7.4. The <tt class=\"docutils literal\"><span class=\"pre\">pass</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-del-statement\">7.5. The <tt class=\"docutils literal\"><span class=\"pre\">del</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-return-statement\">7.6. The <tt class=\"docutils literal\"><span class=\"pre\">return</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-yield-statement\">7.7. The <tt class=\"docutils literal\"><span class=\"pre\">yield</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-raise-statement\">7.8. The <tt class=\"docutils literal\"><span class=\"pre\">raise</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-break-statement\">7.9. The <tt class=\"docutils literal\"><span class=\"pre\">break</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-continue-statement\">7.10. The <tt class=\"docutils literal\"><span class=\"pre\">continue</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-import-statement\">7.11. The <tt class=\"docutils literal\"><span class=\"pre\">import</span></tt> statement</a><ul>\n<li><a class=\"reference internal\" href=\"#future-statements\">7.11.1. Future statements</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#the-global-statement\">7.12. The <tt class=\"docutils literal\"><span class=\"pre\">global</span></tt> statement</a></li>\n<li><a class=\"reference internal\" href=\"#the-nonlocal-statement\">7.13. The <tt class=\"docutils literal\"><span class=\"pre\">nonlocal</span></tt> statement</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "7. Simple statements"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 124,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#expression-statements\">7.1. Expression statements</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "7.1. Expression statements"
      ]
    },
    {
      "bound": {
        "height": 80,
        "left": 56,
        "top": 161,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#assignment-statements\">7.2. Assignment statements</a><ul>\n<li><a class=\"reference internal\" href=\"#augmented-assignment-statements\">7.2.1. Augmented assignment statements</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "7.2. Assignment statements"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 76,
        "top": 193,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#augmented-assignment-statements\">7.2.1. Augmented assignment statements</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(2) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "7.2.1. Augmented assignment statements"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 246,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#the-assert-statement\">7.3. The <tt class=\"docutils literal\"><span class=\"pre\">assert</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "7.3. The ",
        "assert",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 283,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#the-pass-statement\">7.4. The <tt class=\"docutils literal\"><span class=\"pre\">pass</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "7.4. The ",
        "pass",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 304,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#the-del-statement\">7.5. The <tt class=\"docutils literal\"><span class=\"pre\">del</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "7.5. The ",
        "del",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 325,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(6)",
      "html": "<a class=\"reference internal\" href=\"#the-return-statement\">7.6. The <tt class=\"docutils literal\"><span class=\"pre\">return</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6)",
      "text": [
        "7.6. The ",
        "return",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 362,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(7)",
      "html": "<a class=\"reference internal\" href=\"#the-yield-statement\">7.7. The <tt class=\"docutils literal\"><span class=\"pre\">yield</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(7)",
      "text": [
        "7.7. The ",
        "yield",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 383,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(8)",
      "html": "<a class=\"reference internal\" href=\"#the-raise-statement\">7.8. The <tt class=\"docutils literal\"><span class=\"pre\">raise</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(8)",
      "text": [
        "7.8. The ",
        "raise",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 404,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(9)",
      "html": "<a class=\"reference internal\" href=\"#the-break-statement\">7.9. The <tt class=\"docutils literal\"><span class=\"pre\">break</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(9)",
      "text": [
        "7.9. The ",
        "break",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 425,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(10)",
      "html": "<a class=\"reference internal\" href=\"#the-continue-statement\">7.10. The <tt class=\"docutils literal\"><span class=\"pre\">continue</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(10)",
      "text": [
        "7.10. The ",
        "continue",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 64,
        "left": 56,
        "top": 462,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(11)",
      "html": "<a class=\"reference internal\" href=\"#the-import-statement\">7.11. The <tt class=\"docutils literal\"><span class=\"pre\">import</span></tt> statement</a><ul>\n<li><a class=\"reference internal\" href=\"#future-statements\">7.11.1. Future statements</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(11)",
      "text": [
        "7.11. The ",
        "import",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 494,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#future-statements\">7.11.1. Future statements</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(11) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "7.11.1. Future statements"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 531,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(12)",
      "html": "<a class=\"reference internal\" href=\"#the-global-statement\">7.12. The <tt class=\"docutils literal\"><span class=\"pre\">global</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12)",
      "text": [
        "7.12. The ",
        "global",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 568,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(13)",
      "html": "<a class=\"reference internal\" href=\"#the-nonlocal-statement\">7.13. The <tt class=\"docutils literal\"><span class=\"pre\">nonlocal</span></tt> statement</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(13)",
      "text": [
        "7.13. The ",
        "nonlocal",
        " statement"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 626,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(1)",
      "html": "Previous topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(1)",
      "text": [
        "Previous topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 647,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(1)",
      "html": "<a href=\"expressions.html\" title=\"previous chapter\">6. Expressions</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(1)",
      "text": [
        "6. Expressions"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 689,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(2)",
      "html": "Next topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(2)",
      "text": [
        "Next topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 710,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(2)",
      "html": "<a href=\"compound_stmts.html\" title=\"next chapter\">8. Compound statements</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(2)",
      "text": [
        "8. Compound statements"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 754,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(2)",
      "html": "This Page",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(2)",
      "text": [
        "This Page"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 780,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a href=\"../bugs.html\">Report a Bug</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "Report a Bug"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 796,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a href=\"../_sources/reference/simple_stmts.txt\" rel=\"nofollow\">Show Source</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "Show Source"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 840,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "Quick search",
      "path": "div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Quick search"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 26,
        "top": 903,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "12px",
        "line-height": "16px",
        "margin-bottom": "12px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "12px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.searchtip:nth-of-type(1)",
      "html": "\n    Enter search terms or a module, class or function name.\n    ",
      "path": "div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > p.searchtip:nth-of-type(1)",
      "text": [
        "\n    Enter search terms or a module, class or function name.\n    "
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 235,
        "top": 1990,
        "width": 9
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "cursor": "pointer",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "position": "fixed"
      },
      "element": "span:nth-of-type(1)",
      "html": "«",
      "path": "div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div#sidebarbutton:nth-of-type(2) > span:nth-of-type(1)",
      "text": [
        "«"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 10102,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 10102,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 10102,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"compound_stmts.html\" title=\"8. Compound statements\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 10102,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"expressions.html\" title=\"6. Expressions\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 10102,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"compound_stmts.html\" title=\"8. Compound statements\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"expressions.html\" title=\"6. Expressions\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Language Reference</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Language Reference",
        " »"
      ]
    },
    {
      "bound": {
        "height": 90,
        "left": 16,
        "top": 10132,
        "width": 1558
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(85, 85, 85)",
        "border-left-color": "rgb(85, 85, 85)",
        "border-right-color": "rgb(85, 85, 85)",
        "border-top-color": "rgb(85, 85, 85)",
        "color": "rgb(85, 85, 85)",
        "font-size": "12px",
        "line-height": "18px",
        "margin-left": "0px",
        "margin-right": "10px",
        "margin-top": "-24px",
        "outline-color": "rgb(85, 85, 85)",
        "padding-bottom": "9px",
        "padding-top": "9px",
        "text-align": "right"
      },
      "element": "div.footer:nth-of-type(4)",
      "html": "\n    © <a href=\"../copyright.html\">Copyright</a> 1990-2013, Python Software Foundation.\n    <br>\n    The Python Software Foundation is a non-profit corporation.\n    <a href=\"http://www.python.org/psf/donations/\">Please donate.</a>\n    <br>\n    Last updated on Aug 14, 2013.\n    <a href=\"../bugs.html\">Found a bug</a>?\n    <br>\n    Created using <a href=\"http://sphinx.pocoo.org/\">Sphinx</a> 1.0.7.\n    ",
      "path": "div",
      "selector": "div.footer:nth-of-type(4)",
      "text": [
        "\n    © ",
        "Copyright",
        " 1990-2013, Python Software Foundation.\n    ",
        "\n    The Python Software Foundation is a non-profit corporation.\n    ",
        "Please donate.",
        "\n    Last updated on Aug 14, 2013.\n    ",
        "Found a bug",
        "?\n    ",
        "\n    Created using ",
        "Sphinx",
        " 1.0.7.\n    "
      ]
    }
  ],
  "images": [
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 21,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 10109,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    }
  ]
}
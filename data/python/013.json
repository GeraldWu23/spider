{
  "body": {
    "bound": {
      "height": 42969,
      "left": 16,
      "top": 7,
      "width": 1568
    },
    "computed": {
      "alignment-baseline": "auto",
      "background-attachment": "scroll",
      "background-clip": "border-box",
      "background-color": "rgb(255, 255, 255)",
      "background-image": "none",
      "background-origin": "padding-box",
      "background-position": "0% 0%",
      "background-repeat": "repeat",
      "background-size": "auto auto",
      "baseline-shift": "baseline",
      "border-bottom-color": "rgb(0, 0, 0)",
      "border-bottom-left-radius": "0px",
      "border-bottom-right-radius": "0px",
      "border-bottom-style": "none",
      "border-bottom-width": "0px",
      "border-collapse": "separate",
      "border-left-color": "rgb(0, 0, 0)",
      "border-left-style": "none",
      "border-left-width": "0px",
      "border-right-color": "rgb(0, 0, 0)",
      "border-right-style": "none",
      "border-right-width": "0px",
      "border-top-color": "rgb(0, 0, 0)",
      "border-top-left-radius": "0px",
      "border-top-right-radius": "0px",
      "border-top-style": "none",
      "border-top-width": "0px",
      "bottom": "auto",
      "box-shadow": "none",
      "box-sizing": "content-box",
      "caption-side": "top",
      "clear": "none",
      "clip": "auto",
      "clip-path": "none",
      "clip-rule": "nonzero",
      "color": "rgb(0, 0, 0)",
      "color-interpolation": "srgb",
      "color-interpolation-filters": "linearrgb",
      "color-rendering": "auto",
      "cursor": "auto",
      "direction": "ltr",
      "display": "block",
      "dominant-baseline": "auto",
      "empty-cells": "show",
      "fill": "#000000",
      "fill-opacity": "1",
      "fill-rule": "nonzero",
      "filter": "none",
      "float": "none",
      "flood-color": "rgb(0, 0, 0)",
      "flood-opacity": "1",
      "font-family": "'Lucida Grande', Arial, sans-serif",
      "font-size": "16px",
      "font-style": "normal",
      "font-variant": "normal",
      "font-weight": "normal",
      "glyph-orientation-horizontal": "0deg",
      "glyph-orientation-vertical": "auto",
      "height": "42969px",
      "image-rendering": "auto",
      "kerning": "0",
      "left": "auto",
      "letter-spacing": "normal",
      "lighting-color": "rgb(255, 255, 255)",
      "line-height": "normal",
      "list-style-image": "none",
      "list-style-position": "outside",
      "list-style-type": "disc",
      "margin-bottom": "0px",
      "margin-left": "16px",
      "margin-right": "16px",
      "margin-top": "0px",
      "marker-end": "none",
      "marker-mid": "none",
      "marker-start": "none",
      "mask": "none",
      "max-height": "none",
      "max-width": "none",
      "min-height": "0px",
      "min-width": "0px",
      "opacity": "1",
      "orphans": "2",
      "outline-color": "rgb(0, 0, 0)",
      "outline-style": "none",
      "outline-width": "0px",
      "overflow-x": "visible",
      "overflow-y": "visible",
      "padding-bottom": "0px",
      "padding-left": "0px",
      "padding-right": "0px",
      "padding-top": "0px",
      "page-break-after": "auto",
      "page-break-before": "auto",
      "page-break-inside": "auto",
      "pointer-events": "auto",
      "position": "static",
      "resize": "none",
      "right": "auto",
      "shape-rendering": "auto",
      "speak": "normal",
      "stop-color": "rgb(0, 0, 0)",
      "stop-opacity": "1",
      "stroke": "none",
      "stroke-dasharray": "none",
      "stroke-dashoffset": "0",
      "stroke-linecap": "butt",
      "stroke-linejoin": "miter",
      "stroke-miterlimit": "4",
      "stroke-opacity": "1",
      "stroke-width": "1",
      "table-layout": "auto",
      "text-align": "-webkit-auto",
      "text-anchor": "start",
      "text-decoration": "none",
      "text-indent": "0px",
      "text-overflow": "clip",
      "text-rendering": "auto",
      "text-shadow": "none",
      "text-transform": "none",
      "top": "auto",
      "unicode-bidi": "normal",
      "vector-effect": "none",
      "vertical-align": "baseline",
      "visibility": "visible",
      "white-space": "normal",
      "widows": "2",
      "width": "1568px",
      "word-break": "normal",
      "word-spacing": "0px",
      "word-wrap": "normal",
      "writing-mode": "lr-tb",
      "z-index": "auto",
      "zoom": "1"
    },
    "scroll": {
      "left": 0,
      "top": 0
    }
  },
  "descriptions": [],
  "titles": [
    "4. Built-in Types — Python v3.3.2 documentation"
  ],
  "url": "http://docs.python.org/3.3/library/stdtypes.html",
  "links": [
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/exceptions.html",
    "http://docs.python.org/3.3/library/constants.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/library/stdtypes.html#built-in-types",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/functions.html#print",
    "http://docs.python.org/3.3/library/stdtypes.html#truth-value-testing",
    "http://docs.python.org/3.3/reference/compound_stmts.html#if",
    "http://docs.python.org/3.3/reference/compound_stmts.html#while",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__bool__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__len__",
    "http://docs.python.org/3.3/library/functions.html#bool",
    "http://docs.python.org/3.3/library/stdtypes.html#id10",
    "http://docs.python.org/3.3/reference/expressions.html#and",
    "http://docs.python.org/3.3/reference/expressions.html#or",
    "http://docs.python.org/3.3/reference/expressions.html#not",
    "http://docs.python.org/3.3/library/stdtypes.html#boolean-operations-and-or-not",
    "http://docs.python.org/3.3/library/constants.html#False",
    "http://docs.python.org/3.3/library/constants.html#True",
    "http://docs.python.org/3.3/library/stdtypes.html#comparisons",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__eq__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__lt__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__le__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__gt__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__ge__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__lt__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__eq__",
    "http://docs.python.org/3.3/reference/expressions.html#is",
    "http://docs.python.org/3.3/reference/expressions.html#is-not",
    "http://docs.python.org/3.3/reference/expressions.html#in",
    "http://docs.python.org/3.3/reference/expressions.html#not-in",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/functions.html#complex",
    "http://docs.python.org/3.3/library/stdtypes.html#numeric-types-int-float-complex",
    "http://docs.python.org/3.3/library/sys.html#sys.float_info",
    "http://docs.python.org/3.3/library/fractions.html#module-fractions",
    "http://docs.python.org/3.3/library/decimal.html#module-decimal",
    "http://docs.python.org/3.3/library/stdtypes.html#id11",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/functions.html#complex",
    "http://docs.python.org/3.3/library/functions.html#abs",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/functions.html#complex",
    "http://docs.python.org/3.3/library/functions.html#divmod",
    "http://docs.python.org/3.3/library/functions.html#pow",
    "http://docs.python.org/3.3/library/functions.html#abs",
    "http://docs.python.org/3.3/library/math.html#module-math",
    "http://www.unicode.org/Public/6.0.0/ucd/extracted/DerivedNumericType.txt",
    "http://docs.python.org/3.3/library/numbers.html#numbers.Real",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/math.html#module-math",
    "http://docs.python.org/3.3/library/cmath.html#module-cmath",
    "http://docs.python.org/3.3/library/stdtypes.html#bitwise-operations-on-integer-types",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#additional-methods-on-integer-types",
    "http://docs.python.org/3.3/library/numbers.html#numbers.Integral",
    "http://docs.python.org/3.3/glossary.html#term-abstract-base-class",
    "http://docs.python.org/3.3/library/stdtypes.html#int.bit_length",
    "http://docs.python.org/3.3/library/stdtypes.html#int.to_bytes",
    "http://docs.python.org/3.3/library/exceptions.html#OverflowError",
    "http://docs.python.org/3.3/library/sys.html#sys.byteorder",
    "http://docs.python.org/3.3/library/exceptions.html#OverflowError",
    "http://docs.python.org/3.3/library/stdtypes.html#int.from_bytes",
    "http://docs.python.org/3.3/glossary.html#term-bytes-like-object",
    "http://docs.python.org/3.3/library/sys.html#sys.byteorder",
    "http://docs.python.org/3.3/library/stdtypes.html#additional-methods-on-float",
    "http://docs.python.org/3.3/library/numbers.html#numbers.Real",
    "http://docs.python.org/3.3/glossary.html#term-abstract-base-class",
    "http://docs.python.org/3.3/library/stdtypes.html#float.as_integer_ratio",
    "http://docs.python.org/3.3/library/exceptions.html#OverflowError",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#float.is_integer",
    "http://docs.python.org/3.3/library/stdtypes.html#float.hex",
    "http://docs.python.org/3.3/library/stdtypes.html#float.fromhex",
    "http://docs.python.org/3.3/library/stdtypes.html#float.hex",
    "http://docs.python.org/3.3/library/stdtypes.html#float.fromhex",
    "http://docs.python.org/3.3/library/stdtypes.html#float.hex",
    "http://docs.python.org/3.3/library/stdtypes.html#float.fromhex",
    "http://docs.python.org/3.3/library/stdtypes.html#hashing-of-numeric-types",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__hash__",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/decimal.html#decimal.Decimal",
    "http://docs.python.org/3.3/library/fractions.html#fractions.Fraction",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/decimal.html#decimal.Decimal",
    "http://docs.python.org/3.3/library/sys.html#sys.hash_info",
    "http://docs.python.org/3.3/library/functions.html#complex",
    "http://docs.python.org/3.3/library/functions.html#float",
    "http://docs.python.org/3.3/library/functions.html#complex",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator-types",
    "http://docs.python.org/3.3/library/stdtypes.html#container.__iter__",
    "http://docs.python.org/3.3/c-api/typeobj.html#PyTypeObject.tp_iter",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator.__iter__",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/reference/expressions.html#in",
    "http://docs.python.org/3.3/c-api/typeobj.html#PyTypeObject.tp_iter",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator.__next__",
    "http://docs.python.org/3.3/library/exceptions.html#StopIteration",
    "http://docs.python.org/3.3/c-api/typeobj.html#PyTypeObject.tp_iternext",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator.__next__",
    "http://docs.python.org/3.3/library/exceptions.html#StopIteration",
    "http://docs.python.org/3.3/library/stdtypes.html#generator-types",
    "http://docs.python.org/3.3/glossary.html#term-generator",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__iter__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__iter__",
    "http://docs.python.org/3.3/reference/expressions.html#generator.__next__",
    "http://docs.python.org/3.3/reference/expressions.html#yieldexpr",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/library/stdtypes.html#sequence-types-list-tuple-range",
    "http://docs.python.org/3.3/library/stdtypes.html#binaryseq",
    "http://docs.python.org/3.3/library/stdtypes.html#textseq",
    "http://docs.python.org/3.3/library/stdtypes.html#common-sequence-operations",
    "http://docs.python.org/3.3/library/collections.abc.html#collections.abc.Sequence",
    "http://docs.python.org/3.3/reference/expressions.html#comparisons",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/stdtypes.html#str.join",
    "http://docs.python.org/3.3/library/io.html#io.StringIO",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/io.html#io.BytesIO",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#immutable-sequence-types",
    "http://docs.python.org/3.3/library/functions.html#hash",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/stdtypes.html#mutable-sequence-types",
    "http://docs.python.org/3.3/library/collections.abc.html#collections.abc.MutableSequence",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#lists",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/functions.html#sorted",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-common",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-mutable",
    "http://docs.python.org/3.3/library/stdtypes.html#list.sort",
    "http://docs.python.org/3.3/library/functools.html#functools.cmp_to_key",
    "http://docs.python.org/3.3/library/functions.html#sorted",
    "http://docs.python.org/3.3/library/stdtypes.html#list.sort",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#tuples",
    "http://docs.python.org/3.3/library/functions.html#enumerate",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-common",
    "http://docs.python.org/3.3/library/collections.html#collections.namedtuple",
    "http://docs.python.org/3.3/library/stdtypes.html#ranges",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/reference/compound_stmts.html#for",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/sys.html#sys.maxsize",
    "http://docs.python.org/3.3/library/functions.html#len",
    "http://docs.python.org/3.3/library/exceptions.html#OverflowError",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-common",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/stdtypes.html#range",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq",
    "http://docs.python.org/3.3/library/functions.html#int",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/stdtypes.html#text-sequence-type-str",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#strings",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/stdtypes.html#str.join",
    "http://docs.python.org/3.3/library/io.html#io.StringIO",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/stdtypes.html#textseq",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__str__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__str__",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/glossary.html#term-bytes-like-object",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.decode",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.decode",
    "http://docs.python.org/3.3/library/stdtypes.html#binaryseq",
    "http://docs.python.org/3.3/c-api/buffer.html#bufferobjects",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/using/cmdline.html#cmdoption-b",
    "http://docs.python.org/3.3/library/stdtypes.html#textseq",
    "http://docs.python.org/3.3/library/stdtypes.html#string-methods",
    "http://docs.python.org/3.3/library/string.html#string-formatting",
    "http://docs.python.org/3.3/library/text.html#stringservices",
    "http://docs.python.org/3.3/library/stdtypes.html#string-methods",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-common",
    "http://docs.python.org/3.3/library/stdtypes.html#str.format",
    "http://docs.python.org/3.3/library/string.html#formatstrings",
    "http://docs.python.org/3.3/library/string.html#string-formatting",
    "http://docs.python.org/3.3/library/stdtypes.html#old-string-formatting",
    "http://docs.python.org/3.3/library/text.html#textservices",
    "http://docs.python.org/3.3/library/re.html#module-re",
    "http://docs.python.org/3.3/library/stdtypes.html#str.capitalize",
    "http://docs.python.org/3.3/library/stdtypes.html#str.casefold",
    "http://docs.python.org/3.3/library/stdtypes.html#str.lower",
    "http://docs.python.org/3.3/library/stdtypes.html#str.casefold",
    "http://docs.python.org/3.3/library/stdtypes.html#str.center",
    "http://docs.python.org/3.3/library/stdtypes.html#str.count",
    "http://docs.python.org/3.3/library/stdtypes.html#str.encode",
    "http://docs.python.org/3.3/library/exceptions.html#UnicodeError",
    "http://docs.python.org/3.3/library/codecs.html#codecs.register_error",
    "http://docs.python.org/3.3/library/codecs.html#codec-base-classes",
    "http://docs.python.org/3.3/library/codecs.html#standard-encodings",
    "http://docs.python.org/3.3/library/stdtypes.html#str.endswith",
    "http://docs.python.org/3.3/library/stdtypes.html#str.expandtabs",
    "http://docs.python.org/3.3/library/stdtypes.html#str.find",
    "http://docs.python.org/3.3/library/stdtypes.html#str.find",
    "http://docs.python.org/3.3/reference/expressions.html#in",
    "http://docs.python.org/3.3/library/stdtypes.html#str.format",
    "http://docs.python.org/3.3/library/string.html#formatstrings",
    "http://docs.python.org/3.3/library/stdtypes.html#str.format_map",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#str.index",
    "http://docs.python.org/3.3/library/stdtypes.html#str.find",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isalnum",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isalpha",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isdecimal",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isdigit",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isidentifier",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#identifiers",
    "http://docs.python.org/3.3/library/keyword.html#keyword.iskeyword",
    "http://docs.python.org/3.3/reference/compound_stmts.html#def",
    "http://docs.python.org/3.3/reference/compound_stmts.html#class",
    "http://docs.python.org/3.3/library/stdtypes.html#str.islower",
    "http://docs.python.org/3.3/library/stdtypes.html#id13",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isnumeric",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isprintable",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/sys.html#sys.stdout",
    "http://docs.python.org/3.3/library/sys.html#sys.stderr",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isspace",
    "http://docs.python.org/3.3/library/stdtypes.html#str.istitle",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isupper",
    "http://docs.python.org/3.3/library/stdtypes.html#id13",
    "http://docs.python.org/3.3/library/stdtypes.html#str.join",
    "http://docs.python.org/3.3/glossary.html#term-iterable",
    "http://docs.python.org/3.3/library/exceptions.html#TypeError",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#str.ljust",
    "http://docs.python.org/3.3/library/stdtypes.html#str.lower",
    "http://docs.python.org/3.3/library/stdtypes.html#id13",
    "http://docs.python.org/3.3/library/stdtypes.html#str.lstrip",
    "http://docs.python.org/3.3/library/stdtypes.html#str.maketrans",
    "http://docs.python.org/3.3/library/stdtypes.html#str.translate",
    "http://docs.python.org/3.3/library/stdtypes.html#str.partition",
    "http://docs.python.org/3.3/library/stdtypes.html#str.replace",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rfind",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rindex",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rfind",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rjust",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rpartition",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rsplit",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rsplit",
    "http://docs.python.org/3.3/library/stdtypes.html#str.split",
    "http://docs.python.org/3.3/library/stdtypes.html#str.rstrip",
    "http://docs.python.org/3.3/library/stdtypes.html#str.split",
    "http://docs.python.org/3.3/library/stdtypes.html#str.splitlines",
    "http://docs.python.org/3.3/glossary.html#term-universal-newlines",
    "http://docs.python.org/3.3/library/stdtypes.html#str.split",
    "http://docs.python.org/3.3/library/stdtypes.html#str.startswith",
    "http://docs.python.org/3.3/library/stdtypes.html#str.strip",
    "http://docs.python.org/3.3/library/stdtypes.html#str.swapcase",
    "http://docs.python.org/3.3/library/stdtypes.html#str.title",
    "http://docs.python.org/3.3/library/stdtypes.html#str.translate",
    "http://docs.python.org/3.3/library/stdtypes.html#str.maketrans",
    "http://docs.python.org/3.3/library/codecs.html#module-codecs",
    "http://docs.python.org/3.3/library/stdtypes.html#str.upper",
    "http://docs.python.org/3.3/library/stdtypes.html#id13",
    "http://docs.python.org/3.3/library/stdtypes.html#str.zfill",
    "http://docs.python.org/3.3/library/stdtypes.html#printf-style-string-formatting",
    "http://docs.python.org/3.3/library/stdtypes.html#str.format",
    "http://docs.python.org/3.3/library/stdtypes.html#id14",
    "http://docs.python.org/3.3/library/functions.html#repr",
    "http://docs.python.org/3.3/library/stdtypes.html#str",
    "http://docs.python.org/3.3/library/functions.html#ascii",
    "http://www.python.org/dev/peps/pep-0237",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/library/stdtypes.html#binary-sequence-types-bytes-bytearray-memoryview",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/c-api/buffer.html#bufferobjects",
    "http://docs.python.org/3.3/library/array.html#module-array",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes",
    "http://docs.python.org/3.3/reference/lexical_analysis.html#strings",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/functions.html#func-bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#bytearray-objects",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-mutable",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes-methods",
    "http://docs.python.org/3.3/library/functions.html#func-bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes-and-bytearray-operations",
    "http://docs.python.org/3.3/library/stdtypes.html#typesseq-common",
    "http://docs.python.org/3.3/c-api/buffer.html#bufferobjects",
    "http://docs.python.org/3.3/library/stdtypes.html#str.encode",
    "http://docs.python.org/3.3/library/stdtypes.html#str.format",
    "http://docs.python.org/3.3/library/stdtypes.html#str.format_map",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isidentifier",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isnumeric",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isdecimal",
    "http://docs.python.org/3.3/library/stdtypes.html#str.isprintable",
    "http://docs.python.org/3.3/reference/expressions.html#in",
    "http://docs.python.org/3.3/library/stdtypes.html#str.encode",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.decode",
    "http://docs.python.org/3.3/library/stdtypes.html#bytearray.decode",
    "http://docs.python.org/3.3/library/exceptions.html#UnicodeError",
    "http://docs.python.org/3.3/library/codecs.html#codecs.register_error",
    "http://docs.python.org/3.3/library/codecs.html#codec-base-classes",
    "http://docs.python.org/3.3/library/codecs.html#standard-encodings",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.fromhex",
    "http://docs.python.org/3.3/library/stdtypes.html#bytearray.fromhex",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.translate",
    "http://docs.python.org/3.3/library/stdtypes.html#bytearray.translate",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.maketrans",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.maketrans",
    "http://docs.python.org/3.3/library/stdtypes.html#bytearray.maketrans",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes.translate",
    "http://docs.python.org/3.3/library/stdtypes.html#memory-views",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/c-api/buffer.html#bufferobjects",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/array.html#array.array",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.tolist",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.itemsize",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.format",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.__eq__",
    "http://www.python.org/dev/peps/pep-3118",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.tolist",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.tobytes",
    "http://docs.python.org/3.3/library/functions.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.tobytes",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.tolist",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.tolist",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.release",
    "http://docs.python.org/3.3/library/functions.html#bytearray",
    "http://docs.python.org/3.3/library/exceptions.html#ValueError",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.release",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.cast",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.obj",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.nbytes",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.readonly",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.format",
    "http://docs.python.org/3.3/library/struct.html#module-struct",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.tolist",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.itemsize",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.ndim",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.shape",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.ndim",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.strides",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.ndim",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.suboffsets",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.c_contiguous",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.f_contiguous",
    "http://docs.python.org/3.3/library/stdtypes.html#memoryview.contiguous",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#set-types-set-frozenset",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/collections.html#module-collections",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#set.isdisjoint",
    "http://docs.python.org/3.3/library/stdtypes.html#set.issubset",
    "http://docs.python.org/3.3/library/stdtypes.html#set.issuperset",
    "http://docs.python.org/3.3/library/stdtypes.html#set.union",
    "http://docs.python.org/3.3/library/stdtypes.html#set.intersection",
    "http://docs.python.org/3.3/library/stdtypes.html#set.difference",
    "http://docs.python.org/3.3/library/stdtypes.html#set.symmetric_difference",
    "http://docs.python.org/3.3/library/stdtypes.html#set.copy",
    "http://docs.python.org/3.3/library/stdtypes.html#set.union",
    "http://docs.python.org/3.3/library/stdtypes.html#set.intersection",
    "http://docs.python.org/3.3/library/stdtypes.html#set.difference",
    "http://docs.python.org/3.3/library/stdtypes.html#set.symmetric_difference",
    "http://docs.python.org/3.3/library/stdtypes.html#set.issubset",
    "http://docs.python.org/3.3/library/stdtypes.html#set.issuperset",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#list.sort",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#set.update",
    "http://docs.python.org/3.3/library/stdtypes.html#set.intersection_update",
    "http://docs.python.org/3.3/library/stdtypes.html#set.difference_update",
    "http://docs.python.org/3.3/library/stdtypes.html#set.symmetric_difference_update",
    "http://docs.python.org/3.3/library/stdtypes.html#set.add",
    "http://docs.python.org/3.3/library/stdtypes.html#set.remove",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/stdtypes.html#set.discard",
    "http://docs.python.org/3.3/library/stdtypes.html#set.pop",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/stdtypes.html#set.clear",
    "http://docs.python.org/3.3/library/stdtypes.html#set.update",
    "http://docs.python.org/3.3/library/stdtypes.html#set.intersection_update",
    "http://docs.python.org/3.3/library/stdtypes.html#set.difference_update",
    "http://docs.python.org/3.3/library/stdtypes.html#set.symmetric_difference_update",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__contains__",
    "http://docs.python.org/3.3/library/stdtypes.html#set.remove",
    "http://docs.python.org/3.3/library/stdtypes.html#set.discard",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#mapping-types-dict",
    "http://docs.python.org/3.3/glossary.html#term-mapping",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/stdtypes.html#list",
    "http://docs.python.org/3.3/library/stdtypes.html#set",
    "http://docs.python.org/3.3/library/stdtypes.html#tuple",
    "http://docs.python.org/3.3/library/collections.html#module-collections",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/glossary.html#term-iterator",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/collections.html#collections.Counter",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.clear",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.copy",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.fromkeys",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.fromkeys",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.get",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.items",
    "http://docs.python.org/3.3/library/stdtypes.html#dict-views",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.keys",
    "http://docs.python.org/3.3/library/stdtypes.html#dict-views",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.pop",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.popitem",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.popitem",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.popitem",
    "http://docs.python.org/3.3/library/exceptions.html#KeyError",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.setdefault",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.update",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.update",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.values",
    "http://docs.python.org/3.3/library/stdtypes.html#dict-views",
    "http://docs.python.org/3.3/library/types.html#types.MappingProxyType",
    "http://docs.python.org/3.3/library/stdtypes.html#dict",
    "http://docs.python.org/3.3/library/stdtypes.html#dictionary-view-objects",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.keys",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.values",
    "http://docs.python.org/3.3/library/stdtypes.html#dict.items",
    "http://docs.python.org/3.3/library/functions.html#zip",
    "http://docs.python.org/3.3/library/exceptions.html#RuntimeError",
    "http://docs.python.org/3.3/library/collections.abc.html#collections.abc.Set",
    "http://docs.python.org/3.3/library/stdtypes.html#context-manager-types",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/library/stdtypes.html#contextmanager.__enter__",
    "http://docs.python.org/3.3/reference/compound_stmts.html#as",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/glossary.html#term-file-object",
    "http://docs.python.org/3.3/library/functions.html#open",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/library/decimal.html#decimal.localcontext",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/library/stdtypes.html#contextmanager.__exit__",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/reference/compound_stmts.html#with",
    "http://docs.python.org/3.3/library/stdtypes.html#contextmanager.__exit__",
    "http://docs.python.org/3.3/library/contextlib.html#module-contextlib",
    "http://docs.python.org/3.3/glossary.html#term-generator",
    "http://docs.python.org/3.3/library/contextlib.html#contextlib.contextmanager",
    "http://docs.python.org/3.3/library/contextlib.html#contextlib.contextmanager",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__enter__",
    "http://docs.python.org/3.3/reference/datamodel.html#object.__exit__",
    "http://docs.python.org/3.3/library/stdtypes.html#other-built-in-types",
    "http://docs.python.org/3.3/library/stdtypes.html#modules",
    "http://docs.python.org/3.3/reference/simple_stmts.html#import",
    "http://docs.python.org/3.3/library/stdtypes.html#classes-and-class-instances",
    "http://docs.python.org/3.3/reference/datamodel.html#objects",
    "http://docs.python.org/3.3/reference/compound_stmts.html#class",
    "http://docs.python.org/3.3/library/stdtypes.html#functions",
    "http://docs.python.org/3.3/reference/compound_stmts.html#function",
    "http://docs.python.org/3.3/library/stdtypes.html#methods",
    "http://docs.python.org/3.3/library/exceptions.html#AttributeError",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/library/stdtypes.html#code-objects",
    "http://docs.python.org/3.3/library/functions.html#compile",
    "http://docs.python.org/3.3/library/code.html#module-code",
    "http://docs.python.org/3.3/library/functions.html#exec",
    "http://docs.python.org/3.3/library/functions.html#eval",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/library/stdtypes.html#type-objects",
    "http://docs.python.org/3.3/library/functions.html#type",
    "http://docs.python.org/3.3/library/types.html#module-types",
    "http://docs.python.org/3.3/library/stdtypes.html#the-null-object",
    "http://docs.python.org/3.3/library/stdtypes.html#the-ellipsis-object",
    "http://docs.python.org/3.3/reference/expressions.html#slicings",
    "http://docs.python.org/3.3/library/constants.html#Ellipsis",
    "http://docs.python.org/3.3/library/constants.html#Ellipsis",
    "http://docs.python.org/3.3/library/stdtypes.html#the-notimplemented-object",
    "http://docs.python.org/3.3/reference/expressions.html#comparisons",
    "http://docs.python.org/3.3/library/stdtypes.html#boolean-values",
    "http://docs.python.org/3.3/library/functions.html#bool",
    "http://docs.python.org/3.3/library/stdtypes.html#truth",
    "http://docs.python.org/3.3/library/stdtypes.html#internal-objects",
    "http://docs.python.org/3.3/reference/datamodel.html#types",
    "http://docs.python.org/3.3/library/stdtypes.html#special-attributes",
    "http://docs.python.org/3.3/library/functions.html#dir",
    "http://docs.python.org/3.3/library/stdtypes.html#object.__dict__",
    "http://docs.python.org/3.3/library/stdtypes.html#instance.__class__",
    "http://docs.python.org/3.3/library/stdtypes.html#class.__bases__",
    "http://docs.python.org/3.3/library/stdtypes.html#class.__name__",
    "http://docs.python.org/3.3/library/stdtypes.html#class.__qualname__",
    "http://docs.python.org/3.3/glossary.html#term-qualified-name",
    "http://docs.python.org/3.3/library/stdtypes.html#class.__mro__",
    "http://docs.python.org/3.3/library/stdtypes.html#class.mro",
    "http://docs.python.org/3.3/library/stdtypes.html#class.__mro__",
    "http://docs.python.org/3.3/library/stdtypes.html#class.__subclasses__",
    "http://docs.python.org/3.3/library/stdtypes.html#id1",
    "http://docs.python.org/3.3/reference/datamodel.html#customization",
    "http://docs.python.org/3.3/library/stdtypes.html#id2",
    "http://docs.python.org/3.3/library/stdtypes.html#id5",
    "http://docs.python.org/3.3/library/stdtypes.html#id6",
    "http://docs.python.org/3.3/library/stdtypes.html#id7",
    "http://docs.python.org/3.3/library/stdtypes.html#id8",
    "http://docs.python.org/3.3/library/stdtypes.html#id9",
    "http://docs.python.org/3.3/contents.html",
    "http://docs.python.org/3.3/library/stdtypes.html#",
    "http://docs.python.org/3.3/library/stdtypes.html#truth-value-testing",
    "http://docs.python.org/3.3/library/stdtypes.html#boolean-operations-and-or-not",
    "http://docs.python.org/3.3/library/stdtypes.html#comparisons",
    "http://docs.python.org/3.3/library/stdtypes.html#numeric-types-int-float-complex",
    "http://docs.python.org/3.3/library/stdtypes.html#bitwise-operations-on-integer-types",
    "http://docs.python.org/3.3/library/stdtypes.html#additional-methods-on-integer-types",
    "http://docs.python.org/3.3/library/stdtypes.html#additional-methods-on-float",
    "http://docs.python.org/3.3/library/stdtypes.html#hashing-of-numeric-types",
    "http://docs.python.org/3.3/library/stdtypes.html#iterator-types",
    "http://docs.python.org/3.3/library/stdtypes.html#generator-types",
    "http://docs.python.org/3.3/library/stdtypes.html#sequence-types-list-tuple-range",
    "http://docs.python.org/3.3/library/stdtypes.html#common-sequence-operations",
    "http://docs.python.org/3.3/library/stdtypes.html#immutable-sequence-types",
    "http://docs.python.org/3.3/library/stdtypes.html#mutable-sequence-types",
    "http://docs.python.org/3.3/library/stdtypes.html#lists",
    "http://docs.python.org/3.3/library/stdtypes.html#tuples",
    "http://docs.python.org/3.3/library/stdtypes.html#ranges",
    "http://docs.python.org/3.3/library/stdtypes.html#text-sequence-type-str",
    "http://docs.python.org/3.3/library/stdtypes.html#string-methods",
    "http://docs.python.org/3.3/library/stdtypes.html#printf-style-string-formatting",
    "http://docs.python.org/3.3/library/stdtypes.html#binary-sequence-types-bytes-bytearray-memoryview",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes",
    "http://docs.python.org/3.3/library/stdtypes.html#bytearray-objects",
    "http://docs.python.org/3.3/library/stdtypes.html#bytes-and-bytearray-operations",
    "http://docs.python.org/3.3/library/stdtypes.html#memory-views",
    "http://docs.python.org/3.3/library/stdtypes.html#set-types-set-frozenset",
    "http://docs.python.org/3.3/library/stdtypes.html#mapping-types-dict",
    "http://docs.python.org/3.3/library/stdtypes.html#dictionary-view-objects",
    "http://docs.python.org/3.3/library/stdtypes.html#context-manager-types",
    "http://docs.python.org/3.3/library/stdtypes.html#other-built-in-types",
    "http://docs.python.org/3.3/library/stdtypes.html#modules",
    "http://docs.python.org/3.3/library/stdtypes.html#classes-and-class-instances",
    "http://docs.python.org/3.3/library/stdtypes.html#functions",
    "http://docs.python.org/3.3/library/stdtypes.html#methods",
    "http://docs.python.org/3.3/library/stdtypes.html#code-objects",
    "http://docs.python.org/3.3/library/stdtypes.html#type-objects",
    "http://docs.python.org/3.3/library/stdtypes.html#the-null-object",
    "http://docs.python.org/3.3/library/stdtypes.html#the-ellipsis-object",
    "http://docs.python.org/3.3/library/stdtypes.html#the-notimplemented-object",
    "http://docs.python.org/3.3/library/stdtypes.html#boolean-values",
    "http://docs.python.org/3.3/library/stdtypes.html#internal-objects",
    "http://docs.python.org/3.3/library/stdtypes.html#special-attributes",
    "http://docs.python.org/3.3/library/constants.html",
    "http://docs.python.org/3.3/library/exceptions.html",
    "http://docs.python.org/3.3/bugs.html",
    "http://docs.python.org/3.3/_sources/library/stdtypes.txt",
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/exceptions.html",
    "http://docs.python.org/3.3/library/constants.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/copyright.html",
    "http://www.python.org/psf/donations/",
    "http://docs.python.org/3.3/bugs.html",
    "http://sphinx.pocoo.org/"
  ],
  "texts": [
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 14,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 14,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 14,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"exceptions.html\" title=\"5. Built-in Exceptions\" accesskey=\"N\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 14,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"constants.html\" title=\"3. Built-in Constants\" accesskey=\"P\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 14,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"exceptions.html\" title=\"5. Built-in Exceptions\" accesskey=\"N\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"constants.html\" title=\"3. Built-in Constants\" accesskey=\"P\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\" accesskey=\"U\">The Python Standard Library</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »"
      ]
    },
    {
      "bound": {
        "height": 56,
        "left": 265,
        "top": 69,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "32px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "9px",
        "padding-top": "9px"
      },
      "element": "h1:nth-of-type(1)",
      "html": "4. Built-in Types<a class=\"headerlink\" href=\"#built-in-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > h1",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > h1:nth-of-type(1)",
      "text": [
        "4. Built-in Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 141,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The following sections describe the standard types that are built into the\ninterpreter.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The following sections describe the standard types that are built into the\ninterpreter."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 179,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-0:nth-of-type(2)",
      "html": "The principal built-in types are numerics, sequences, mappings, classes,\ninstances and exceptions.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > p#index-0:nth-of-type(2)",
      "text": [
        "The principal built-in types are numerics, sequences, mappings, classes,\ninstances and exceptions."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 217,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Some collection classes are mutable.  The methods that add, subtract, or\nrearrange their members in place, and don’t return a specific item, never return\nthe collection instance itself but <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Some collection classes are mutable.  The methods that add, subtract, or\nrearrange their members in place, and don’t return a specific item, never return\nthe collection instance itself but ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 277,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Some operations are supported by several object types; in particular,\npractically all objects can be compared, tested for truth value, and converted\nto a string (with the <a class=\"reference internal\" href=\"functions.html#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a> function or the slightly different\n<a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a> function).  The latter function is implicitly used when an object is\nwritten by the <a class=\"reference internal\" href=\"functions.html#print\" title=\"print\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">print()</span></tt></a> function.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Some operations are supported by several object types; in particular,\npractically all objects can be compared, tested for truth value, and converted\nto a string (with the ",
        "repr()",
        " function or the slightly different\n",
        "str()",
        " function).  The latter function is implicitly used when an object is\nwritten by the ",
        "print()",
        " function."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 337,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.1. Truth Value Testing<a class=\"headerlink\" href=\"#truth-value-testing\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > h2:nth-of-type(1)",
      "text": [
        "4.1. Truth Value Testing",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 399,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-1:nth-of-type(1)",
      "html": "Any object can be tested for truth value, for use in an <a class=\"reference internal\" href=\"../reference/compound_stmts.html#if\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">if</span></tt></a> or\n<a class=\"reference internal\" href=\"../reference/compound_stmts.html#while\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">while</span></tt></a> condition or as operand of the Boolean operations below. The\nfollowing values are considered false:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > p#index-1:nth-of-type(1)",
      "text": [
        "Any object can be tested for truth value, for use in an ",
        "if",
        " or\n",
        "while",
        " condition or as operand of the Boolean operations below. The\nfollowing values are considered false:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 437,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > ul#index-2:nth-of-type(1) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "None"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 475,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > ul#index-2:nth-of-type(1) > li#index-3:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "False"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 513,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "zero of any numeric type, for example, <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">0.0</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">0j</span></tt>.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > ul#index-2:nth-of-type(1) > li:nth-of-type(3) > p.first:nth-of-type(1)",
      "text": [
        "zero of any numeric type, for example, ",
        "0",
        ", ",
        "0.0",
        ", ",
        "0j",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 551,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "any empty sequence, for example, <tt class=\"docutils literal\"><span class=\"pre\">''</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">()</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">[]</span></tt>.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > ul#index-2:nth-of-type(1) > li:nth-of-type(4) > p.first:nth-of-type(1)",
      "text": [
        "any empty sequence, for example, ",
        "''",
        ", ",
        "()",
        ", ",
        "[]",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 589,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "any empty mapping, for example, <tt class=\"docutils literal\"><span class=\"pre\">{}</span></tt>.",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > ul#index-2:nth-of-type(1) > li:nth-of-type(5) > p.first:nth-of-type(1)",
      "text": [
        "any empty mapping, for example, ",
        "{}",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 627,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "instances of user-defined classes, if the class defines a <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__bool__\" title=\"object.__bool__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__bool__()</span></tt></a> or\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__len__\" title=\"object.__len__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__len__()</span></tt></a> method, when that method returns the integer zero or\n<a class=\"reference internal\" href=\"functions.html#bool\" title=\"bool\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bool</span></tt></a> value <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>. <a class=\"footnote-reference\" href=\"#id10\" id=\"id1\">[1]</a>",
      "path": "div > div > div > div > div > div > ul > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > ul#index-2:nth-of-type(1) > li:nth-of-type(6) > p.first:nth-of-type(1)",
      "text": [
        "instances of user-defined classes, if the class defines a ",
        "__bool__()",
        " or\n",
        "__len__()",
        " method, when that method returns the integer zero or\n",
        "bool",
        " value ",
        "False",
        ". ",
        "[1]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 665,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-4:nth-of-type(2)",
      "html": "All other values are considered true — so objects of many types are always\ntrue.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > p#index-4:nth-of-type(2)",
      "text": [
        "All other values are considered true — so objects of many types are always\ntrue."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 703,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-5:nth-of-type(3)",
      "html": "Operations and built-in functions that have a Boolean result always return <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>\nor <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> for false and <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt> or <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> for true, unless otherwise stated.\n(Important exception: the Boolean operations <tt class=\"docutils literal\"><span class=\"pre\">or</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">and</span></tt> always return\none of their operands.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#truth-value-testing.section:nth-of-type(1) > p#index-5:nth-of-type(3)",
      "text": [
        "Operations and built-in functions that have a Boolean result always return ",
        "0",
        "\nor ",
        "False",
        " for false and ",
        "1",
        " or ",
        "True",
        " for true, unless otherwise stated.\n(Important exception: the Boolean operations ",
        "or",
        " and ",
        "and",
        " always return\none of their operands.)"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 763,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.2. Boolean Operations — <a class=\"reference internal\" href=\"../reference/expressions.html#and\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">and</span></tt></a>, <a class=\"reference internal\" href=\"../reference/expressions.html#or\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">or</span></tt></a>, <a class=\"reference internal\" href=\"../reference/expressions.html#not\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">not</span></tt></a><a class=\"headerlink\" href=\"#boolean-operations-and-or-not\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > h2:nth-of-type(1)",
      "text": [
        "4.2. Boolean Operations — ",
        "and",
        ", ",
        "or",
        ", ",
        "not",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 826,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-6:nth-of-type(1)",
      "html": "These are the Boolean operations, ordered by ascending priority:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > p#index-6:nth-of-type(1)",
      "text": [
        "These are the Boolean operations, ordered by ascending priority:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 864,
        "width": 127
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Operation",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Operation"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 392,
        "top": 864,
        "width": 314
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Result",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Result"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 706,
        "top": 864,
        "width": 66
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Notes",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Notes"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 892,
        "width": 127
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">or</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "x",
        "or",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 392,
        "top": 892,
        "width": 314
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "if <em>x</em> is false, then <em>y</em>, else\n<em>x</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "if ",
        "x",
        " is false, then ",
        "y",
        ", else\n",
        "x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 706,
        "top": 892,
        "width": 66
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(3)",
      "text": [
        "(1)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 921,
        "width": 127
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">and</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "x",
        "and",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 392,
        "top": 921,
        "width": 314
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "if <em>x</em> is false, then <em>x</em>, else\n<em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "if ",
        "x",
        " is false, then ",
        "x",
        ", else\n",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 706,
        "top": 921,
        "width": 66
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(2)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(3)",
      "text": [
        "(2)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 950,
        "width": 127
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">not</span> <span class=\"pre\">x</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "not",
        "x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 392,
        "top": 950,
        "width": 314
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "if <em>x</em> is false, then <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>,\nelse <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "if ",
        "x",
        " is false, then ",
        "True",
        ",\nelse ",
        "False"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 706,
        "top": 950,
        "width": 66
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(3)",
      "text": [
        "(3)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 996,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-7:nth-of-type(2)",
      "html": "Notes:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > p#index-7:nth-of-type(2)",
      "text": [
        "Notes:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 1034,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "This is a short-circuit operator, so it only evaluates the second\nargument if the first one is <a class=\"reference internal\" href=\"constants.html#False\" title=\"False\"><tt class=\"xref py py-const xref docutils literal\"><span class=\"pre\">False</span></tt></a>.",
      "path": "div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "This is a short-circuit operator, so it only evaluates the second\nargument if the first one is ",
        "False",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 1054,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "This is a short-circuit operator, so it only evaluates the second\nargument if the first one is <a class=\"reference internal\" href=\"constants.html#True\" title=\"True\"><tt class=\"xref py py-const xref docutils literal\"><span class=\"pre\">True</span></tt></a>.",
      "path": "div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "This is a short-circuit operator, so it only evaluates the second\nargument if the first one is ",
        "True",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 1074,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">not</span></tt> has a lower priority than non-Boolean operators, so <tt class=\"docutils literal\"><span class=\"pre\">not</span> <span class=\"pre\">a</span> <span class=\"pre\">==</span> <span class=\"pre\">b</span></tt> is\ninterpreted as <tt class=\"docutils literal\"><span class=\"pre\">not</span> <span class=\"pre\">(a</span> <span class=\"pre\">==</span> <span class=\"pre\">b)</span></tt>, and <tt class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">==</span> <span class=\"pre\">not</span> <span class=\"pre\">b</span></tt> is a syntax error.",
      "path": "div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#boolean-operations-and-or-not.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "not",
        " has a lower priority than non-Boolean operators, so ",
        "not",
        "a",
        "==",
        "b",
        " is\ninterpreted as ",
        "not",
        "(a",
        "==",
        "b)",
        ", and ",
        "a",
        "==",
        "not",
        "b",
        " is a syntax error."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 1110,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.3. Comparisons<a class=\"headerlink\" href=\"#comparisons\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > h2:nth-of-type(1)",
      "text": [
        "4.3. Comparisons",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1172,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-8:nth-of-type(1)",
      "html": "There are eight comparison operations in Python.  They all have the same\npriority (which is higher than that of the Boolean operations).  Comparisons can\nbe chained arbitrarily; for example, <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">y</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">z</span></tt> is equivalent to <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">y</span> <span class=\"pre\">and</span>\n<span class=\"pre\">y</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">z</span></tt>, except that <em>y</em> is evaluated only once (but in both cases <em>z</em> is not\nevaluated at all when <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">y</span></tt> is found to be false).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > p#index-8:nth-of-type(1)",
      "text": [
        "There are eight comparison operations in Python.  They all have the same\npriority (which is higher than that of the Boolean operations).  Comparisons can\nbe chained arbitrarily; for example, ",
        "x",
        "<",
        "y",
        "<=",
        "z",
        " is equivalent to ",
        "x",
        "<",
        "y",
        "and",
        "y",
        "<=",
        "z",
        ", except that ",
        "y",
        " is evaluated only once (but in both cases ",
        "z",
        " is not\nevaluated at all when ",
        "x",
        "<",
        "y",
        " is found to be false)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1232,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "This table summarizes the comparison operations:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "This table summarizes the comparison operations:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 1270,
        "width": 100
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Operation",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Operation"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 365,
        "top": 1270,
        "width": 212
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1298,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">&lt;</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "<"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1298,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "strictly less than",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "strictly less than"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1327,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">&lt;=</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "<="
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1327,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "less than or equal",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "less than or equal"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1356,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">&gt;</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        ">"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1356,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "strictly greater than",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "strictly greater than"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1385,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">&gt;=</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        ">="
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1385,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "greater than or equal",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "greater than or equal"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1414,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">==</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "=="
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1414,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "equal",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "equal"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1443,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">!=</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "!="
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1443,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "not equal",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "not equal"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1472,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">is</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "is"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1472,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "object identity",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "object identity"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 1501,
        "width": 100
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">is</span> <span class=\"pre\">not</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "is",
        "not"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 365,
        "top": 1501,
        "width": 212
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "negated object identity",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "negated object identity"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 1547,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-9:nth-of-type(3)",
      "html": "Objects of different types, except different numeric types, never compare equal.\nFurthermore, some types (for example, function objects) support only a degenerate\nnotion of comparison where any two objects of that type are unequal.  The <tt class=\"docutils literal\"><span class=\"pre\">&lt;</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">&lt;=</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">&gt;</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">&gt;=</span></tt> operators will raise a <a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> exception when\ncomparing a complex number with another built-in numeric type, when the objects\nare of different types that cannot be compared, or in other cases where there is\nno defined ordering.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > p#index-9:nth-of-type(3)",
      "text": [
        "Objects of different types, except different numeric types, never compare equal.\nFurthermore, some types (for example, function objects) support only a degenerate\nnotion of comparison where any two objects of that type are unequal.  The ",
        "<",
        ",\n",
        "<=",
        ", ",
        ">",
        " and ",
        ">=",
        " operators will raise a ",
        "TypeError",
        " exception when\ncomparing a complex number with another built-in numeric type, when the objects\nare of different types that cannot be compared, or in other cases where there is\nno defined ordering."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1629,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-10:nth-of-type(4)",
      "html": "Non-identical instances of a class normally compare as non-equal unless the\nclass defines the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__eq__\" title=\"object.__eq__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__eq__()</span></tt></a> method.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > p#index-10:nth-of-type(4)",
      "text": [
        "Non-identical instances of a class normally compare as non-equal unless the\nclass defines the ",
        "__eq__()",
        " method."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 1667,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Instances of a class cannot be ordered with respect to other instances of the\nsame class, or other types of object, unless the class defines enough of the\nmethods <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__lt__\" title=\"object.__lt__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__lt__()</span></tt></a>, <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__le__\" title=\"object.__le__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__le__()</span></tt></a>, <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__gt__\" title=\"object.__gt__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__gt__()</span></tt></a>, and <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__ge__\" title=\"object.__ge__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__ge__()</span></tt></a> (in\ngeneral, <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__lt__\" title=\"object.__lt__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__lt__()</span></tt></a> and <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__eq__\" title=\"object.__eq__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__eq__()</span></tt></a> are sufficient, if you want the\nconventional meanings of the comparison operators).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > p:nth-of-type(5)",
      "text": [
        "Instances of a class cannot be ordered with respect to other instances of the\nsame class, or other types of object, unless the class defines enough of the\nmethods ",
        "__lt__()",
        ", ",
        "__le__()",
        ", ",
        "__gt__()",
        ", and ",
        "__ge__()",
        " (in\ngeneral, ",
        "__lt__()",
        " and ",
        "__eq__()",
        " are sufficient, if you want the\nconventional meanings of the comparison operators)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1727,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The behavior of the <a class=\"reference internal\" href=\"../reference/expressions.html#is\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">is</span></tt></a> and <a class=\"reference internal\" href=\"../reference/expressions.html#is-not\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">is</span> <span class=\"pre\">not</span></tt></a> operators cannot be\ncustomized; also they can be applied to any two objects and never raise an\nexception.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > p:nth-of-type(6)",
      "text": [
        "The behavior of the ",
        "is",
        " and ",
        "is",
        "not",
        " operators cannot be\ncustomized; also they can be applied to any two objects and never raise an\nexception."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 1765,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-11:nth-of-type(7)",
      "html": "Two more operations with the same syntactic priority, <a class=\"reference internal\" href=\"../reference/expressions.html#in\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">in</span></tt></a> and\n<a class=\"reference internal\" href=\"../reference/expressions.html#not-in\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">not</span> <span class=\"pre\">in</span></tt></a>, are supported only by sequence types (below).",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#comparisons.section:nth-of-type(3) > p#index-11:nth-of-type(7)",
      "text": [
        "Two more operations with the same syntactic priority, ",
        "in",
        " and\n",
        "not",
        "in",
        ", are supported only by sequence types (below)."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 1803,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.4. Numeric Types — <a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a>, <a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">float</span></tt></a>, <a class=\"reference internal\" href=\"functions.html#complex\" title=\"complex\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">complex</span></tt></a><a class=\"headerlink\" href=\"#numeric-types-int-float-complex\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > h2:nth-of-type(1)",
      "text": [
        "4.4. Numeric Types — ",
        "int",
        ", ",
        "float",
        ", ",
        "complex",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 265,
        "top": 1866,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-12:nth-of-type(1)",
      "html": "There are three distinct numeric types: <em class=\"dfn\">integers</em>, <em class=\"dfn\">floating\npoint numbers</em>, and <em class=\"dfn\">complex numbers</em>.  In addition, Booleans are a\nsubtype of integers.  Integers have unlimited precision.  Floating point\nnumbers are usually implemented using <tt class=\"xref c c-type docutils literal\"><span class=\"pre\">double</span></tt> in C; information\nabout the precision and internal representation of floating point\nnumbers for the machine on which your program is running is available\nin <a class=\"reference internal\" href=\"sys.html#sys.float_info\" title=\"sys.float_info\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.float_info</span></tt></a>.  Complex numbers have a real and imaginary\npart, which are each a floating point number.  To extract these parts\nfrom a complex number <em>z</em>, use <tt class=\"docutils literal\"><span class=\"pre\">z.real</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">z.imag</span></tt>. (The standard\nlibrary includes additional numeric types, <a class=\"reference internal\" href=\"fractions.html#module-fractions\" title=\"fractions: Rational numbers.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">fractions</span></tt></a> that hold\nrationals, and <a class=\"reference internal\" href=\"decimal.html#module-decimal\" title=\"decimal: Implementation of the General Decimal Arithmetic  Specification.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">decimal</span></tt></a> that hold floating-point numbers with\nuser-definable precision.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > p#index-12:nth-of-type(1)",
      "text": [
        "There are three distinct numeric types: ",
        "integers",
        ", ",
        "floating\npoint numbers",
        ", and ",
        "complex numbers",
        ".  In addition, Booleans are a\nsubtype of integers.  Integers have unlimited precision.  Floating point\nnumbers are usually implemented using ",
        "double",
        " in C; information\nabout the precision and internal representation of floating point\nnumbers for the machine on which your program is running is available\nin ",
        "sys.float_info",
        ".  Complex numbers have a real and imaginary\npart, which are each a floating point number.  To extract these parts\nfrom a complex number ",
        "z",
        ", use ",
        "z.real",
        " and ",
        "z.imag",
        ". (The standard\nlibrary includes additional numeric types, ",
        "fractions",
        " that hold\nrationals, and ",
        "decimal",
        " that hold floating-point numbers with\nuser-definable precision.)"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 1992,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-13:nth-of-type(2)",
      "html": "Numbers are created by numeric literals or as the result of built-in functions\nand operators.  Unadorned integer literals (including hex, octal and binary\nnumbers) yield integers.  Numeric literals containing a decimal point or an\nexponent sign yield floating point numbers.  Appending <tt class=\"docutils literal\"><span class=\"pre\">'j'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'J'</span></tt> to a\nnumeric literal yields an imaginary number (a complex number with a zero real\npart) which you can add to an integer or float to get a complex number with real\nand imaginary parts.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > p#index-13:nth-of-type(2)",
      "text": [
        "Numbers are created by numeric literals or as the result of built-in functions\nand operators.  Unadorned integer literals (including hex, octal and binary\nnumbers) yield integers.  Numeric literals containing a decimal point or an\nexponent sign yield floating point numbers.  Appending ",
        "'j'",
        " or ",
        "'J'",
        " to a\nnumeric literal yields an imaginary number (a complex number with a zero real\npart) which you can add to an integer or float to get a complex number with real\nand imaginary parts."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 2074,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-14:nth-of-type(3)",
      "html": "Python fully supports mixed arithmetic: when a binary arithmetic operator has\noperands of different numeric types, the operand with the “narrower” type is\nwidened to that of the other, where integer is narrower than floating point,\nwhich is narrower than complex.  Comparisons between numbers of mixed type use\nthe same rule. <a class=\"footnote-reference\" href=\"#id11\" id=\"id2\">[2]</a> The constructors <a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">int()</span></tt></a>, <a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">float()</span></tt></a>, and\n<a class=\"reference internal\" href=\"functions.html#complex\" title=\"complex\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">complex()</span></tt></a> can be used to produce numbers of a specific type.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > p#index-14:nth-of-type(3)",
      "text": [
        "Python fully supports mixed arithmetic: when a binary arithmetic operator has\noperands of different numeric types, the operand with the “narrower” type is\nwidened to that of the other, where integer is narrower than floating point,\nwhich is narrower than complex.  Comparisons between numbers of mixed type use\nthe same rule. ",
        "[2]",
        " The constructors ",
        "int()",
        ", ",
        "float()",
        ", and\n",
        "complex()",
        " can be used to produce numbers of a specific type."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 2156,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "All numeric types (except complex) support the following operations, sorted by\nascending priority (operations in the same box have the same priority; all\nnumeric operations have a higher priority than comparison operations):",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > p:nth-of-type(4)",
      "text": [
        "All numeric types (except complex) support the following operations, sorted by\nascending priority (operations in the same box have the same priority; all\nnumeric operations have a higher priority than comparison operations):"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 2216,
        "width": 330
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Operation",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Operation"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 595,
        "top": 2216,
        "width": 528
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Result",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Result"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 1123,
        "top": 2216,
        "width": 144
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Notes",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Notes"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 1267,
        "top": 2216,
        "width": 316
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(4)",
      "html": "Full documentation",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(4)",
      "text": [
        "Full documentation"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2244,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">+</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "x",
        "+",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2244,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "sum of <em>x</em> and <em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "sum of ",
        "x",
        " and ",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2273,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">-</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "x",
        "-",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2273,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "difference of <em>x</em> and <em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "difference of ",
        "x",
        " and ",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2302,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">*</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "x",
        "*",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2302,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "product of <em>x</em> and <em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "product of ",
        "x",
        " and ",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2331,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">/</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "x",
        "/",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2331,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "quotient of <em>x</em> and <em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "quotient of ",
        "x",
        " and ",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2360,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">//</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "x",
        "//",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2360,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "floored quotient of <em>x</em> and\n<em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "floored quotient of ",
        "x",
        " and\n",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1123,
        "top": 2360,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(3)",
      "text": [
        "(1)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2389,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">%</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "x",
        "%",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2389,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "remainder of <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">/</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "remainder of ",
        "x",
        "/",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1123,
        "top": 2389,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(2)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(3)",
      "text": [
        "(2)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2418,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">-x</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "-x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2418,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> negated",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "x",
        " negated"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2447,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">+x</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "+x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2447,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> unchanged",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "x",
        " unchanged"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2476,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">abs(x)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(1)",
      "text": [
        "abs(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2476,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "absolute value or magnitude of\n<em>x</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(2)",
      "text": [
        "absolute value or magnitude of\n",
        "x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1267,
        "top": 2476,
        "width": 316
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"functions.html#abs\" title=\"abs\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">abs()</span></tt></a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(4)",
      "text": [
        "abs()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2505,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">int(x)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(1)",
      "text": [
        "int(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2505,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> converted to integer",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(2)",
      "text": [
        "x",
        " converted to integer"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1123,
        "top": 2505,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)(6)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(3)",
      "text": [
        "(3)(6)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1267,
        "top": 2505,
        "width": 316
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">int()</span></tt></a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(4)",
      "text": [
        "int()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2534,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">float(x)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(1)",
      "text": [
        "float(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2534,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> converted to floating point",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(2)",
      "text": [
        "x",
        " converted to floating point"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1123,
        "top": 2534,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(4)(6)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(3)",
      "text": [
        "(4)(6)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1267,
        "top": 2534,
        "width": 316
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">float()</span></tt></a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(4)",
      "text": [
        "float()"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 2563,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">complex(re,</span> <span class=\"pre\">im)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(1)",
      "text": [
        "complex(re,",
        "im)"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 595,
        "top": 2563,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "a complex number with real part\n<em>re</em>, imaginary part <em>im</em>.\n<em>im</em> defaults to zero.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(2)",
      "text": [
        "a complex number with real part\n",
        "re",
        ", imaginary part ",
        "im",
        ".\n",
        "im",
        " defaults to zero."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 1123,
        "top": 2563,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(6)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(3)",
      "text": [
        "(6)"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 1267,
        "top": 2563,
        "width": 316
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"functions.html#complex\" title=\"complex\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">complex()</span></tt></a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(4)",
      "text": [
        "complex()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2610,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">c.conjugate()</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(1)",
      "text": [
        "c.conjugate()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2610,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "conjugate of the complex number\n<em>c</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(2)",
      "text": [
        "conjugate of the complex number\n",
        "c"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2639,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">divmod(x,</span> <span class=\"pre\">y)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(1)",
      "text": [
        "divmod(x,",
        "y)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2639,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "the pair <tt class=\"docutils literal\"><span class=\"pre\">(x</span> <span class=\"pre\">//</span> <span class=\"pre\">y,</span> <span class=\"pre\">x</span> <span class=\"pre\">%</span> <span class=\"pre\">y)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(2)",
      "text": [
        "the pair ",
        "(x",
        "//",
        "y,",
        "x",
        "%",
        "y)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1123,
        "top": 2639,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(2)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(3)",
      "text": [
        "(2)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1267,
        "top": 2639,
        "width": 316
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"functions.html#divmod\" title=\"divmod\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">divmod()</span></tt></a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(4)",
      "text": [
        "divmod()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2668,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">pow(x,</span> <span class=\"pre\">y)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(15) > td:nth-of-type(1)",
      "text": [
        "pow(x,",
        "y)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2668,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> to the power <em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(15) > td:nth-of-type(2)",
      "text": [
        "x",
        " to the power ",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1123,
        "top": 2668,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(5)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(15) > td:nth-of-type(3)",
      "text": [
        "(5)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1267,
        "top": 2668,
        "width": 316
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"functions.html#pow\" title=\"pow\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">pow()</span></tt></a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(15) > td:nth-of-type(4)",
      "text": [
        "pow()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 2697,
        "width": 330
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">**</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(16) > td:nth-of-type(1)",
      "text": [
        "x",
        "**",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 595,
        "top": 2697,
        "width": 528
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> to the power <em>y</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(16) > td:nth-of-type(2)",
      "text": [
        "x",
        " to the power ",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1123,
        "top": 2697,
        "width": 144
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(5)",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(16) > td:nth-of-type(3)",
      "text": [
        "(5)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 2743,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-15:nth-of-type(5)",
      "html": "Notes:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > p#index-15:nth-of-type(5)",
      "text": [
        "Notes:"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 2781,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "Also referred to as integer division.  The resultant value is a whole\ninteger, though the result’s type is not necessarily int.  The result is\nalways rounded towards minus infinity: <tt class=\"docutils literal\"><span class=\"pre\">1//2</span></tt> is <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">(-1)//2</span></tt> is\n<tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">1//(-2)</span></tt> is <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt>, and <tt class=\"docutils literal\"><span class=\"pre\">(-1)//(-2)</span></tt> is <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > ol.arabic:nth-of-type(1) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "Also referred to as integer division.  The resultant value is a whole\ninteger, though the result’s type is not necessarily int.  The result is\nalways rounded towards minus infinity: ",
        "1//2",
        " is ",
        "0",
        ", ",
        "(-1)//2",
        " is\n",
        "-1",
        ", ",
        "1//(-2)",
        " is ",
        "-1",
        ", and ",
        "(-1)//(-2)",
        " is ",
        "0",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 2841,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "Not for complex numbers.  Instead convert to floats using <a class=\"reference internal\" href=\"functions.html#abs\" title=\"abs\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">abs()</span></tt></a> if\nappropriate.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "Not for complex numbers.  Instead convert to floats using ",
        "abs()",
        " if\nappropriate."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 2879,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-16:nth-of-type(1)",
      "html": "Conversion from floating point to integer may round or truncate\nas in C; see functions <tt class=\"xref py py-func docutils literal\"><span class=\"pre\">floor()</span></tt> and <tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ceil()</span></tt> in the <a class=\"reference internal\" href=\"math.html#module-math\" title=\"math: Mathematical functions (sin() etc.).\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">math</span></tt></a> module\nfor well-defined conversions.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > ol.arabic:nth-of-type(1) > li:nth-of-type(3) > p#index-16:nth-of-type(1)",
      "text": [
        "Conversion from floating point to integer may round or truncate\nas in C; see functions ",
        "floor()",
        " and ",
        "ceil()",
        " in the ",
        "math",
        " module\nfor well-defined conversions."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 2917,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "float also accepts the strings “nan” and “inf” with an optional prefix “+”\nor “-” for Not a Number (NaN) and positive or negative infinity.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > ol.arabic:nth-of-type(1) > li:nth-of-type(4) > p.first:nth-of-type(1)",
      "text": [
        "float also accepts the strings “nan” and “inf” with an optional prefix “+”\nor “-” for Not a Number (NaN) and positive or negative infinity."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 2955,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "Python defines <tt class=\"docutils literal\"><span class=\"pre\">pow(0,</span> <span class=\"pre\">0)</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">**</span> <span class=\"pre\">0</span></tt> to be <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt>, as is common for\nprogramming languages.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > ol.arabic:nth-of-type(1) > li:nth-of-type(5) > p.first:nth-of-type(1)",
      "text": [
        "Python defines ",
        "pow(0,",
        "0)",
        " and ",
        "0",
        "**",
        "0",
        " to be ",
        "1",
        ", as is common for\nprogramming languages."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 2993,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The numeric literals accepted include the digits <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt> to <tt class=\"docutils literal\"><span class=\"pre\">9</span></tt> or any\nUnicode equivalent (code points with the <tt class=\"docutils literal\"><span class=\"pre\">Nd</span></tt> property).",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > p.first:nth-of-type(1)",
      "text": [
        "The numeric literals accepted include the digits ",
        "0",
        " to ",
        "9",
        " or any\nUnicode equivalent (code points with the ",
        "Nd",
        " property)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 3031,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "See <a class=\"reference external\" href=\"http://www.unicode.org/Public/6.0.0/ucd/extracted/DerivedNumericType.txt\">http://www.unicode.org/Public/6.0.0/ucd/extracted/DerivedNumericType.txt</a>\nfor a complete list of code points with the <tt class=\"docutils literal\"><span class=\"pre\">Nd</span></tt> property.",
      "path": "div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > p:nth-of-type(2)",
      "text": [
        "See ",
        "http://www.unicode.org/Public/6.0.0/ucd/extracted/DerivedNumericType.txt",
        "\nfor a complete list of code points with the ",
        "Nd",
        " property."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3069,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "All <a class=\"reference internal\" href=\"numbers.html#numbers.Real\" title=\"numbers.Real\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">numbers.Real</span></tt></a> types (<a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> and <a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">float</span></tt></a>) also include\nthe following operations:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > p:nth-of-type(6)",
      "text": [
        "All ",
        "numbers.Real",
        " types (",
        "int",
        " and ",
        "float",
        ") also include\nthe following operations:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 3107,
        "width": 321
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Operation",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Operation"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 586,
        "top": 3107,
        "width": 578
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Result",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Result"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 1164,
        "top": 3107,
        "width": 134
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Notes",
      "path": "div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Notes"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3135,
        "width": 321
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">math.trunc(x)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "math.trunc(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 586,
        "top": 3135,
        "width": 578
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> truncated to Integral",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "x",
        " truncated to Integral"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 3164,
        "width": 321
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">round(x[,</span> <span class=\"pre\">n])</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "round(x[,",
        "n])"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 586,
        "top": 3164,
        "width": 578
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> rounded to n digits,\nrounding half to even. If n is\nomitted, it defaults to 0.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "x",
        " rounded to n digits,\nrounding half to even. If n is\nomitted, it defaults to 0."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3211,
        "width": 321
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">math.floor(x)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "math.floor(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 586,
        "top": 3211,
        "width": 578
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "the greatest integral float &lt;= <em>x</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "the greatest integral float <= ",
        "x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3240,
        "width": 321
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">math.ceil(x)</span></tt>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "math.ceil(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 586,
        "top": 3240,
        "width": 578
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "the least integral float &gt;= <em>x</em>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "the least integral float >= ",
        "x"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3286,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "For additional numeric operations see the <a class=\"reference internal\" href=\"math.html#module-math\" title=\"math: Mathematical functions (sin() etc.).\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">math</span></tt></a> and <a class=\"reference internal\" href=\"cmath.html#module-cmath\" title=\"cmath: Mathematical functions for complex numbers.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">cmath</span></tt></a>\nmodules.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > p:nth-of-type(7)",
      "text": [
        "For additional numeric operations see the ",
        "math",
        " and ",
        "cmath",
        "\nmodules."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 3324,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.4.1. Bitwise Operations on Integer Types<a class=\"headerlink\" href=\"#bitwise-operations-on-integer-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "4.4.1. Bitwise Operations on Integer Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3379,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-17:nth-of-type(1)",
      "html": "Bitwise operations only make sense for integers.  Negative numbers are treated\nas their 2’s complement value (this assumes a sufficiently large number of bits\nthat no overflow occurs during the operation).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > p#index-17:nth-of-type(1)",
      "text": [
        "Bitwise operations only make sense for integers.  Negative numbers are treated\nas their 2’s complement value (this assumes a sufficiently large number of bits\nthat no overflow occurs during the operation)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 3439,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The priorities of the binary bitwise operations are all lower than the numeric\noperations and higher than the comparisons; the unary operation <tt class=\"docutils literal\"><span class=\"pre\">~</span></tt> has the\nsame priority as the other unary numeric operations (<tt class=\"docutils literal\"><span class=\"pre\">+</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">-</span></tt>).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The priorities of the binary bitwise operations are all lower than the numeric\noperations and higher than the comparisons; the unary operation ",
        "~",
        " has the\nsame priority as the other unary numeric operations (",
        "+",
        " and ",
        "-",
        ")."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3499,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "This table lists the bitwise operations sorted in ascending priority\n(operations in the same box have the same priority):",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "This table lists the bitwise operations sorted in ascending priority\n(operations in the same box have the same priority):"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 3537,
        "width": 101
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Operation",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Operation"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 366,
        "top": 3537,
        "width": 267
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Result",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Result"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 633,
        "top": 3537,
        "width": 86
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Notes",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Notes"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3565,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">|</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "x",
        "|",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 366,
        "top": 3565,
        "width": 267
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "bitwise <em class=\"dfn\">or</em> of <em>x</em> and\n<em>y</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "bitwise ",
        "or",
        " of ",
        "x",
        " and\n",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3594,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">^</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "x",
        "^",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 366,
        "top": 3594,
        "width": 267
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "bitwise <em class=\"dfn\">exclusive or</em> of\n<em>x</em> and <em>y</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "bitwise ",
        "exclusive or",
        " of\n",
        "x",
        " and ",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3623,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">&amp;</span> <span class=\"pre\">y</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "x",
        "&",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 366,
        "top": 3623,
        "width": 267
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "bitwise <em class=\"dfn\">and</em> of <em>x</em> and\n<em>y</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "bitwise ",
        "and",
        " of ",
        "x",
        " and\n",
        "y"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3652,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">&lt;&lt;</span> <span class=\"pre\">n</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "x",
        "<<",
        "n"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 366,
        "top": 3652,
        "width": 267
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> shifted left by <em>n</em> bits",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "x",
        " shifted left by ",
        "n",
        " bits"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 633,
        "top": 3652,
        "width": 86
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)(2)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(3)",
      "text": [
        "(1)(2)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3681,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">&gt;&gt;</span> <span class=\"pre\">n</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "x",
        ">>",
        "n"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 366,
        "top": 3681,
        "width": 267
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>x</em> shifted right by <em>n</em> bits",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "x",
        " shifted right by ",
        "n",
        " bits"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 633,
        "top": 3681,
        "width": 86
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)(3)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(3)",
      "text": [
        "(1)(3)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 3710,
        "width": 101
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">~x</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "~x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 366,
        "top": 3710,
        "width": 267
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "the bits of <em>x</em> inverted",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "the bits of ",
        "x",
        " inverted"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3756,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Notes:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Notes:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 3794,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "Negative shift counts are illegal and cause a <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> to be raised.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Negative shift counts are illegal and cause a ",
        "ValueError",
        " to be raised."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 3814,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "A left shift by <em>n</em> bits is equivalent to multiplication by <tt class=\"docutils literal\"><span class=\"pre\">pow(2,</span> <span class=\"pre\">n)</span></tt>\nwithout overflow check.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "A left shift by ",
        "n",
        " bits is equivalent to multiplication by ",
        "pow(2,",
        "n)",
        "\nwithout overflow check."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 3834,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "A right shift by <em>n</em> bits is equivalent to division by <tt class=\"docutils literal\"><span class=\"pre\">pow(2,</span> <span class=\"pre\">n)</span></tt> without\noverflow check.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#bitwise-operations-on-integer-types.section:nth-of-type(1) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "A right shift by ",
        "n",
        " bits is equivalent to division by ",
        "pow(2,",
        "n)",
        " without\noverflow check."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 3870,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.4.2. Additional Methods on Integer Types<a class=\"headerlink\" href=\"#additional-methods-on-integer-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > h3:nth-of-type(1)",
      "text": [
        "4.4.2. Additional Methods on Integer Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 3925,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The int type implements the <a class=\"reference internal\" href=\"numbers.html#numbers.Integral\" title=\"numbers.Integral\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">numbers.Integral</span></tt></a> <a class=\"reference internal\" href=\"../glossary.html#term-abstract-base-class\"><em class=\"xref std std-term\">abstract base\nclass</em></a>. In addition, it provides one more method:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > p:nth-of-type(1)",
      "text": [
        "The int type implements the ",
        "numbers.Integral",
        "abstract base\nclass",
        ". In addition, it provides one more method:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 3963,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#int.bit_length:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">int.</tt><tt class=\"descname\">bit_length</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#int.bit_length\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dt#int.bit_length:nth-of-type(1)",
      "text": [
        "int.",
        "bit_length",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3991,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the number of bits necessary to represent an integer in binary,\nexcluding the sign and leading zeros:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the number of bits necessary to represent an integer in binary,\nexcluding the sign and leading zeros:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 4029,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 295,
        "top": 4029,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">37</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"go\">'-0b100101'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">bit_length</span><span class=\"p\">()</span>\n<span class=\"go\">6</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "n",
        "=",
        "-",
        "37",
        ">>> ",
        "bin",
        "(",
        "n",
        ")",
        "'-0b100101'",
        ">>> ",
        "n",
        ".",
        "bit_length",
        "()",
        "6"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4146,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "More precisely, if <tt class=\"docutils literal\"><span class=\"pre\">x</span></tt> is nonzero, then <tt class=\"docutils literal\"><span class=\"pre\">x.bit_length()</span></tt> is the\nunique positive integer <tt class=\"docutils literal\"><span class=\"pre\">k</span></tt> such that <tt class=\"docutils literal\"><span class=\"pre\">2**(k-1)</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">abs(x)</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">2**k</span></tt>.\nEquivalently, when <tt class=\"docutils literal\"><span class=\"pre\">abs(x)</span></tt> is small enough to have a correctly\nrounded logarithm, then <tt class=\"docutils literal\"><span class=\"pre\">k</span> <span class=\"pre\">=</span> <span class=\"pre\">1</span> <span class=\"pre\">+</span> <span class=\"pre\">int(log(abs(x),</span> <span class=\"pre\">2))</span></tt>.\nIf <tt class=\"docutils literal\"><span class=\"pre\">x</span></tt> is zero, then <tt class=\"docutils literal\"><span class=\"pre\">x.bit_length()</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "More precisely, if ",
        "x",
        " is nonzero, then ",
        "x.bit_length()",
        " is the\nunique positive integer ",
        "k",
        " such that ",
        "2**(k-1)",
        "<=",
        "abs(x)",
        "<",
        "2**k",
        ".\nEquivalently, when ",
        "abs(x)",
        " is small enough to have a correctly\nrounded logarithm, then ",
        "k",
        "=",
        "1",
        "+",
        "int(log(abs(x),",
        "2))",
        ".\nIf ",
        "x",
        " is zero, then ",
        "x.bit_length()",
        " returns ",
        "0",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4206,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Equivalent to:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Equivalent to:"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 4244,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">def</span> <span class=\"nf\">bit_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">bin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>       <span class=\"c\"># binary representation:  bin(-37) --&gt; '-0b100101'</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s\">'-0b'</span><span class=\"p\">)</span> <span class=\"c\"># remove leading zeros and minus sign</span>\n    <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>       <span class=\"c\"># len('100101') --&gt; 6</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "def",
        "bit_length",
        "(",
        "self",
        "):",
        "s",
        "=",
        "bin",
        "(",
        "self",
        ")",
        "# binary representation:  bin(-37) --> '-0b100101'",
        "s",
        "=",
        "s",
        ".",
        "lstrip",
        "(",
        "'-0b'",
        ")",
        "# remove leading zeros and minus sign",
        "return",
        "len",
        "(",
        "s",
        ")",
        "# len('100101') --> 6"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4343,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(4)",
      "html": "\n<span class=\"versionmodified\">New in version 3.1.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p.versionadded:nth-of-type(4)",
      "text": [
        "New in version 3.1."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4381,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#int.to_bytes:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">int.</tt><tt class=\"descname\">to_bytes</tt><big>(</big><em>length</em>, <em>byteorder</em>, <em>*</em>, <em>signed=False</em><big>)</big><a class=\"headerlink\" href=\"#int.to_bytes\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dt#int.to_bytes:nth-of-type(1)",
      "text": [
        "int.",
        "to_bytes",
        "(",
        "length",
        ", ",
        "byteorder",
        ", ",
        "*",
        ", ",
        "signed=False",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4409,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an array of bytes representing an integer.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an array of bytes representing an integer."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 4447,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 295,
        "top": 4447,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'big'</span><span class=\"p\">)</span>\n<span class=\"go\">b'\\x04\\x00'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'big'</span><span class=\"p\">)</span>\n<span class=\"go\">b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1024</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'big'</span><span class=\"p\">,</span> <span class=\"n\">signed</span><span class=\"o\">=</span><span class=\"k\">True</span><span class=\"p\">)</span>\n<span class=\"go\">b'\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xfc\\x00'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">bit_length</span><span class=\"p\">()</span> <span class=\"o\">//</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'little'</span><span class=\"p\">)</span>\n<span class=\"go\">b'\\xe8\\x03'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "(",
        "1024",
        ")",
        ".",
        "to_bytes",
        "(",
        "2",
        ",",
        "byteorder",
        "=",
        "'big'",
        ")",
        "b'\\x04\\x00'",
        ">>> ",
        "(",
        "1024",
        ")",
        ".",
        "to_bytes",
        "(",
        "10",
        ",",
        "byteorder",
        "=",
        "'big'",
        ")",
        "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00'",
        ">>> ",
        "(",
        "-",
        "1024",
        ")",
        ".",
        "to_bytes",
        "(",
        "10",
        ",",
        "byteorder",
        "=",
        "'big'",
        ",",
        "signed",
        "=",
        "True",
        ")",
        "b'\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xfc\\x00'",
        ">>> ",
        "x",
        "=",
        "1000",
        ">>> ",
        "x",
        ".",
        "to_bytes",
        "((",
        "x",
        ".",
        "bit_length",
        "()",
        "//",
        "8",
        ")",
        "+",
        "1",
        ",",
        "byteorder",
        "=",
        "'little'",
        ")",
        "b'\\xe8\\x03'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4636,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The integer is represented using <em>length</em> bytes.  An <a class=\"reference internal\" href=\"exceptions.html#OverflowError\" title=\"OverflowError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></tt></a>\nis raised if the integer is not representable with the given number of\nbytes.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The integer is represented using ",
        "length",
        " bytes.  An ",
        "OverflowError",
        "\nis raised if the integer is not representable with the given number of\nbytes."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4674,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <em>byteorder</em> argument determines the byte order used to represent the\ninteger.  If <em>byteorder</em> is <tt class=\"docutils literal\"><span class=\"pre\">\"big\"</span></tt>, the most significant byte is at the\nbeginning of the byte array.  If <em>byteorder</em> is <tt class=\"docutils literal\"><span class=\"pre\">\"little\"</span></tt>, the most\nsignificant byte is at the end of the byte array.  To request the native\nbyte order of the host system, use <a class=\"reference internal\" href=\"sys.html#sys.byteorder\" title=\"sys.byteorder\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.byteorder</span></tt></a> as the byte order\nvalue.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "byteorder",
        " argument determines the byte order used to represent the\ninteger.  If ",
        "byteorder",
        " is ",
        "\"big\"",
        ", the most significant byte is at the\nbeginning of the byte array.  If ",
        "byteorder",
        " is ",
        "\"little\"",
        ", the most\nsignificant byte is at the end of the byte array.  To request the native\nbyte order of the host system, use ",
        "sys.byteorder",
        " as the byte order\nvalue."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4734,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The <em>signed</em> argument determines whether two’s complement is used to\nrepresent the integer.  If <em>signed</em> is <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> and a negative integer is\ngiven, an <a class=\"reference internal\" href=\"exceptions.html#OverflowError\" title=\"OverflowError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></tt></a> is raised. The default value for <em>signed</em>\nis <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "The ",
        "signed",
        " argument determines whether two’s complement is used to\nrepresent the integer.  If ",
        "signed",
        " is ",
        "False",
        " and a negative integer is\ngiven, an ",
        "OverflowError",
        " is raised. The default value for ",
        "signed",
        "\nis ",
        "False",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4794,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(5)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p.versionadded:nth-of-type(5)",
      "text": [
        "New in version 3.2."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4832,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#int.from_bytes:nth-of-type(1)",
      "html": "\n<em class=\"property\">classmethod </em><tt class=\"descclassname\">int.</tt><tt class=\"descname\">from_bytes</tt><big>(</big><em>bytes</em>, <em>byteorder</em>, <em>*</em>, <em>signed=False</em><big>)</big><a class=\"headerlink\" href=\"#int.from_bytes\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dt#int.from_bytes:nth-of-type(1)",
      "text": [
        "classmethod ",
        "int.",
        "from_bytes",
        "(",
        "bytes",
        ", ",
        "byteorder",
        ", ",
        "*",
        ", ",
        "signed=False",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4860,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the integer represented by the given array of bytes.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the integer represented by the given array of bytes."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 4898,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 295,
        "top": 4898,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"o\">.</span><span class=\"n\">from_bytes</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'</span><span class=\"se\">\\x00\\x10</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'big'</span><span class=\"p\">)</span>\n<span class=\"go\">16</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"o\">.</span><span class=\"n\">from_bytes</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'</span><span class=\"se\">\\x00\\x10</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'little'</span><span class=\"p\">)</span>\n<span class=\"go\">4096</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"o\">.</span><span class=\"n\">from_bytes</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'</span><span class=\"se\">\\xfc\\x00</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'big'</span><span class=\"p\">,</span> <span class=\"n\">signed</span><span class=\"o\">=</span><span class=\"k\">True</span><span class=\"p\">)</span>\n<span class=\"go\">-1024</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"o\">.</span><span class=\"n\">from_bytes</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'</span><span class=\"se\">\\xfc\\x00</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'big'</span><span class=\"p\">,</span> <span class=\"n\">signed</span><span class=\"o\">=</span><span class=\"k\">False</span><span class=\"p\">)</span>\n<span class=\"go\">64512</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"o\">.</span><span class=\"n\">from_bytes</span><span class=\"p\">([</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">byteorder</span><span class=\"o\">=</span><span class=\"s\">'big'</span><span class=\"p\">)</span>\n<span class=\"go\">16711680</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "int",
        ".",
        "from_bytes",
        "(",
        "b",
        "'",
        "\\x00\\x10",
        "'",
        ",",
        "byteorder",
        "=",
        "'big'",
        ")",
        "16",
        ">>> ",
        "int",
        ".",
        "from_bytes",
        "(",
        "b",
        "'",
        "\\x00\\x10",
        "'",
        ",",
        "byteorder",
        "=",
        "'little'",
        ")",
        "4096",
        ">>> ",
        "int",
        ".",
        "from_bytes",
        "(",
        "b",
        "'",
        "\\xfc\\x00",
        "'",
        ",",
        "byteorder",
        "=",
        "'big'",
        ",",
        "signed",
        "=",
        "True",
        ")",
        "-1024",
        ">>> ",
        "int",
        ".",
        "from_bytes",
        "(",
        "b",
        "'",
        "\\xfc\\x00",
        "'",
        ",",
        "byteorder",
        "=",
        "'big'",
        ",",
        "signed",
        "=",
        "False",
        ")",
        "64512",
        ">>> ",
        "int",
        ".",
        "from_bytes",
        "([",
        "255",
        ",",
        "0",
        ",",
        "0",
        "],",
        "byteorder",
        "=",
        "'big'",
        ")",
        "16711680"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5105,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The argument <em>bytes</em> must either be a <a class=\"reference internal\" href=\"../glossary.html#term-bytes-like-object\"><em class=\"xref std std-term\">bytes-like object</em></a> or an\niterable producing bytes.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The argument ",
        "bytes",
        " must either be a ",
        "bytes-like object",
        " or an\niterable producing bytes."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 5143,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <em>byteorder</em> argument determines the byte order used to represent the\ninteger.  If <em>byteorder</em> is <tt class=\"docutils literal\"><span class=\"pre\">\"big\"</span></tt>, the most significant byte is at the\nbeginning of the byte array.  If <em>byteorder</em> is <tt class=\"docutils literal\"><span class=\"pre\">\"little\"</span></tt>, the most\nsignificant byte is at the end of the byte array.  To request the native\nbyte order of the host system, use <a class=\"reference internal\" href=\"sys.html#sys.byteorder\" title=\"sys.byteorder\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.byteorder</span></tt></a> as the byte order\nvalue.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "byteorder",
        " argument determines the byte order used to represent the\ninteger.  If ",
        "byteorder",
        " is ",
        "\"big\"",
        ", the most significant byte is at the\nbeginning of the byte array.  If ",
        "byteorder",
        " is ",
        "\"little\"",
        ", the most\nsignificant byte is at the end of the byte array.  To request the native\nbyte order of the host system, use ",
        "sys.byteorder",
        " as the byte order\nvalue."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5203,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The <em>signed</em> argument indicates whether two’s complement is used to\nrepresent the integer.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "The ",
        "signed",
        " argument indicates whether two’s complement is used to\nrepresent the integer."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5241,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(5)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-integer-types.section:nth-of-type(2) > dl.classmethod:nth-of-type(3) > dd:nth-of-type(1) > p.versionadded:nth-of-type(5)",
      "text": [
        "New in version 3.2."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 5279,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.4.3. Additional Methods on Float<a class=\"headerlink\" href=\"#additional-methods-on-float\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > h3:nth-of-type(1)",
      "text": [
        "4.4.3. Additional Methods on Float",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5334,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The float type implements the <a class=\"reference internal\" href=\"numbers.html#numbers.Real\" title=\"numbers.Real\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">numbers.Real</span></tt></a> <a class=\"reference internal\" href=\"../glossary.html#term-abstract-base-class\"><em class=\"xref std std-term\">abstract base\nclass</em></a>. float also has the following additional methods.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > p:nth-of-type(1)",
      "text": [
        "The float type implements the ",
        "numbers.Real",
        "abstract base\nclass",
        ". float also has the following additional methods."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 5372,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#float.as_integer_ratio:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">float.</tt><tt class=\"descname\">as_integer_ratio</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#float.as_integer_ratio\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(1) > dt#float.as_integer_ratio:nth-of-type(1)",
      "text": [
        "float.",
        "as_integer_ratio",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5400,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a pair of integers whose ratio is exactly equal to the\noriginal float and with a positive denominator.  Raises\n<a class=\"reference internal\" href=\"exceptions.html#OverflowError\" title=\"OverflowError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></tt></a> on infinities and a <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> on\nNaNs.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a pair of integers whose ratio is exactly equal to the\noriginal float and with a positive denominator.  Raises\n",
        "OverflowError",
        " on infinities and a ",
        "ValueError",
        " on\nNaNs."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 5438,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#float.is_integer:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">float.</tt><tt class=\"descname\">is_integer</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#float.is_integer\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(2) > dt#float.is_integer:nth-of-type(1)",
      "text": [
        "float.",
        "is_integer",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5466,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> if the float instance is finite with integral\nvalue, and <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> otherwise:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return ",
        "True",
        " if the float instance is finite with integral\nvalue, and ",
        "False",
        " otherwise:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 5504,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 5504,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">2.0</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_integer</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"mf\">3.2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_integer</span><span class=\"p\">()</span>\n<span class=\"go\">False</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "(",
        "-",
        "2.0",
        ")",
        ".",
        "is_integer",
        "()",
        "True",
        ">>> ",
        "(",
        "3.2",
        ")",
        ".",
        "is_integer",
        "()",
        "False"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 5604,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Two methods support conversion to\nand from hexadecimal strings.  Since Python’s floats are stored\ninternally as binary numbers, converting a float to or from a\n<em>decimal</em> string usually involves a small rounding error.  In\ncontrast, hexadecimal strings allow exact representation and\nspecification of floating-point numbers.  This can be useful when\ndebugging, and in numerical work.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "Two methods support conversion to\nand from hexadecimal strings.  Since Python’s floats are stored\ninternally as binary numbers, converting a float to or from a\n",
        "decimal",
        " string usually involves a small rounding error.  In\ncontrast, hexadecimal strings allow exact representation and\nspecification of floating-point numbers.  This can be useful when\ndebugging, and in numerical work."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 5686,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#float.hex:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">float.</tt><tt class=\"descname\">hex</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#float.hex\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(3) > dt#float.hex:nth-of-type(1)",
      "text": [
        "float.",
        "hex",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 5714,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a representation of a floating-point number as a hexadecimal\nstring.  For finite floating-point numbers, this representation\nwill always include a leading <tt class=\"docutils literal\"><span class=\"pre\">0x</span></tt> and a trailing <tt class=\"docutils literal\"><span class=\"pre\">p</span></tt> and\nexponent.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a representation of a floating-point number as a hexadecimal\nstring.  For finite floating-point numbers, this representation\nwill always include a leading ",
        "0x",
        " and a trailing ",
        "p",
        " and\nexponent."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 5774,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#float.fromhex:nth-of-type(1)",
      "html": "\n<em class=\"property\">classmethod </em><tt class=\"descclassname\">float.</tt><tt class=\"descname\">fromhex</tt><big>(</big><em>s</em><big>)</big><a class=\"headerlink\" href=\"#float.fromhex\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.classmethod:nth-of-type(4) > dt#float.fromhex:nth-of-type(1)",
      "text": [
        "classmethod ",
        "float.",
        "fromhex",
        "(",
        "s",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 5802,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Class method to return the float represented by a hexadecimal\nstring <em>s</em>.  The string <em>s</em> may have leading and trailing\nwhitespace.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > dl.classmethod:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Class method to return the float represented by a hexadecimal\nstring ",
        "s",
        ".  The string ",
        "s",
        " may have leading and trailing\nwhitespace."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5840,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Note that <a class=\"reference internal\" href=\"#float.hex\" title=\"float.hex\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">float.hex()</span></tt></a> is an instance method, while\n<a class=\"reference internal\" href=\"#float.fromhex\" title=\"float.fromhex\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">float.fromhex()</span></tt></a> is a class method.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "Note that ",
        "float.hex()",
        " is an instance method, while\n",
        "float.fromhex()",
        " is a class method."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 5878,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "A hexadecimal string takes the form:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > p:nth-of-type(4)",
      "text": [
        "A hexadecimal string takes the form:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 5916,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"p\">[</span><span class=\"n\">sign</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"s\">'0x'</span><span class=\"p\">]</span> <span class=\"n\">integer</span> <span class=\"p\">[</span><span class=\"s\">'.'</span> <span class=\"n\">fraction</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"s\">'p'</span> <span class=\"n\">exponent</span><span class=\"p\">]</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "[",
        "sign",
        "]",
        "[",
        "'0x'",
        "]",
        "integer",
        "[",
        "'.'",
        "fraction",
        "]",
        "[",
        "'p'",
        "exponent",
        "]"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 5962,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "where the optional <tt class=\"docutils literal\"><span class=\"pre\">sign</span></tt> may by either <tt class=\"docutils literal\"><span class=\"pre\">+</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">-</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">integer</span></tt>\nand <tt class=\"docutils literal\"><span class=\"pre\">fraction</span></tt> are strings of hexadecimal digits, and <tt class=\"docutils literal\"><span class=\"pre\">exponent</span></tt>\nis a decimal integer with an optional leading sign.  Case is not\nsignificant, and there must be at least one hexadecimal digit in\neither the integer or the fraction.  This syntax is similar to the\nsyntax specified in section 6.4.4.2 of the C99 standard, and also to\nthe syntax used in Java 1.5 onwards.  In particular, the output of\n<a class=\"reference internal\" href=\"#float.hex\" title=\"float.hex\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">float.hex()</span></tt></a> is usable as a hexadecimal floating-point literal in\nC or Java code, and hexadecimal strings produced by C’s <tt class=\"docutils literal\"><span class=\"pre\">%a</span></tt> format\ncharacter or Java’s <tt class=\"docutils literal\"><span class=\"pre\">Double.toHexString</span></tt> are accepted by\n<a class=\"reference internal\" href=\"#float.fromhex\" title=\"float.fromhex\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">float.fromhex()</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > p:nth-of-type(5)",
      "text": [
        "where the optional ",
        "sign",
        " may by either ",
        "+",
        " or ",
        "-",
        ", ",
        "integer",
        "\nand ",
        "fraction",
        " are strings of hexadecimal digits, and ",
        "exponent",
        "\nis a decimal integer with an optional leading sign.  Case is not\nsignificant, and there must be at least one hexadecimal digit in\neither the integer or the fraction.  This syntax is similar to the\nsyntax specified in section 6.4.4.2 of the C99 standard, and also to\nthe syntax used in Java 1.5 onwards.  In particular, the output of\n",
        "float.hex()",
        " is usable as a hexadecimal floating-point literal in\nC or Java code, and hexadecimal strings produced by C’s ",
        "%a",
        " format\ncharacter or Java’s ",
        "Double.toHexString",
        " are accepted by\n",
        "float.fromhex()",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 6066,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Note that the exponent is written in decimal rather than hexadecimal,\nand that it gives the power of 2 by which to multiply the coefficient.\nFor example, the hexadecimal string <tt class=\"docutils literal\"><span class=\"pre\">0x3.a7p10</span></tt> represents the\nfloating-point number <tt class=\"docutils literal\"><span class=\"pre\">(3</span> <span class=\"pre\">+</span> <span class=\"pre\">10./16</span> <span class=\"pre\">+</span> <span class=\"pre\">7./16**2)</span> <span class=\"pre\">*</span> <span class=\"pre\">2.0**10</span></tt>, or\n<tt class=\"docutils literal\"><span class=\"pre\">3740.0</span></tt>:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > p:nth-of-type(6)",
      "text": [
        "Note that the exponent is written in decimal rather than hexadecimal,\nand that it gives the power of 2 by which to multiply the coefficient.\nFor example, the hexadecimal string ",
        "0x3.a7p10",
        " represents the\nfloating-point number ",
        "(3",
        "+",
        "10./16",
        "+",
        "7./16**2)",
        "*",
        "2.0**10",
        ", or\n",
        "3740.0",
        ":"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6126,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 6126,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s\">'0x3.a7p10'</span><span class=\"p\">)</span>\n<span class=\"go\">3740.0</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "float",
        ".",
        "fromhex",
        "(",
        "'0x3.a7p10'",
        ")",
        "3740.0"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6190,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Applying the reverse conversion to <tt class=\"docutils literal\"><span class=\"pre\">3740.0</span></tt> gives a different\nhexadecimal string representing the same number:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > p:nth-of-type(7)",
      "text": [
        "Applying the reverse conversion to ",
        "3740.0",
        " gives a different\nhexadecimal string representing the same number:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 6228,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 6228,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">(</span><span class=\"mf\">3740.0</span><span class=\"p\">)</span>\n<span class=\"go\">'0x1.d380000000000p+11'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#additional-methods-on-float.section:nth-of-type(3) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "float",
        ".",
        "hex",
        "(",
        "3740.0",
        ")",
        "'0x1.d380000000000p+11'"
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 6291,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.4.4. Hashing of numeric types<a class=\"headerlink\" href=\"#hashing-of-numeric-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > h3:nth-of-type(1)",
      "text": [
        "4.4.4. Hashing of numeric types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 6346,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "For numbers <tt class=\"docutils literal\"><span class=\"pre\">x</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">y</span></tt>, possibly of different types, it’s a requirement\nthat <tt class=\"docutils literal\"><span class=\"pre\">hash(x)</span> <span class=\"pre\">==</span> <span class=\"pre\">hash(y)</span></tt> whenever <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">==</span> <span class=\"pre\">y</span></tt> (see the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__hash__\" title=\"object.__hash__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__hash__()</span></tt></a>\nmethod documentation for more details).  For ease of implementation and\nefficiency across a variety of numeric types (including <a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a>,\n<a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">float</span></tt></a>, <a class=\"reference internal\" href=\"decimal.html#decimal.Decimal\" title=\"decimal.Decimal\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">decimal.Decimal</span></tt></a> and <a class=\"reference internal\" href=\"fractions.html#fractions.Fraction\" title=\"fractions.Fraction\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">fractions.Fraction</span></tt></a>)\nPython’s hash for numeric types is based on a single mathematical function\nthat’s defined for any rational number, and hence applies to all instances of\n<a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> and <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">fraction.Fraction</span></tt>, and all finite instances of\n<a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">float</span></tt></a> and <a class=\"reference internal\" href=\"decimal.html#decimal.Decimal\" title=\"decimal.Decimal\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">decimal.Decimal</span></tt></a>.  Essentially, this function is\ngiven by reduction modulo <tt class=\"docutils literal\"><span class=\"pre\">P</span></tt> for a fixed prime <tt class=\"docutils literal\"><span class=\"pre\">P</span></tt>.  The value of <tt class=\"docutils literal\"><span class=\"pre\">P</span></tt> is\nmade available to Python as the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">modulus</span></tt> attribute of\n<a class=\"reference internal\" href=\"sys.html#sys.hash_info\" title=\"sys.hash_info\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.hash_info</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > p:nth-of-type(1)",
      "text": [
        "For numbers ",
        "x",
        " and ",
        "y",
        ", possibly of different types, it’s a requirement\nthat ",
        "hash(x)",
        "==",
        "hash(y)",
        " whenever ",
        "x",
        "==",
        "y",
        " (see the ",
        "__hash__()",
        "\nmethod documentation for more details).  For ease of implementation and\nefficiency across a variety of numeric types (including ",
        "int",
        ",\n",
        "float",
        ", ",
        "decimal.Decimal",
        " and ",
        "fractions.Fraction",
        ")\nPython’s hash for numeric types is based on a single mathematical function\nthat’s defined for any rational number, and hence applies to all instances of\n",
        "int",
        " and ",
        "fraction.Fraction",
        ", and all finite instances of\n",
        "float",
        " and ",
        "decimal.Decimal",
        ".  Essentially, this function is\ngiven by reduction modulo ",
        "P",
        " for a fixed prime ",
        "P",
        ".  The value of ",
        "P",
        " is\nmade available to Python as the ",
        "modulus",
        " attribute of\n",
        "sys.hash_info",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 273,
        "top": 6458,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<strong>CPython implementation detail:</strong> Currently, the prime used is <tt class=\"docutils literal\"><span class=\"pre\">P</span> <span class=\"pre\">=</span> <span class=\"pre\">2**31</span> <span class=\"pre\">-</span> <span class=\"pre\">1</span></tt> on machines with 32-bit C\nlongs and <tt class=\"docutils literal\"><span class=\"pre\">P</span> <span class=\"pre\">=</span> <span class=\"pre\">2**61</span> <span class=\"pre\">-</span> <span class=\"pre\">1</span></tt> on machines with 64-bit C longs.",
      "path": "div > div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > div.compound.impl-detail:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "CPython implementation detail:",
        " Currently, the prime used is ",
        "P",
        "=",
        "2**31",
        "-",
        "1",
        " on machines with 32-bit C\nlongs and ",
        "P",
        "=",
        "2**61",
        "-",
        "1",
        " on machines with 64-bit C longs."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6504,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Here are the rules in detail:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "Here are the rules in detail:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 6542,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "If <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">=</span> <span class=\"pre\">m</span> <span class=\"pre\">/</span> <span class=\"pre\">n</span></tt> is a nonnegative rational number and <tt class=\"docutils literal\"><span class=\"pre\">n</span></tt> is not divisible\nby <tt class=\"docutils literal\"><span class=\"pre\">P</span></tt>, define <tt class=\"docutils literal\"><span class=\"pre\">hash(x)</span></tt> as <tt class=\"docutils literal\"><span class=\"pre\">m</span> <span class=\"pre\">*</span> <span class=\"pre\">invmod(n,</span> <span class=\"pre\">P)</span> <span class=\"pre\">%</span> <span class=\"pre\">P</span></tt>, where <tt class=\"docutils literal\"><span class=\"pre\">invmod(n,</span>\n<span class=\"pre\">P)</span></tt> gives the inverse of <tt class=\"docutils literal\"><span class=\"pre\">n</span></tt> modulo <tt class=\"docutils literal\"><span class=\"pre\">P</span></tt>.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "If ",
        "x",
        "=",
        "m",
        "/",
        "n",
        " is a nonnegative rational number and ",
        "n",
        " is not divisible\nby ",
        "P",
        ", define ",
        "hash(x)",
        " as ",
        "m",
        "*",
        "invmod(n,",
        "P)",
        "%",
        "P",
        ", where ",
        "invmod(n,",
        "P)",
        " gives the inverse of ",
        "n",
        " modulo ",
        "P",
        "."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 6562,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "If <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">=</span> <span class=\"pre\">m</span> <span class=\"pre\">/</span> <span class=\"pre\">n</span></tt> is a nonnegative rational number and <tt class=\"docutils literal\"><span class=\"pre\">n</span></tt> is\ndivisible by <tt class=\"docutils literal\"><span class=\"pre\">P</span></tt> (but <tt class=\"docutils literal\"><span class=\"pre\">m</span></tt> is not) then <tt class=\"docutils literal\"><span class=\"pre\">n</span></tt> has no inverse\nmodulo <tt class=\"docutils literal\"><span class=\"pre\">P</span></tt> and the rule above doesn’t apply; in this case define\n<tt class=\"docutils literal\"><span class=\"pre\">hash(x)</span></tt> to be the constant value <tt class=\"docutils literal\"><span class=\"pre\">sys.hash_info.inf</span></tt>.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "If ",
        "x",
        "=",
        "m",
        "/",
        "n",
        " is a nonnegative rational number and ",
        "n",
        " is\ndivisible by ",
        "P",
        " (but ",
        "m",
        " is not) then ",
        "n",
        " has no inverse\nmodulo ",
        "P",
        " and the rule above doesn’t apply; in this case define\n",
        "hash(x)",
        " to be the constant value ",
        "sys.hash_info.inf",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 6602,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "If <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">=</span> <span class=\"pre\">m</span> <span class=\"pre\">/</span> <span class=\"pre\">n</span></tt> is a negative rational number define <tt class=\"docutils literal\"><span class=\"pre\">hash(x)</span></tt>\nas <tt class=\"docutils literal\"><span class=\"pre\">-hash(-x)</span></tt>.  If the resulting hash is <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt>, replace it with\n<tt class=\"docutils literal\"><span class=\"pre\">-2</span></tt>.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "If ",
        "x",
        "=",
        "m",
        "/",
        "n",
        " is a negative rational number define ",
        "hash(x)",
        "\nas ",
        "-hash(-x)",
        ".  If the resulting hash is ",
        "-1",
        ", replace it with\n",
        "-2",
        "."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 6622,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "The particular values <tt class=\"docutils literal\"><span class=\"pre\">sys.hash_info.inf</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">-sys.hash_info.inf</span></tt>\nand <tt class=\"docutils literal\"><span class=\"pre\">sys.hash_info.nan</span></tt> are used as hash values for positive\ninfinity, negative infinity, or nans (respectively).  (All hashable\nnans have the same hash value.)",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > ul.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "The particular values ",
        "sys.hash_info.inf",
        ", ",
        "-sys.hash_info.inf",
        "\nand ",
        "sys.hash_info.nan",
        " are used as hash values for positive\ninfinity, negative infinity, or nans (respectively).  (All hashable\nnans have the same hash value.)"
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 6662,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(5)",
      "html": "For a <a class=\"reference internal\" href=\"functions.html#complex\" title=\"complex\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">complex</span></tt></a> number <tt class=\"docutils literal\"><span class=\"pre\">z</span></tt>, the hash values of the real\nand imaginary parts are combined by computing <tt class=\"docutils literal\"><span class=\"pre\">hash(z.real)</span> <span class=\"pre\">+</span>\n<span class=\"pre\">sys.hash_info.imag</span> <span class=\"pre\">*</span> <span class=\"pre\">hash(z.imag)</span></tt>, reduced modulo\n<tt class=\"docutils literal\"><span class=\"pre\">2**sys.hash_info.width</span></tt> so that it lies in\n<tt class=\"docutils literal\"><span class=\"pre\">range(-2**(sys.hash_info.width</span> <span class=\"pre\">-</span> <span class=\"pre\">1),</span> <span class=\"pre\">2**(sys.hash_info.width</span> <span class=\"pre\">-</span>\n<span class=\"pre\">1))</span></tt>.  Again, if the result is <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt>, it’s replaced with <tt class=\"docutils literal\"><span class=\"pre\">-2</span></tt>.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > ul.simple:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "For a ",
        "complex",
        " number ",
        "z",
        ", the hash values of the real\nand imaginary parts are combined by computing ",
        "hash(z.real)",
        "+",
        "sys.hash_info.imag",
        "*",
        "hash(z.imag)",
        ", reduced modulo\n",
        "2**sys.hash_info.width",
        " so that it lies in\n",
        "range(-2**(sys.hash_info.width",
        "-",
        "1),",
        "2**(sys.hash_info.width",
        "-",
        "1))",
        ".  Again, if the result is ",
        "-1",
        ", it’s replaced with ",
        "-2",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 6718,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "To clarify the above rules, here’s some example Python code,\nequivalent to the built-in hash, for computing the hash of a rational\nnumber, <a class=\"reference internal\" href=\"functions.html#float\" title=\"float\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">float</span></tt></a>, or <a class=\"reference internal\" href=\"functions.html#complex\" title=\"complex\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">complex</span></tt></a>:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > p:nth-of-type(3)",
      "text": [
        "To clarify the above rules, here’s some example Python code,\nequivalent to the built-in hash, for computing the hash of a rational\nnumber, ",
        "float",
        ", or ",
        "complex",
        ":"
      ]
    },
    {
      "bound": {
        "height": 840,
        "left": 265,
        "top": 6756,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"kn\">import</span> <span class=\"nn\">sys</span><span class=\"o\">,</span> <span class=\"nn\">math</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hash_fraction</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Compute the hash of a rational number m / n.</span>\n\n<span class=\"sd\">    Assumes m and n are integers, with n positive.</span>\n<span class=\"sd\">    Equivalent to hash(fractions.Fraction(m, n)).</span>\n\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">hash_info</span><span class=\"o\">.</span><span class=\"n\">modulus</span>\n    <span class=\"c\"># Remove common factors of P.  (Unnecessary if m and n already coprime.)</span>\n    <span class=\"k\">while</span> <span class=\"n\">m</span> <span class=\"o\">%</span> <span class=\"n\">P</span> <span class=\"o\">==</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"n\">P</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">m</span> <span class=\"o\">//</span> <span class=\"n\">P</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">//</span> <span class=\"n\">P</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"n\">P</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">hash_</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">hash_info</span><span class=\"o\">.</span><span class=\"n\">inf</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c\"># Fermat's Little Theorem: pow(n, P-1, P) is 1, so</span>\n        <span class=\"c\"># pow(n, P-2, P) gives the inverse of n modulo P.</span>\n        <span class=\"n\">hash_</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">P</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">pow</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">P</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">P</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">P</span>\n    <span class=\"k\">if</span> <span class=\"n\">m</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">hash_</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">hash_</span>\n    <span class=\"k\">if</span> <span class=\"n\">hash_</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">hash_</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">2</span>\n    <span class=\"k\">return</span> <span class=\"n\">hash_</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hash_float</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Compute the hash of a float x.\"\"\"</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">isnan</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">hash_info</span><span class=\"o\">.</span><span class=\"n\">nan</span>\n    <span class=\"k\">elif</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">isinf</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">hash_info</span><span class=\"o\">.</span><span class=\"n\">inf</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"o\">-</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">hash_info</span><span class=\"o\">.</span><span class=\"n\">inf</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">hash_fraction</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">as_integer_ratio</span><span class=\"p\">())</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hash_complex</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Compute the hash of a complex number z.\"\"\"</span>\n\n    <span class=\"n\">hash_</span> <span class=\"o\">=</span> <span class=\"n\">hash_float</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">real</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">hash_info</span><span class=\"o\">.</span><span class=\"n\">imag</span> <span class=\"o\">*</span> <span class=\"n\">hash_float</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">imag</span><span class=\"p\">)</span>\n    <span class=\"c\"># do a signed reduction modulo 2**sys.hash_info.width</span>\n    <span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">hash_info</span><span class=\"o\">.</span><span class=\"n\">width</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">hash_</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">hash_</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">M</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"nb\">hash</span> <span class=\"o\">&amp;</span> <span class=\"n\">M</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">hash_</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">hash_</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">2</span>\n    <span class=\"k\">return</span> <span class=\"n\">hash_</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#numeric-types-int-float-complex.section:nth-of-type(4) > div#hashing-of-numeric-types.section:nth-of-type(4) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "import",
        "sys",
        ",",
        "math",
        "def",
        "hash_fraction",
        "(",
        "m",
        ",",
        "n",
        "):",
        "\"\"\"Compute the hash of a rational number m / n.",
        "    Assumes m and n are integers, with n positive.",
        "    Equivalent to hash(fractions.Fraction(m, n)).",
        "    \"\"\"",
        "P",
        "=",
        "sys",
        ".",
        "hash_info",
        ".",
        "modulus",
        "# Remove common factors of P.  (Unnecessary if m and n already coprime.)",
        "while",
        "m",
        "%",
        "P",
        "==",
        "n",
        "%",
        "P",
        "==",
        "0",
        ":",
        "m",
        ",",
        "n",
        "=",
        "m",
        "//",
        "P",
        ",",
        "n",
        "//",
        "P",
        "if",
        "n",
        "%",
        "P",
        "==",
        "0",
        ":",
        "hash_",
        "=",
        "sys",
        ".",
        "hash_info",
        ".",
        "inf",
        "else",
        ":",
        "# Fermat's Little Theorem: pow(n, P-1, P) is 1, so",
        "# pow(n, P-2, P) gives the inverse of n modulo P.",
        "hash_",
        "=",
        "(",
        "abs",
        "(",
        "m",
        ")",
        "%",
        "P",
        ")",
        "*",
        "pow",
        "(",
        "n",
        ",",
        "P",
        "-",
        "2",
        ",",
        "P",
        ")",
        "%",
        "P",
        "if",
        "m",
        "<",
        "0",
        ":",
        "hash_",
        "=",
        "-",
        "hash_",
        "if",
        "hash_",
        "==",
        "-",
        "1",
        ":",
        "hash_",
        "=",
        "-",
        "2",
        "return",
        "hash_",
        "def",
        "hash_float",
        "(",
        "x",
        "):",
        "\"\"\"Compute the hash of a float x.\"\"\"",
        "if",
        "math",
        ".",
        "isnan",
        "(",
        "x",
        "):",
        "return",
        "sys",
        ".",
        "hash_info",
        ".",
        "nan",
        "elif",
        "math",
        ".",
        "isinf",
        "(",
        "x",
        "):",
        "return",
        "sys",
        ".",
        "hash_info",
        ".",
        "inf",
        "if",
        "x",
        ">",
        "0",
        "else",
        "-",
        "sys",
        ".",
        "hash_info",
        ".",
        "inf",
        "else",
        ":",
        "return",
        "hash_fraction",
        "(",
        "*",
        "x",
        ".",
        "as_integer_ratio",
        "())",
        "def",
        "hash_complex",
        "(",
        "z",
        "):",
        "\"\"\"Compute the hash of a complex number z.\"\"\"",
        "hash_",
        "=",
        "hash_float",
        "(",
        "z",
        ".",
        "real",
        ")",
        "+",
        "sys",
        ".",
        "hash_info",
        ".",
        "imag",
        "*",
        "hash_float",
        "(",
        "z",
        ".",
        "imag",
        ")",
        "# do a signed reduction modulo 2**sys.hash_info.width",
        "M",
        "=",
        "2",
        "**",
        "(",
        "sys",
        ".",
        "hash_info",
        ".",
        "width",
        "-",
        "1",
        ")",
        "hash_",
        "=",
        "(",
        "hash_",
        "&",
        "(",
        "M",
        "-",
        "1",
        "))",
        "-",
        "(",
        "hash",
        "&",
        "M",
        ")",
        "if",
        "hash_",
        "==",
        "-",
        "1",
        ":",
        "hash_",
        "==",
        "-",
        "2",
        "return",
        "hash_"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 7611,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.5. Iterator Types<a class=\"headerlink\" href=\"#iterator-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > h2:nth-of-type(1)",
      "text": [
        "4.5. Iterator Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 7673,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-18:nth-of-type(1)",
      "html": "Python supports a concept of iteration over containers.  This is implemented\nusing two distinct methods; these are used to allow user-defined classes to\nsupport iteration.  Sequences, described below in more detail, always support\nthe iteration methods.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > p#index-18:nth-of-type(1)",
      "text": [
        "Python supports a concept of iteration over containers.  This is implemented\nusing two distinct methods; these are used to allow user-defined classes to\nsupport iteration.  Sequences, described below in more detail, always support\nthe iteration methods."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7733,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "One method needs to be defined for container objects to provide iteration\nsupport:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > p:nth-of-type(2)",
      "text": [
        "One method needs to be defined for container objects to provide iteration\nsupport:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 7771,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#container.__iter__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">container.</tt><tt class=\"descname\">__iter__</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#container.__iter__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > dl.method:nth-of-type(1) > dt#container.__iter__:nth-of-type(1)",
      "text": [
        "container.",
        "__iter__",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 7799,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an iterator object.  The object is required to support the iterator\nprotocol described below.  If a container supports different types of\niteration, additional methods can be provided to specifically request\niterators for those iteration types.  (An example of an object supporting\nmultiple forms of iteration would be a tree structure which supports both\nbreadth-first and depth-first traversal.)  This method corresponds to the\n<a class=\"reference internal\" href=\"../c-api/typeobj.html#PyTypeObject.tp_iter\" title=\"PyTypeObject.tp_iter\"><tt class=\"xref c c-member docutils literal\"><span class=\"pre\">tp_iter</span></tt></a> slot of the type structure for Python objects in the Python/C\nAPI.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an iterator object.  The object is required to support the iterator\nprotocol described below.  If a container supports different types of\niteration, additional methods can be provided to specifically request\niterators for those iteration types.  (An example of an object supporting\nmultiple forms of iteration would be a tree structure which supports both\nbreadth-first and depth-first traversal.)  This method corresponds to the\n",
        "tp_iter",
        " slot of the type structure for Python objects in the Python/C\nAPI."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7881,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The iterator objects themselves are required to support the following two\nmethods, which together form the <em class=\"dfn\">iterator protocol</em>:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > p:nth-of-type(3)",
      "text": [
        "The iterator objects themselves are required to support the following two\nmethods, which together form the ",
        "iterator protocol",
        ":"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 7919,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#iterator.__iter__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">iterator.</tt><tt class=\"descname\">__iter__</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#iterator.__iter__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > dl.method:nth-of-type(2) > dt#iterator.__iter__:nth-of-type(1)",
      "text": [
        "iterator.",
        "__iter__",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 7947,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the iterator object itself.  This is required to allow both containers\nand iterators to be used with the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a> and <a class=\"reference internal\" href=\"../reference/expressions.html#in\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">in</span></tt></a> statements.\nThis method corresponds to the <a class=\"reference internal\" href=\"../c-api/typeobj.html#PyTypeObject.tp_iter\" title=\"PyTypeObject.tp_iter\"><tt class=\"xref c c-member docutils literal\"><span class=\"pre\">tp_iter</span></tt></a> slot of the type structure for\nPython objects in the Python/C API.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the iterator object itself.  This is required to allow both containers\nand iterators to be used with the ",
        "for",
        " and ",
        "in",
        " statements.\nThis method corresponds to the ",
        "tp_iter",
        " slot of the type structure for\nPython objects in the Python/C API."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8007,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#iterator.__next__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">iterator.</tt><tt class=\"descname\">__next__</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#iterator.__next__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > dl.method:nth-of-type(3) > dt#iterator.__next__:nth-of-type(1)",
      "text": [
        "iterator.",
        "__next__",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 8035,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the next item from the container.  If there are no further items, raise\nthe <a class=\"reference internal\" href=\"exceptions.html#StopIteration\" title=\"StopIteration\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></tt></a> exception.  This method corresponds to the\n<a class=\"reference internal\" href=\"../c-api/typeobj.html#PyTypeObject.tp_iternext\" title=\"PyTypeObject.tp_iternext\"><tt class=\"xref c c-member docutils literal\"><span class=\"pre\">tp_iternext</span></tt></a> slot of the type structure for Python objects in the\nPython/C API.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the next item from the container.  If there are no further items, raise\nthe ",
        "StopIteration",
        " exception.  This method corresponds to the\n",
        "tp_iternext",
        " slot of the type structure for Python objects in the\nPython/C API."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8095,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Python defines several iterator objects to support iteration over general and\nspecific sequence types, dictionaries, and other more specialized forms.  The\nspecific types are not important beyond their implementation of the iterator\nprotocol.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > p:nth-of-type(4)",
      "text": [
        "Python defines several iterator objects to support iteration over general and\nspecific sequence types, dictionaries, and other more specialized forms.  The\nspecific types are not important beyond their implementation of the iterator\nprotocol."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8155,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Once an iterator’s <a class=\"reference internal\" href=\"#iterator.__next__\" title=\"iterator.__next__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__next__()</span></tt></a> method raises\n<a class=\"reference internal\" href=\"exceptions.html#StopIteration\" title=\"StopIteration\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></tt></a>, it must continue to do so on subsequent calls.\nImplementations that do not obey this property are deemed broken.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > p:nth-of-type(5)",
      "text": [
        "Once an iterator’s ",
        "__next__()",
        " method raises\n",
        "StopIteration",
        ", it must continue to do so on subsequent calls.\nImplementations that do not obey this property are deemed broken."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 8193,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.5.1. Generator Types<a class=\"headerlink\" href=\"#generator-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > div#generator-types.section:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "4.5.1. Generator Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 8248,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Python’s <a class=\"reference internal\" href=\"../glossary.html#term-generator\"><em class=\"xref std std-term\">generator</em></a>s provide a convenient way to implement the iterator\nprotocol.  If a container object’s <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__iter__\" title=\"object.__iter__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__iter__()</span></tt></a> method is implemented as a\ngenerator, it will automatically return an iterator object (technically, a\ngenerator object) supplying the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__iter__\" title=\"object.__iter__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__iter__()</span></tt></a> and <a class=\"reference internal\" href=\"../reference/expressions.html#generator.__next__\" title=\"generator.__next__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__next__()</span></tt></a>\nmethods.\nMore information about generators can be found in <a class=\"reference internal\" href=\"../reference/expressions.html#yieldexpr\"><em>the documentation for\nthe yield expression</em></a>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#iterator-types.section:nth-of-type(5) > div#generator-types.section:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Python’s ",
        "generator",
        "s provide a convenient way to implement the iterator\nprotocol.  If a container object’s ",
        "__iter__()",
        " method is implemented as a\ngenerator, it will automatically return an iterator object (technically, a\ngenerator object) supplying the ",
        "__iter__()",
        " and ",
        "__next__()",
        "\nmethods.\nMore information about generators can be found in ",
        "the documentation for\nthe yield expression",
        "."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 8330,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.6. Sequence Types — <a class=\"reference internal\" href=\"#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a>, <a class=\"reference internal\" href=\"#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a>, <a class=\"reference internal\" href=\"#range\" title=\"range\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></tt></a><a class=\"headerlink\" href=\"#sequence-types-list-tuple-range\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > h2:nth-of-type(1)",
      "text": [
        "4.6. Sequence Types — ",
        "list",
        ", ",
        "tuple",
        ", ",
        "range",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8393,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "There are three basic sequence types: lists, tuples, and range objects.\nAdditional sequence types tailored for processing of\n<a class=\"reference internal\" href=\"#binaryseq\"><em>binary data</em></a> and <a class=\"reference internal\" href=\"#textseq\"><em>text strings</em></a> are\ndescribed in dedicated sections.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > p:nth-of-type(1)",
      "text": [
        "There are three basic sequence types: lists, tuples, and range objects.\nAdditional sequence types tailored for processing of\n",
        "binary data",
        " and ",
        "text strings",
        " are\ndescribed in dedicated sections."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 8453,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.6.1. Common Sequence Operations<a class=\"headerlink\" href=\"#common-sequence-operations\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "4.6.1. Common Sequence Operations",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8508,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-19:nth-of-type(1)",
      "html": "The operations in the following table are supported by most sequence types,\nboth mutable and immutable. The <a class=\"reference internal\" href=\"collections.abc.html#collections.abc.Sequence\" title=\"collections.abc.Sequence\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">collections.abc.Sequence</span></tt></a> ABC is\nprovided to make it easier to correctly implement these operations on\ncustom sequence types.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > p#index-19:nth-of-type(1)",
      "text": [
        "The operations in the following table are supported by most sequence types,\nboth mutable and immutable. The ",
        "collections.abc.Sequence",
        " ABC is\nprovided to make it easier to correctly implement these operations on\ncustom sequence types."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8568,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "This table lists the sequence operations sorted in ascending priority\n(operations in the same box have the same priority).  In the table, <em>s</em> and <em>t</em>\nare sequences of the same type, <em>n</em>, <em>i</em>, <em>j</em> and <em>k</em> are integers and <em>x</em> is\nan arbitrary object that meets any type and value restrictions imposed by <em>s</em>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "This table lists the sequence operations sorted in ascending priority\n(operations in the same box have the same priority).  In the table, ",
        "s",
        " and ",
        "t",
        "\nare sequences of the same type, ",
        "n",
        ", ",
        "i",
        ", ",
        "j",
        " and ",
        "k",
        " are integers and ",
        "x",
        " is\nan arbitrary object that meets any type and value restrictions imposed by ",
        "s",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8628,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <tt class=\"docutils literal\"><span class=\"pre\">in</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">not</span> <span class=\"pre\">in</span></tt> operations have the same priorities as the\ncomparison operations. The <tt class=\"docutils literal\"><span class=\"pre\">+</span></tt> (concatenation) and <tt class=\"docutils literal\"><span class=\"pre\">*</span></tt> (repetition)\noperations have the same priority as the corresponding numeric operations.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "in",
        " and ",
        "not",
        "in",
        " operations have the same priorities as the\ncomparison operations. The ",
        "+",
        " (concatenation) and ",
        "*",
        " (repetition)\noperations have the same priority as the corresponding numeric operations."
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 8688,
        "width": 465
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Operation",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Operation"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 730,
        "top": 8688,
        "width": 575
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Result",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Result"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 1305,
        "top": 8688,
        "width": 183
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Notes",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Notes"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8716,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">in</span> <span class=\"pre\">s</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "x",
        "in",
        "s"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8716,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> if an item of <em>s</em> is\nequal to <em>x</em>, else <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "True",
        " if an item of ",
        "s",
        " is\nequal to ",
        "x",
        ", else ",
        "False"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 8716,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(3)",
      "text": [
        "(1)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8745,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">not</span> <span class=\"pre\">in</span> <span class=\"pre\">s</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "x",
        "not",
        "in",
        "s"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8745,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> if an item of <em>s</em> is\nequal to <em>x</em>, else <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "False",
        " if an item of ",
        "s",
        " is\nequal to ",
        "x",
        ", else ",
        "True"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 8745,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(3)",
      "text": [
        "(1)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8774,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s</span> <span class=\"pre\">+</span> <span class=\"pre\">t</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "s",
        "+",
        "t"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8774,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "the concatenation of <em>s</em> and\n<em>t</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "the concatenation of ",
        "s",
        " and\n",
        "t"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 8774,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(6)(7)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(3)",
      "text": [
        "(6)(7)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8803,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s</span> <span class=\"pre\">*</span> <span class=\"pre\">n</span></tt> or\n<tt class=\"docutils literal\"><span class=\"pre\">n</span> <span class=\"pre\">*</span> <span class=\"pre\">s</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "s",
        "*",
        "n",
        " or\n",
        "n",
        "*",
        "s"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8803,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>n</em> shallow copies of <em>s</em>\nconcatenated",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "n",
        " shallow copies of ",
        "s",
        "\nconcatenated"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 8803,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(2)(7)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(3)",
      "text": [
        "(2)(7)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8832,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s[i]</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "s[i]"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8832,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>i</em>th item of <em>s</em>, origin 0",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "i",
        "th item of ",
        "s",
        ", origin 0"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 8832,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(3)",
      "text": [
        "(3)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8861,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s[i:j]</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "s[i:j]"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8861,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "slice of <em>s</em> from <em>i</em> to <em>j</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "slice of ",
        "s",
        " from ",
        "i",
        " to ",
        "j"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 8861,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)(4)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(3)",
      "text": [
        "(3)(4)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8890,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s[i:j:k]</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "s[i:j:k]"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8890,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "slice of <em>s</em> from <em>i</em> to <em>j</em>\nwith step <em>k</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "slice of ",
        "s",
        " from ",
        "i",
        " to ",
        "j",
        "\nwith step ",
        "k"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 8890,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)(5)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(3)",
      "text": [
        "(3)(5)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8919,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "len(s)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8919,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "length of <em>s</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "length of ",
        "s"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8948,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">min(s)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(1)",
      "text": [
        "min(s)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8948,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "smallest item of <em>s</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(2)",
      "text": [
        "smallest item of ",
        "s"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 8977,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">max(s)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(1)",
      "text": [
        "max(s)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 8977,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "largest item of <em>s</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(2)",
      "text": [
        "largest item of ",
        "s"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 9006,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.index(x[,</span> <span class=\"pre\">i[,</span> <span class=\"pre\">j]])</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(1)",
      "text": [
        "s.index(x[,",
        "i[,",
        "j]])"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 9006,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "index of the first occurrence\nof <em>x</em> in <em>s</em> (at or after\nindex <em>i</em> and before index <em>j</em>)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(2)",
      "text": [
        "index of the first occurrence\nof ",
        "x",
        " in ",
        "s",
        " (at or after\nindex ",
        "i",
        " and before index ",
        "j",
        ")"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1305,
        "top": 9006,
        "width": 183
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(8)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(3)",
      "text": [
        "(8)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 9035,
        "width": 465
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.count(x)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(1)",
      "text": [
        "s.count(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 730,
        "top": 9035,
        "width": 575
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "total number of occurrences of\n<em>x</em> in <em>s</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > table#index-20.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(2)",
      "text": [
        "total number of occurrences of\n",
        "x",
        " in ",
        "s"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 9081,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Sequences of the same type also support comparisons.  In particular, tuples\nand lists are compared lexicographically by comparing corresponding elements.\nThis means that to compare equal, every element must compare equal and the\ntwo sequences must be of the same type and have the same length.  (For full\ndetails see <a class=\"reference internal\" href=\"../reference/expressions.html#comparisons\"><em>Comparisons</em></a> in the language reference.)",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Sequences of the same type also support comparisons.  In particular, tuples\nand lists are compared lexicographically by comparing corresponding elements.\nThis means that to compare equal, every element must compare equal and the\ntwo sequences must be of the same type and have the same length.  (For full\ndetails see ",
        "Comparisons",
        " in the language reference.)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9163,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Notes:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Notes:"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9201,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "While the <tt class=\"docutils literal\"><span class=\"pre\">in</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">not</span> <span class=\"pre\">in</span></tt> operations are used only for simple\ncontainment testing in the general case, some specialised sequences\n(such as <a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></tt></a>, <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> and <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>) also use\nthem for subsequence testing:",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "While the ",
        "in",
        " and ",
        "not",
        "in",
        " operations are used only for simple\ncontainment testing in the general case, some specialised sequences\n(such as ",
        "str",
        ", ",
        "bytes",
        " and ",
        "bytearray",
        ") also use\nthem for subsequence testing:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 9261,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > ol > li > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 305,
        "top": 9261,
        "width": 1279
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "list-style-type": "decimal",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">\"gg\"</span> <span class=\"ow\">in</span> <span class=\"s\">\"eggs\"</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > div > div > ol > li > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "\"gg\"",
        "in",
        "\"eggs\"",
        "True"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9324,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "Values of <em>n</em> less than <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt> are treated as <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt> (which yields an empty\nsequence of the same type as <em>s</em>).  Note also that the copies are shallow;\nnested structures are not copied.  This often haunts new Python programmers;\nconsider:",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "Values of ",
        "n",
        " less than ",
        "0",
        " are treated as ",
        "0",
        " (which yields an empty\nsequence of the same type as ",
        "s",
        ").  Note also that the copies are shallow;\nnested structures are not copied.  This often haunts new Python programmers;\nconsider:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 9384,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > ol > li > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 305,
        "top": 9384,
        "width": 1279
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "list-style-type": "decimal",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span> <span class=\"o\">=</span> <span class=\"p\">[[]]</span> <span class=\"o\">*</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span>\n<span class=\"go\">[[], [], []]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span>\n<span class=\"go\">[[3], [3], [3]]</span>\n",
      "path": "div > div > div > div > div > div > div > ol > li > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "lists",
        "=",
        "[[]]",
        "*",
        "3",
        ">>> ",
        "lists",
        "[[], [], []]",
        ">>> ",
        "lists",
        "[",
        "0",
        "]",
        ".",
        "append",
        "(",
        "3",
        ")",
        ">>> ",
        "lists",
        "[[3], [3], [3]]"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9520,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "What has happened is that <tt class=\"docutils literal\"><span class=\"pre\">[[]]</span></tt> is a one-element list containing an empty\nlist, so all three elements of <tt class=\"docutils literal\"><span class=\"pre\">[[]]</span> <span class=\"pre\">*</span> <span class=\"pre\">3</span></tt> are (pointers to) this single empty\nlist.  Modifying any of the elements of <tt class=\"docutils literal\"><span class=\"pre\">lists</span></tt> modifies this single list.\nYou can create a list of different lists this way:",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "What has happened is that ",
        "[[]]",
        " is a one-element list containing an empty\nlist, so all three elements of ",
        "[[]]",
        "*",
        "3",
        " are (pointers to) this single empty\nlist.  Modifying any of the elements of ",
        "lists",
        " modifies this single list.\nYou can create a list of different lists this way:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 9580,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > ol > li > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 305,
        "top": 9580,
        "width": 1279
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "list-style-type": "decimal",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span> <span class=\"o\">=</span> <span class=\"p\">[[]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lists</span>\n<span class=\"go\">[[3], [5], [7]]</span>\n",
      "path": "div > div > div > div > div > div > div > ol > li > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "lists",
        "=",
        "[[]",
        "for",
        "i",
        "in",
        "range",
        "(",
        "3",
        ")]",
        ">>> ",
        "lists",
        "[",
        "0",
        "]",
        ".",
        "append",
        "(",
        "3",
        ")",
        ">>> ",
        "lists",
        "[",
        "1",
        "]",
        ".",
        "append",
        "(",
        "5",
        ")",
        ">>> ",
        "lists",
        "[",
        "2",
        "]",
        ".",
        "append",
        "(",
        "7",
        ")",
        ">>> ",
        "lists",
        "[[3], [5], [7]]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 9715,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If <em>i</em> or <em>j</em> is negative, the index is relative to the end of the string:\n<tt class=\"docutils literal\"><span class=\"pre\">len(s)</span> <span class=\"pre\">+</span> <span class=\"pre\">i</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">len(s)</span> <span class=\"pre\">+</span> <span class=\"pre\">j</span></tt> is substituted.  But note that <tt class=\"docutils literal\"><span class=\"pre\">-0</span></tt> is\nstill <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(3) > p.first:nth-of-type(1)",
      "text": [
        "If ",
        "i",
        " or ",
        "j",
        " is negative, the index is relative to the end of the string:\n",
        "len(s)",
        "+",
        "i",
        " or ",
        "len(s)",
        "+",
        "j",
        " is substituted.  But note that ",
        "-0",
        " is\nstill ",
        "0",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9753,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The slice of <em>s</em> from <em>i</em> to <em>j</em> is defined as the sequence of items with index\n<em>k</em> such that <tt class=\"docutils literal\"><span class=\"pre\">i</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">k</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">j</span></tt>.  If <em>i</em> or <em>j</em> is greater than <tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>, use\n<tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>.  If <em>i</em> is omitted or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, use <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>.  If <em>j</em> is omitted or\n<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, use <tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>.  If <em>i</em> is greater than or equal to <em>j</em>, the slice is\nempty.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(4) > p.first:nth-of-type(1)",
      "text": [
        "The slice of ",
        "s",
        " from ",
        "i",
        " to ",
        "j",
        " is defined as the sequence of items with index\n",
        "k",
        " such that ",
        "i",
        "<=",
        "k",
        "<",
        "j",
        ".  If ",
        "i",
        " or ",
        "j",
        " is greater than ",
        "len(s)",
        ", use\n",
        "len(s)",
        ".  If ",
        "i",
        " is omitted or ",
        "None",
        ", use ",
        "0",
        ".  If ",
        "j",
        " is omitted or\n",
        "None",
        ", use ",
        "len(s)",
        ".  If ",
        "i",
        " is greater than or equal to ",
        "j",
        ", the slice is\nempty."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 305,
        "top": 9813,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The slice of <em>s</em> from <em>i</em> to <em>j</em> with step <em>k</em> is defined as the sequence of\nitems with index  <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">=</span> <span class=\"pre\">i</span> <span class=\"pre\">+</span> <span class=\"pre\">n*k</span></tt> such that <tt class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">n</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">(j-i)/k</span></tt>.  In other words,\nthe indices are <tt class=\"docutils literal\"><span class=\"pre\">i</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">i+k</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">i+2*k</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">i+3*k</span></tt> and so on, stopping when\n<em>j</em> is reached (but never including <em>j</em>).  If <em>i</em> or <em>j</em> is greater than\n<tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>, use <tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>.  If <em>i</em> or <em>j</em> are omitted or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, they become\n“end” values (which end depends on the sign of <em>k</em>).  Note, <em>k</em> cannot be zero.\nIf <em>k</em> is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, it is treated like <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt>.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(5) > p.first:nth-of-type(1)",
      "text": [
        "The slice of ",
        "s",
        " from ",
        "i",
        " to ",
        "j",
        " with step ",
        "k",
        " is defined as the sequence of\nitems with index  ",
        "x",
        "=",
        "i",
        "+",
        "n*k",
        " such that ",
        "0",
        "<=",
        "n",
        "<",
        "(j-i)/k",
        ".  In other words,\nthe indices are ",
        "i",
        ", ",
        "i+k",
        ", ",
        "i+2*k",
        ", ",
        "i+3*k",
        " and so on, stopping when\n",
        "j",
        " is reached (but never including ",
        "j",
        ").  If ",
        "i",
        " or ",
        "j",
        " is greater than\n",
        "len(s)",
        ", use ",
        "len(s)",
        ".  If ",
        "i",
        " or ",
        "j",
        " are omitted or ",
        "None",
        ", they become\n“end” values (which end depends on the sign of ",
        "k",
        ").  Note, ",
        "k",
        " cannot be zero.\nIf ",
        "k",
        " is ",
        "None",
        ", it is treated like ",
        "1",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 9895,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "Concatenating immutable sequences always results in a new object.  This\nmeans that building up a sequence by repeated concatenation will have a\nquadratic runtime cost in the total sequence length.  To get a linear\nruntime cost, you must switch to one of the alternatives below:",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > p.first:nth-of-type(1)",
      "text": [
        "Concatenating immutable sequences always results in a new object.  This\nmeans that building up a sequence by repeated concatenation will have a\nquadratic runtime cost in the total sequence length.  To get a linear\nruntime cost, you must switch to one of the alternatives below:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 9955,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "if concatenating <a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></tt></a> objects, you can build a list and use\n<a class=\"reference internal\" href=\"#str.join\" title=\"str.join\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.join()</span></tt></a> at the end or else write to a <a class=\"reference internal\" href=\"io.html#io.StringIO\" title=\"io.StringIO\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.StringIO</span></tt></a>\ninstance and retrieve its value when complete",
      "path": "div > div > div > div > div > div > div > ol > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "if concatenating ",
        "str",
        " objects, you can build a list and use\n",
        "str.join()",
        " at the end or else write to a ",
        "io.StringIO",
        "\ninstance and retrieve its value when complete"
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 345,
        "top": 9975,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "if concatenating <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> objects, you can similarly use\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">bytes.join()</span></tt> or <a class=\"reference internal\" href=\"io.html#io.BytesIO\" title=\"io.BytesIO\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BytesIO</span></tt></a>, or you can do in-place\nconcatenation with a <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a> object.  <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>\nobjects are mutable and have an efficient overallocation mechanism",
      "path": "div > div > div > div > div > div > div > ol > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "if concatenating ",
        "bytes",
        " objects, you can similarly use\n",
        "bytes.join()",
        " or ",
        "io.BytesIO",
        ", or you can do in-place\nconcatenation with a ",
        "bytearray",
        " object.  ",
        "bytearray",
        "\nobjects are mutable and have an efficient overallocation mechanism"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 10015,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "if concatenating <a class=\"reference internal\" href=\"#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a> objects, extend a <a class=\"reference internal\" href=\"#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a> instead",
      "path": "div > div > div > div > div > div > div > ol > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "if concatenating ",
        "tuple",
        " objects, extend a ",
        "list",
        " instead"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 345,
        "top": 10035,
        "width": 1239
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "circle",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "for other types, investigate the relevant class documentation",
      "path": "div > div > div > div > div > div > div > ol > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(6) > ul.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "for other types, investigate the relevant class documentation"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 10055,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "Some sequence types (such as <a class=\"reference internal\" href=\"#range\" title=\"range\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></tt></a>) only support item sequences\nthat follow specific patterns, and hence don’t support sequence\nconcatenation or repetition.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(7) > p.first:nth-of-type(1)",
      "text": [
        "Some sequence types (such as ",
        "range",
        ") only support item sequences\nthat follow specific patterns, and hence don’t support sequence\nconcatenation or repetition."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 305,
        "top": 10093,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">index</span></tt> raises <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> when <em>x</em> is not found in <em>s</em>.\nWhen supported, the additional arguments to the index method allow\nefficient searching of subsections of the sequence. Passing the extra\narguments is roughly equivalent to using <tt class=\"docutils literal\"><span class=\"pre\">s[i:j].index(x)</span></tt>, only\nwithout copying any data and with the returned index being relative to\nthe start of the sequence rather than the start of the slice.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#common-sequence-operations.section:nth-of-type(1) > ol.arabic:nth-of-type(1) > li:nth-of-type(8) > p.first:nth-of-type(1)",
      "text": [
        "index",
        " raises ",
        "ValueError",
        " when ",
        "x",
        " is not found in ",
        "s",
        ".\nWhen supported, the additional arguments to the index method allow\nefficient searching of subsections of the sequence. Passing the extra\narguments is roughly equivalent to using ",
        "s[i:j].index(x)",
        ", only\nwithout copying any data and with the returned index being relative to\nthe start of the sequence rather than the start of the slice."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 10175,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.6.2. Immutable Sequence Types<a class=\"headerlink\" href=\"#immutable-sequence-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#immutable-sequence-types.section:nth-of-type(2) > h3:nth-of-type(1)",
      "text": [
        "4.6.2. Immutable Sequence Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 10230,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-21:nth-of-type(1)",
      "html": "The only operation that immutable sequence types generally implement that is\nnot also implemented by mutable sequence types is support for the <a class=\"reference internal\" href=\"functions.html#hash\" title=\"hash\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">hash()</span></tt></a>\nbuilt-in.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#immutable-sequence-types.section:nth-of-type(2) > p#index-21:nth-of-type(1)",
      "text": [
        "The only operation that immutable sequence types generally implement that is\nnot also implemented by mutable sequence types is support for the ",
        "hash()",
        "\nbuilt-in."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 10268,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "This support allows immutable sequences, such as <a class=\"reference internal\" href=\"#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a> instances, to\nbe used as <a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> keys and stored in <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> and <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>\ninstances.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#immutable-sequence-types.section:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "This support allows immutable sequences, such as ",
        "tuple",
        " instances, to\nbe used as ",
        "dict",
        " keys and stored in ",
        "set",
        " and ",
        "frozenset",
        "\ninstances."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 10306,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Attempting to hash an immutable sequence that contains unhashable values will\nresult in <a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#immutable-sequence-types.section:nth-of-type(2) > p:nth-of-type(3)",
      "text": [
        "Attempting to hash an immutable sequence that contains unhashable values will\nresult in ",
        "TypeError",
        "."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 10344,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.6.3. Mutable Sequence Types<a class=\"headerlink\" href=\"#mutable-sequence-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > h3:nth-of-type(1)",
      "text": [
        "4.6.3. Mutable Sequence Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 10399,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-22:nth-of-type(1)",
      "html": "The operations in the following table are defined on mutable sequence types.\nThe <a class=\"reference internal\" href=\"collections.abc.html#collections.abc.MutableSequence\" title=\"collections.abc.MutableSequence\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">collections.abc.MutableSequence</span></tt></a> ABC is provided to make it\neasier to correctly implement these operations on custom sequence types.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > p#index-22:nth-of-type(1)",
      "text": [
        "The operations in the following table are defined on mutable sequence types.\nThe ",
        "collections.abc.MutableSequence",
        " ABC is provided to make it\neasier to correctly implement these operations on custom sequence types."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 10459,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "In the table <em>s</em> is an instance of a mutable sequence type, <em>t</em> is any\niterable object and <em>x</em> is an arbitrary object that meets any type\nand value restrictions imposed by <em>s</em> (for example, <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a> only\naccepts integers that meet the value restriction <tt class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">x</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">255</span></tt>).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "In the table ",
        "s",
        " is an instance of a mutable sequence type, ",
        "t",
        " is any\niterable object and ",
        "x",
        " is an arbitrary object that meets any type\nand value restrictions imposed by ",
        "s",
        " (for example, ",
        "bytearray",
        " only\naccepts integers that meet the value restriction ",
        "0",
        "<=",
        "x",
        "<=",
        "255",
        ")."
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 10519,
        "width": 471
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Operation",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Operation"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 736,
        "top": 10519,
        "width": 510
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Result",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Result"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 1246,
        "top": 10519,
        "width": 326
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Notes",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Notes"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10547,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s[i]</span> <span class=\"pre\">=</span> <span class=\"pre\">x</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "s[i]",
        "=",
        "x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10547,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "item <em>i</em> of <em>s</em> is replaced by\n<em>x</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "item ",
        "i",
        " of ",
        "s",
        " is replaced by\n",
        "x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10576,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s[i:j]</span> <span class=\"pre\">=</span> <span class=\"pre\">t</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "s[i:j]",
        "=",
        "t"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10576,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "slice of <em>s</em> from <em>i</em> to <em>j</em>\nis replaced by the contents of\nthe iterable <em>t</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "slice of ",
        "s",
        " from ",
        "i",
        " to ",
        "j",
        "\nis replaced by the contents of\nthe iterable ",
        "t"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10605,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">del</span> <span class=\"pre\">s[i:j]</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "del",
        "s[i:j]"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10605,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "same as <tt class=\"docutils literal\"><span class=\"pre\">s[i:j]</span> <span class=\"pre\">=</span> <span class=\"pre\">[]</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "same as ",
        "s[i:j]",
        "=",
        "[]"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10634,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s[i:j:k]</span> <span class=\"pre\">=</span> <span class=\"pre\">t</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "s[i:j:k]",
        "=",
        "t"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10634,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "the elements of <tt class=\"docutils literal\"><span class=\"pre\">s[i:j:k]</span></tt>\nare replaced by those of <em>t</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "the elements of ",
        "s[i:j:k]",
        "\nare replaced by those of ",
        "t"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1246,
        "top": 10634,
        "width": 326
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(3)",
      "text": [
        "(1)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10663,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">del</span> <span class=\"pre\">s[i:j:k]</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "del",
        "s[i:j:k]"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10663,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "removes the elements of\n<tt class=\"docutils literal\"><span class=\"pre\">s[i:j:k]</span></tt> from the list",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "removes the elements of\n",
        "s[i:j:k]",
        " from the list"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10692,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.append(x)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "s.append(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10692,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "appends <em>x</em> to the end of the\nsequence (same as\n<tt class=\"docutils literal\"><span class=\"pre\">s[len(s):len(s)]</span> <span class=\"pre\">=</span> <span class=\"pre\">[x]</span></tt>)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "appends ",
        "x",
        " to the end of the\nsequence (same as\n",
        "s[len(s):len(s)]",
        "=",
        "[x]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10721,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.clear()</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "s.clear()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10721,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "removes all items from <tt class=\"docutils literal\"><span class=\"pre\">s</span></tt>\n(same as <tt class=\"docutils literal\"><span class=\"pre\">del</span> <span class=\"pre\">s[:]</span></tt>)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "removes all items from ",
        "s",
        "\n(same as ",
        "del",
        "s[:]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1246,
        "top": 10721,
        "width": 326
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(5)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(3)",
      "text": [
        "(5)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10750,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.copy()</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "s.copy()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10750,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "creates a shallow copy of <tt class=\"docutils literal\"><span class=\"pre\">s</span></tt>\n(same as <tt class=\"docutils literal\"><span class=\"pre\">s[:]</span></tt>)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "creates a shallow copy of ",
        "s",
        "\n(same as ",
        "s[:]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1246,
        "top": 10750,
        "width": 326
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(5)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(3)",
      "text": [
        "(5)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10779,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.extend(t)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(1)",
      "text": [
        "s.extend(t)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10779,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "extends <em>s</em> with the\ncontents of <em>t</em> (same as\n<tt class=\"docutils literal\"><span class=\"pre\">s[len(s):len(s)]</span> <span class=\"pre\">=</span> <span class=\"pre\">t</span></tt>)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(2)",
      "text": [
        "extends ",
        "s",
        " with the\ncontents of ",
        "t",
        " (same as\n",
        "s[len(s):len(s)]",
        "=",
        "t",
        ")"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10808,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.insert(i,</span> <span class=\"pre\">x)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(1)",
      "text": [
        "s.insert(i,",
        "x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10808,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "inserts <em>x</em> into <em>s</em> at the\nindex given by <em>i</em>\n(same as <tt class=\"docutils literal\"><span class=\"pre\">s[i:i]</span> <span class=\"pre\">=</span> <span class=\"pre\">[x]</span></tt>)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(2)",
      "text": [
        "inserts ",
        "x",
        " into ",
        "s",
        " at the\nindex given by ",
        "i",
        "\n(same as ",
        "s[i:i]",
        "=",
        "[x]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10837,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.pop([i])</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(1)",
      "text": [
        "s.pop([i])"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10837,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "retrieves the item at <em>i</em> and\nalso removes it from <em>s</em>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(2)",
      "text": [
        "retrieves the item at ",
        "i",
        " and\nalso removes it from ",
        "s"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1246,
        "top": 10837,
        "width": 326
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(2)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(3)",
      "text": [
        "(2)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10866,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.remove(x)</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(1)",
      "text": [
        "s.remove(x)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10866,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "remove the first item from <em>s</em>\nwhere <tt class=\"docutils literal\"><span class=\"pre\">s[i]</span> <span class=\"pre\">==</span> <span class=\"pre\">x</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(2)",
      "text": [
        "remove the first item from ",
        "s",
        "\nwhere ",
        "s[i]",
        "==",
        "x"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1246,
        "top": 10866,
        "width": 326
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(3)",
      "text": [
        "(3)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 10895,
        "width": 471
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">s.reverse()</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(1)",
      "text": [
        "s.reverse()"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 736,
        "top": 10895,
        "width": 510
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "reverses the items of <em>s</em> in\nplace",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(2)",
      "text": [
        "reverses the items of ",
        "s",
        " in\nplace"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1246,
        "top": 10895,
        "width": 326
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(4)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > table#index-23.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(3)",
      "text": [
        "(4)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 10941,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Notes:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "Notes:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 10979,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<em>t</em> must have the same length as the slice it is replacing.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > ol.arabic:nth-of-type(1) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "t",
        " must have the same length as the slice it is replacing."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 11017,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The optional argument <em>i</em> defaults to <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt>, so that by default the last\nitem is removed and returned.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > ol.arabic:nth-of-type(1) > li:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "The optional argument ",
        "i",
        " defaults to ",
        "-1",
        ", so that by default the last\nitem is removed and returned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 11055,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">remove</span></tt> raises <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> when <em>x</em> is not found in <em>s</em>.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > ol.arabic:nth-of-type(1) > li:nth-of-type(3) > p.first:nth-of-type(1)",
      "text": [
        "remove",
        " raises ",
        "ValueError",
        " when ",
        "x",
        " is not found in ",
        "s",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 11093,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">reverse()</span></tt> method modifies the sequence in place for economy of\nspace when reversing a large sequence.  To remind users that it operates by\nside effect, it does not return the reversed sequence.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > ol.arabic:nth-of-type(1) > li:nth-of-type(4) > p.first:nth-of-type(1)",
      "text": [
        "The ",
        "reverse()",
        " method modifies the sequence in place for economy of\nspace when reversing a large sequence.  To remind users that it operates by\nside effect, it does not return the reversed sequence."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 11153,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">clear()</span></tt> and <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">copy()</span></tt> are included for consistency with the\ninterfaces of mutable containers that don’t support slicing operations\n(such as <a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> and <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a>)",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > ol.arabic:nth-of-type(1) > li:nth-of-type(5) > p.first:nth-of-type(1)",
      "text": [
        "clear()",
        " and ",
        "copy()",
        " are included for consistency with the\ninterfaces of mutable containers that don’t support slicing operations\n(such as ",
        "dict",
        " and ",
        "set",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 11191,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3:</span> <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">clear()</span></tt> and <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">copy()</span></tt> methods.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#mutable-sequence-types.section:nth-of-type(3) > ol.arabic:nth-of-type(1) > li:nth-of-type(5) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.3:",
        "clear()",
        " and ",
        "copy()",
        " methods."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 11229,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.6.4. Lists<a class=\"headerlink\" href=\"#lists\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > h3:nth-of-type(1)",
      "text": [
        "4.6.4. Lists",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 11284,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-24:nth-of-type(1)",
      "html": "Lists are mutable sequences, typically used to store collections of\nhomogeneous items (where the precise degree of similarity will vary by\napplication).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > p#index-24:nth-of-type(1)",
      "text": [
        "Lists are mutable sequences, typically used to store collections of\nhomogeneous items (where the precise degree of similarity will vary by\napplication)."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 11322,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#list:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">list</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#list\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dt#list:nth-of-type(1)",
      "text": [
        "class ",
        "list",
        "(",
        "[",
        "iterable",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11351,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Lists may be constructed in several ways:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Lists may be constructed in several ways:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 11389,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "Using a pair of square brackets to denote the empty list: <tt class=\"docutils literal\"><span class=\"pre\">[]</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Using a pair of square brackets to denote the empty list: ",
        "[]"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 11409,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Using square brackets, separating items with commas: <tt class=\"docutils literal\"><span class=\"pre\">[a]</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">[a,</span> <span class=\"pre\">b,</span> <span class=\"pre\">c]</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Using square brackets, separating items with commas: ",
        "[a]",
        ", ",
        "[a,",
        "b,",
        "c]"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 11429,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "Using a list comprehension: <tt class=\"docutils literal\"><span class=\"pre\">[x</span> <span class=\"pre\">for</span> <span class=\"pre\">x</span> <span class=\"pre\">in</span> <span class=\"pre\">iterable]</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "Using a list comprehension: ",
        "[x",
        "for",
        "x",
        "in",
        "iterable]"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 11449,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "Using the type constructor: <tt class=\"docutils literal\"><span class=\"pre\">list()</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">list(iterable)</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "Using the type constructor: ",
        "list()",
        " or ",
        "list(iterable)"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 11479,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The constructor builds a list whose items are the same and in the same\norder as <em>iterable</em>‘s items.  <em>iterable</em> may be either a sequence, a\ncontainer that supports iteration, or an iterator object.  If <em>iterable</em>\nis already a list, a copy is made and returned, similar to <tt class=\"docutils literal\"><span class=\"pre\">iterable[:]</span></tt>.\nFor example, <tt class=\"docutils literal\"><span class=\"pre\">list('abc')</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">['a',</span> <span class=\"pre\">'b',</span> <span class=\"pre\">'c']</span></tt> and\n<tt class=\"docutils literal\"><span class=\"pre\">list(</span> <span class=\"pre\">(1,</span> <span class=\"pre\">2,</span> <span class=\"pre\">3)</span> <span class=\"pre\">)</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">[1,</span> <span class=\"pre\">2,</span> <span class=\"pre\">3]</span></tt>.\nIf no argument is given, the constructor creates a new empty list, <tt class=\"docutils literal\"><span class=\"pre\">[]</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The constructor builds a list whose items are the same and in the same\norder as ",
        "iterable",
        "‘s items.  ",
        "iterable",
        " may be either a sequence, a\ncontainer that supports iteration, or an iterator object.  If ",
        "iterable",
        "\nis already a list, a copy is made and returned, similar to ",
        "iterable[:]",
        ".\nFor example, ",
        "list('abc')",
        " returns ",
        "['a',",
        "'b',",
        "'c']",
        " and\n",
        "list(",
        "(1,",
        "2,",
        "3)",
        ")",
        " returns ",
        "[1,",
        "2,",
        "3]",
        ".\nIf no argument is given, the constructor creates a new empty list, ",
        "[]",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11561,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Many other operations also produce lists, including the <a class=\"reference internal\" href=\"functions.html#sorted\" title=\"sorted\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sorted()</span></tt></a>\nbuilt-in.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Many other operations also produce lists, including the ",
        "sorted()",
        "\nbuilt-in."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 11599,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Lists implement all of the <a class=\"reference internal\" href=\"#typesseq-common\"><em>common</em></a> and\n<a class=\"reference internal\" href=\"#typesseq-mutable\"><em>mutable</em></a> sequence operations. Lists also provide the\nfollowing additional method:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Lists implement all of the ",
        "common",
        " and\n",
        "mutable",
        " sequence operations. Lists also provide the\nfollowing additional method:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 11637,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#list.sort:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">sort</tt><big>(</big><em>*</em>, <em>key=None</em>, <em>reverse=None</em><big>)</big><a class=\"headerlink\" href=\"#list.sort\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dt#list.sort:nth-of-type(1)",
      "text": [
        "sort",
        "(",
        "*",
        ", ",
        "key=None",
        ", ",
        "reverse=None",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 11663,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This method sorts the list in place, using only <tt class=\"docutils literal\"><span class=\"pre\">&lt;</span></tt> comparisons\nbetween items. Exceptions are not suppressed - if any comparison operations\nfail, the entire sort operation will fail (and the list will likely be left\nin a partially modified state).",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This method sorts the list in place, using only ",
        "<",
        " comparisons\nbetween items. Exceptions are not suppressed - if any comparison operations\nfail, the entire sort operation will fail (and the list will likely be left\nin a partially modified state)."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 11723,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<em>key</em> specifies a function of one argument that is used to extract a\ncomparison key from each list element (for example, <tt class=\"docutils literal\"><span class=\"pre\">key=str.lower</span></tt>).\nThe key corresponding to each item in the list is calculated once and\nthen used for the entire sorting process. The default value of <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>\nmeans that list items are sorted directly without calculating a separate\nkey value.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "key",
        " specifies a function of one argument that is used to extract a\ncomparison key from each list element (for example, ",
        "key=str.lower",
        ").\nThe key corresponding to each item in the list is calculated once and\nthen used for the entire sorting process. The default value of ",
        "None",
        "\nmeans that list items are sorted directly without calculating a separate\nkey value."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 11805,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <a class=\"reference internal\" href=\"functools.html#functools.cmp_to_key\" title=\"functools.cmp_to_key\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">functools.cmp_to_key()</span></tt></a> utility is available to convert a 2.x\nstyle <em>cmp</em> function to a <em>key</em> function.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "functools.cmp_to_key()",
        " utility is available to convert a 2.x\nstyle ",
        "cmp",
        " function to a ",
        "key",
        " function."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 11843,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "<em>reverse</em> is a boolean value.  If set to <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>, then the list elements\nare sorted as if each comparison were reversed.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "reverse",
        " is a boolean value.  If set to ",
        "True",
        ", then the list elements\nare sorted as if each comparison were reversed."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 11881,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "This method modifies the sequence in place for economy of space when\nsorting a large sequence.  To remind users that it operates by side\neffect, it does not return the sorted sequence (use <a class=\"reference internal\" href=\"functions.html#sorted\" title=\"sorted\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">sorted()</span></tt></a> to\nexplicitly request a new sorted list instance).",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "This method modifies the sequence in place for economy of space when\nsorting a large sequence.  To remind users that it operates by side\neffect, it does not return the sorted sequence (use ",
        "sorted()",
        " to\nexplicitly request a new sorted list instance)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 11941,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The <a class=\"reference internal\" href=\"#list.sort\" title=\"list.sort\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">sort()</span></tt></a> method is guaranteed to be stable.  A sort is stable if it\nguarantees not to change the relative order of elements that compare equal\n— this is helpful for sorting in multiple passes (for example, sort by\ndepartment, then by salary grade).",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "The ",
        "sort()",
        " method is guaranteed to be stable.  A sort is stable if it\nguarantees not to change the relative order of elements that compare equal\n— this is helpful for sorting in multiple passes (for example, sort by\ndepartment, then by salary grade)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 333,
        "top": 12009,
        "width": 1243
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<strong>CPython implementation detail:</strong> While a list is being sorted, the effect of attempting to mutate, or even\ninspect, the list is undefined.  The C implementation of Python makes the\nlist appear empty for the duration, and raises <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> if it can\ndetect that the list has been mutated during a sort.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#lists.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.compound.impl-detail:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "CPython implementation detail:",
        " While a list is being sorted, the effect of attempting to mutate, or even\ninspect, the list is undefined.  The C implementation of Python makes the\nlist appear empty for the duration, and raises ",
        "ValueError",
        " if it can\ndetect that the list has been mutated during a sort."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 12076,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.6.5. Tuples<a class=\"headerlink\" href=\"#tuples\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > h3:nth-of-type(1)",
      "text": [
        "4.6.5. Tuples",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 12131,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-25:nth-of-type(1)",
      "html": "Tuples are immutable sequences, typically used to store collections of\nheterogeneous data (such as the 2-tuples produced by the <a class=\"reference internal\" href=\"functions.html#enumerate\" title=\"enumerate\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">enumerate()</span></tt></a>\nbuilt-in). Tuples are also used for cases where an immutable sequence of\nhomogeneous data is needed (such as allowing storage in a <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> or\n<a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> instance).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > p#index-25:nth-of-type(1)",
      "text": [
        "Tuples are immutable sequences, typically used to store collections of\nheterogeneous data (such as the 2-tuples produced by the ",
        "enumerate()",
        "\nbuilt-in). Tuples are also used for cases where an immutable sequence of\nhomogeneous data is needed (such as allowing storage in a ",
        "set",
        " or\n",
        "dict",
        " instance)."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 12191,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#tuple:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">tuple</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#tuple\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dt#tuple:nth-of-type(1)",
      "text": [
        "class ",
        "tuple",
        "(",
        "[",
        "iterable",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12220,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Tuples may be constructed in a number of ways:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Tuples may be constructed in a number of ways:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 12258,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "Using a pair of parentheses to denote the empty tuple: <tt class=\"docutils literal\"><span class=\"pre\">()</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Using a pair of parentheses to denote the empty tuple: ",
        "()"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 12278,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Using a trailing comma for a singleton tuple: <tt class=\"docutils literal\"><span class=\"pre\">a,</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">(a,)</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Using a trailing comma for a singleton tuple: ",
        "a,",
        " or ",
        "(a,)"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 12298,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "Separating items with commas: <tt class=\"docutils literal\"><span class=\"pre\">a,</span> <span class=\"pre\">b,</span> <span class=\"pre\">c</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">(a,</span> <span class=\"pre\">b,</span> <span class=\"pre\">c)</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "Separating items with commas: ",
        "a,",
        "b,",
        "c",
        " or ",
        "(a,",
        "b,",
        "c)"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 335,
        "top": 12318,
        "width": 1249
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "Using the <a class=\"reference internal\" href=\"#tuple\" title=\"tuple\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">tuple()</span></tt></a> built-in: <tt class=\"docutils literal\"><span class=\"pre\">tuple()</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">tuple(iterable)</span></tt>",
      "path": "div > div > div > div > div > div > div > dl > dd > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "Using the ",
        "tuple()",
        " built-in: ",
        "tuple()",
        " or ",
        "tuple(iterable)"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 12348,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The constructor builds a tuple whose items are the same and in the same\norder as <em>iterable</em>‘s items.  <em>iterable</em> may be either a sequence, a\ncontainer that supports iteration, or an iterator object.  If <em>iterable</em>\nis already a tuple, it is returned unchanged. For example,\n<tt class=\"docutils literal\"><span class=\"pre\">tuple('abc')</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">('a',</span> <span class=\"pre\">'b',</span> <span class=\"pre\">'c')</span></tt> and\n<tt class=\"docutils literal\"><span class=\"pre\">tuple(</span> <span class=\"pre\">[1,</span> <span class=\"pre\">2,</span> <span class=\"pre\">3]</span> <span class=\"pre\">)</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">(1,</span> <span class=\"pre\">2,</span> <span class=\"pre\">3)</span></tt>.\nIf no argument is given, the constructor creates a new empty tuple, <tt class=\"docutils literal\"><span class=\"pre\">()</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The constructor builds a tuple whose items are the same and in the same\norder as ",
        "iterable",
        "‘s items.  ",
        "iterable",
        " may be either a sequence, a\ncontainer that supports iteration, or an iterator object.  If ",
        "iterable",
        "\nis already a tuple, it is returned unchanged. For example,\n",
        "tuple('abc')",
        " returns ",
        "('a',",
        "'b',",
        "'c')",
        " and\n",
        "tuple(",
        "[1,",
        "2,",
        "3]",
        ")",
        " returns ",
        "(1,",
        "2,",
        "3)",
        ".\nIf no argument is given, the constructor creates a new empty tuple, ",
        "()",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 12430,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Note that it is actually the comma which makes a tuple, not the parentheses.\nThe parentheses are optional, except in the empty tuple case, or\nwhen they are needed to avoid syntactic ambiguity. For example,\n<tt class=\"docutils literal\"><span class=\"pre\">f(a,</span> <span class=\"pre\">b,</span> <span class=\"pre\">c)</span></tt> is a function call with three arguments, while\n<tt class=\"docutils literal\"><span class=\"pre\">f((a,</span> <span class=\"pre\">b,</span> <span class=\"pre\">c))</span></tt> is a function call with a 3-tuple as the sole argument.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Note that it is actually the comma which makes a tuple, not the parentheses.\nThe parentheses are optional, except in the empty tuple case, or\nwhen they are needed to avoid syntactic ambiguity. For example,\n",
        "f(a,",
        "b,",
        "c)",
        " is a function call with three arguments, while\n",
        "f((a,",
        "b,",
        "c))",
        " is a function call with a 3-tuple as the sole argument."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12490,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Tuples implement all of the <a class=\"reference internal\" href=\"#typesseq-common\"><em>common</em></a> sequence\noperations.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Tuples implement all of the ",
        "common",
        " sequence\noperations."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 12528,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For heterogeneous collections of data where access by name is clearer than\naccess by index, <a class=\"reference internal\" href=\"collections.html#collections.namedtuple\" title=\"collections.namedtuple\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">collections.namedtuple()</span></tt></a> may be a more appropriate\nchoice than a simple tuple object.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#tuples.section:nth-of-type(5) > p:nth-of-type(2)",
      "text": [
        "For heterogeneous collections of data where access by name is clearer than\naccess by index, ",
        "collections.namedtuple()",
        " may be a more appropriate\nchoice than a simple tuple object."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 12588,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.6.6. Ranges<a class=\"headerlink\" href=\"#ranges\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > h3:nth-of-type(1)",
      "text": [
        "4.6.6. Ranges",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 12643,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-26:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#range\" title=\"range\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></tt></a> type represents an immutable sequence of numbers and is\ncommonly used for looping a specific number of times in <a class=\"reference internal\" href=\"../reference/compound_stmts.html#for\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">for</span></tt></a>\nloops.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > p#index-26:nth-of-type(1)",
      "text": [
        "The ",
        "range",
        " type represents an immutable sequence of numbers and is\ncommonly used for looping a specific number of times in ",
        "for",
        "\nloops."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 12681,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#range:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">range</tt><big>(</big><em>stop</em><big>)</big><a class=\"headerlink\" href=\"#range\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dt#range:nth-of-type(1)",
      "text": [
        "class ",
        "range",
        "(",
        "stop",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 12706,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">range</tt><big>(</big><em>start</em>, <em>stop</em><span class=\"optional\">[</span>, <em>step</em><span class=\"optional\">]</span><big>)</big>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dt:nth-of-type(2)",
      "text": [
        "class ",
        "range",
        "(",
        "start",
        ", ",
        "stop",
        "[",
        ", ",
        "step",
        "]",
        ")"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 12735,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The arguments to the range constructor must be integers (either built-in\n<a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> or any object that implements the <tt class=\"docutils literal\"><span class=\"pre\">__index__</span></tt> special\nmethod).  If the <em>step</em> argument is omitted, it defaults to <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt>.\nIf the <em>start</em> argument is omitted, it defaults to <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>.\nIf <em>step</em> is zero, <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> is raised.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The arguments to the range constructor must be integers (either built-in\n",
        "int",
        " or any object that implements the ",
        "__index__",
        " special\nmethod).  If the ",
        "step",
        " argument is omitted, it defaults to ",
        "1",
        ".\nIf the ",
        "start",
        " argument is omitted, it defaults to ",
        "0",
        ".\nIf ",
        "step",
        " is zero, ",
        "ValueError",
        " is raised."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12795,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For a positive <em>step</em>, the contents of a range <tt class=\"docutils literal\"><span class=\"pre\">r</span></tt> are determined by the\nformula <tt class=\"docutils literal\"><span class=\"pre\">r[i]</span> <span class=\"pre\">=</span> <span class=\"pre\">start</span> <span class=\"pre\">+</span> <span class=\"pre\">step*i</span></tt> where <tt class=\"docutils literal\"><span class=\"pre\">i</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">0</span></tt> and\n<tt class=\"docutils literal\"><span class=\"pre\">r[i]</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">stop</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For a positive ",
        "step",
        ", the contents of a range ",
        "r",
        " are determined by the\nformula ",
        "r[i]",
        "=",
        "start",
        "+",
        "step*i",
        " where ",
        "i",
        ">=",
        "0",
        " and\n",
        "r[i]",
        "<",
        "stop",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12833,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "For a negative <em>step</em>, the contents of the range are still determined by\nthe formula <tt class=\"docutils literal\"><span class=\"pre\">r[i]</span> <span class=\"pre\">=</span> <span class=\"pre\">start</span> <span class=\"pre\">+</span> <span class=\"pre\">step*i</span></tt>, but the constraints are <tt class=\"docutils literal\"><span class=\"pre\">i</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">0</span></tt>\nand <tt class=\"docutils literal\"><span class=\"pre\">r[i]</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">stop</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "For a negative ",
        "step",
        ", the contents of the range are still determined by\nthe formula ",
        "r[i]",
        "=",
        "start",
        "+",
        "step*i",
        ", but the constraints are ",
        "i",
        ">=",
        "0",
        "\nand ",
        "r[i]",
        ">",
        "stop",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 12871,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "A range object will be empty if <tt class=\"docutils literal\"><span class=\"pre\">r[0]</span></tt> does not meet the value\nconstraint. Ranges do support negative indices, but these are interpreted\nas indexing from the end of the sequence determined by the positive\nindices.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "A range object will be empty if ",
        "r[0]",
        " does not meet the value\nconstraint. Ranges do support negative indices, but these are interpreted\nas indexing from the end of the sequence determined by the positive\nindices."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12931,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Ranges containing absolute values larger than <a class=\"reference internal\" href=\"sys.html#sys.maxsize\" title=\"sys.maxsize\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.maxsize</span></tt></a> are\npermitted but some features (such as <a class=\"reference internal\" href=\"functions.html#len\" title=\"len\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">len()</span></tt></a>) may raise\n<a class=\"reference internal\" href=\"exceptions.html#OverflowError\" title=\"OverflowError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Ranges containing absolute values larger than ",
        "sys.maxsize",
        " are\npermitted but some features (such as ",
        "len()",
        ") may raise\n",
        "OverflowError",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 12969,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Range examples:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "Range examples:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 13007,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 295,
        "top": 13007,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"go\">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">))</span>\n<span class=\"go\">[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"go\">[0, 5, 10, 15, 20, 25]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"go\">[0, 3, 6, 9]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"go\">[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n<span class=\"go\">[]</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "list",
        "(",
        "range",
        "(",
        "10",
        "))",
        "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
        ">>> ",
        "list",
        "(",
        "range",
        "(",
        "1",
        ",",
        "11",
        "))",
        "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
        ">>> ",
        "list",
        "(",
        "range",
        "(",
        "0",
        ",",
        "30",
        ",",
        "5",
        "))",
        "[0, 5, 10, 15, 20, 25]",
        ">>> ",
        "list",
        "(",
        "range",
        "(",
        "0",
        ",",
        "10",
        ",",
        "3",
        "))",
        "[0, 3, 6, 9]",
        ">>> ",
        "list",
        "(",
        "range",
        "(",
        "0",
        ",",
        "-",
        "10",
        ",",
        "-",
        "1",
        "))",
        "[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]",
        ">>> ",
        "list",
        "(",
        "range",
        "(",
        "0",
        "))",
        "[]",
        ">>> ",
        "list",
        "(",
        "range",
        "(",
        "1",
        ",",
        "0",
        "))",
        "[]"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 13286,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Ranges implement all of the <a class=\"reference internal\" href=\"#typesseq-common\"><em>common</em></a> sequence operations\nexcept concatenation and repetition (due to the fact that range objects can\nonly represent sequences that follow a strict pattern and repetition and\nconcatenation will usually violate that pattern).",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "Ranges implement all of the ",
        "common",
        " sequence operations\nexcept concatenation and repetition (due to the fact that range objects can\nonly represent sequences that follow a strict pattern and repetition and\nconcatenation will usually violate that pattern)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 13346,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The advantage of the <a class=\"reference internal\" href=\"#range\" title=\"range\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></tt></a> type over a regular <a class=\"reference internal\" href=\"#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a> or\n<a class=\"reference internal\" href=\"#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a> is that a <a class=\"reference internal\" href=\"#range\" title=\"range\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">range</span></tt></a> object will always take the same\n(small) amount of memory, no matter the size of the range it represents (as it\nonly stores the <tt class=\"docutils literal\"><span class=\"pre\">start</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">stop</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">step</span></tt> values, calculating individual\nitems and subranges as needed).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > p:nth-of-type(2)",
      "text": [
        "The advantage of the ",
        "range",
        " type over a regular ",
        "list",
        " or\n",
        "tuple",
        " is that a ",
        "range",
        " object will always take the same\n(small) amount of memory, no matter the size of the range it represents (as it\nonly stores the ",
        "start",
        ", ",
        "stop",
        " and ",
        "step",
        " values, calculating individual\nitems and subranges as needed)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 13406,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Range objects implement the <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">collections.Sequence</span></tt> ABC, and provide\nfeatures such as containment tests, element index lookup, slicing and\nsupport for negative indices (see <a class=\"reference internal\" href=\"#typesseq\"><em>Sequence Types — list, tuple, range</em></a>):",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > p:nth-of-type(3)",
      "text": [
        "Range objects implement the ",
        "collections.Sequence",
        " ABC, and provide\nfeatures such as containment tests, element index lookup, slicing and\nsupport for negative indices (see ",
        "Sequence Types — list, tuple, range",
        "):"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 13466,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 282,
        "left": 265,
        "top": 13466,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span>\n<span class=\"go\">range(0, 20, 2)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"mi\">11</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"mi\">10</span> <span class=\"ow\">in</span> <span class=\"n\">r</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"go\">10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"go\">range(0, 10, 2)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">18</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "r",
        "=",
        "range",
        "(",
        "0",
        ",",
        "20",
        ",",
        "2",
        ")",
        ">>> ",
        "r",
        "range(0, 20, 2)",
        ">>> ",
        "11",
        "in",
        "r",
        "False",
        ">>> ",
        "10",
        "in",
        "r",
        "True",
        ">>> ",
        "r",
        ".",
        "index",
        "(",
        "10",
        ")",
        "5",
        ">>> ",
        "r",
        "[",
        "5",
        "]",
        "10",
        ">>> ",
        "r",
        "[:",
        "5",
        "]",
        "range(0, 10, 2)",
        ">>> ",
        "r",
        "[",
        "-",
        "1",
        "]",
        "18"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 13764,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Testing range objects for equality with <tt class=\"docutils literal\"><span class=\"pre\">==</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">!=</span></tt> compares\nthem as sequences.  That is, two range objects are considered equal if\nthey represent the same sequence of values.  (Note that two range\nobjects that compare equal might have different <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">start</span></tt>,\n<tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">stop</span></tt> and <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">step</span></tt> attributes, for example <tt class=\"docutils literal\"><span class=\"pre\">range(0)</span> <span class=\"pre\">==</span>\n<span class=\"pre\">range(2,</span> <span class=\"pre\">1,</span> <span class=\"pre\">3)</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">range(0,</span> <span class=\"pre\">3,</span> <span class=\"pre\">2)</span> <span class=\"pre\">==</span> <span class=\"pre\">range(0,</span> <span class=\"pre\">4,</span> <span class=\"pre\">2)</span></tt>.)",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > p:nth-of-type(4)",
      "text": [
        "Testing range objects for equality with ",
        "==",
        " and ",
        "!=",
        " compares\nthem as sequences.  That is, two range objects are considered equal if\nthey represent the same sequence of values.  (Note that two range\nobjects that compare equal might have different ",
        "start",
        ",\n",
        "stop",
        " and ",
        "step",
        " attributes, for example ",
        "range(0)",
        "==",
        "range(2,",
        "1,",
        "3)",
        " or ",
        "range(0,",
        "3,",
        "2)",
        "==",
        "range(0,",
        "4,",
        "2)",
        ".)"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 13824,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(5)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.2:</span> Implement the Sequence ABC.\nSupport slicing and negative indices.\nTest <a class=\"reference internal\" href=\"functions.html#int\" title=\"int\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></tt></a> objects for membership in constant time instead of\niterating through all items.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > p.versionchanged:nth-of-type(5)",
      "text": [
        "Changed in version 3.2:",
        " Implement the Sequence ABC.\nSupport slicing and negative indices.\nTest ",
        "int",
        " objects for membership in constant time instead of\niterating through all items."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 13884,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(6)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> Define ‘==’ and ‘!=’ to compare range objects based on the\nsequence of values they define (instead of comparing based on\nobject identity).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > p.versionchanged:nth-of-type(6)",
      "text": [
        "Changed in version 3.3:",
        " Define ‘==’ and ‘!=’ to compare range objects based on the\nsequence of values they define (instead of comparing based on\nobject identity)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 13922,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(7)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3:</span> The <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">start</span></tt>, <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">stop</span></tt> and <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">step</span></tt> attributes.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#sequence-types-list-tuple-range.section:nth-of-type(6) > div#ranges.section:nth-of-type(6) > p.versionadded:nth-of-type(7)",
      "text": [
        "New in version 3.3:",
        " The ",
        "start",
        ", ",
        "stop",
        " and ",
        "step",
        " attributes."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 13960,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.7. Text Sequence Type — <a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></tt></a><a class=\"headerlink\" href=\"#text-sequence-type-str\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > h2:nth-of-type(1)",
      "text": [
        "4.7. Text Sequence Type — ",
        "str",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 14023,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Textual data in Python is handled with <a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></tt></a> objects, or <em class=\"dfn\">strings</em>.\nStrings are immutable\n<a class=\"reference internal\" href=\"#typesseq\"><em>sequences</em></a> of Unicode code points.  String literals are\nwritten in a variety of ways:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p:nth-of-type(1)",
      "text": [
        "Textual data in Python is handled with ",
        "str",
        " objects, or ",
        "strings",
        ".\nStrings are immutable\n",
        "sequences",
        " of Unicode code points.  String literals are\nwritten in a variety of ways:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 14061,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "Single quotes: <tt class=\"docutils literal\"><span class=\"pre\">'allows</span> <span class=\"pre\">embedded</span> <span class=\"pre\">\"double\"</span> <span class=\"pre\">quotes'</span></tt>",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Single quotes: ",
        "'allows",
        "embedded",
        "\"double\"",
        "quotes'"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 14081,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Double quotes: <tt class=\"docutils literal\"><span class=\"pre\">\"allows</span> <span class=\"pre\">embedded</span> <span class=\"pre\">'single'</span> <span class=\"pre\">quotes\"</span></tt>.",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Double quotes: ",
        "\"allows",
        "embedded",
        "'single'",
        "quotes\"",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 14101,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "Triple quoted: <tt class=\"docutils literal\"><span class=\"pre\">'''Three</span> <span class=\"pre\">single</span> <span class=\"pre\">quotes'''</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">\"\"\"Three</span> <span class=\"pre\">double</span> <span class=\"pre\">quotes\"\"\"</span></tt>",
      "path": "div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "Triple quoted: ",
        "'''Three",
        "single",
        "quotes'''",
        ", ",
        "\"\"\"Three",
        "double",
        "quotes\"\"\""
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 14137,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Triple quoted strings may span multiple lines - all associated whitespace will\nbe included in the string literal.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p:nth-of-type(2)",
      "text": [
        "Triple quoted strings may span multiple lines - all associated whitespace will\nbe included in the string literal."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 14175,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "String literals that are part of a single expression and have only whitespace\nbetween them will be implicitly converted to a single string literal. That\nis, <tt class=\"docutils literal\"><span class=\"pre\">(\"spam</span> <span class=\"pre\">\"</span> <span class=\"pre\">\"eggs\")</span> <span class=\"pre\">==</span> <span class=\"pre\">\"spam</span> <span class=\"pre\">eggs\"</span></tt>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p:nth-of-type(3)",
      "text": [
        "String literals that are part of a single expression and have only whitespace\nbetween them will be implicitly converted to a single string literal. That\nis, ",
        "(\"spam",
        "\"",
        "\"eggs\")",
        "==",
        "\"spam",
        "eggs\"",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 14235,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "See <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#strings\"><em>String and Bytes literals</em></a> for more about the various forms of string literal,\nincluding supported escape sequences, and the <tt class=\"docutils literal\"><span class=\"pre\">r</span></tt> (“raw”) prefix that\ndisables most escape sequence processing.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p:nth-of-type(4)",
      "text": [
        "See ",
        "String and Bytes literals",
        " for more about the various forms of string literal,\nincluding supported escape sequences, and the ",
        "r",
        " (“raw”) prefix that\ndisables most escape sequence processing."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 14295,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Strings may also be created from other objects using the <a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></tt></a>\nconstructor.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p:nth-of-type(5)",
      "text": [
        "Strings may also be created from other objects using the ",
        "str",
        "\nconstructor."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 14333,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Since there is no separate “character” type, indexing a string produces\nstrings of length 1. That is, for a non-empty string <em>s</em>, <tt class=\"docutils literal\"><span class=\"pre\">s[0]</span> <span class=\"pre\">==</span> <span class=\"pre\">s[0:1]</span></tt>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p:nth-of-type(6)",
      "text": [
        "Since there is no separate “character” type, indexing a string produces\nstrings of length 1. That is, for a non-empty string ",
        "s",
        ", ",
        "s[0]",
        "==",
        "s[0:1]",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 14371,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-28:nth-of-type(7)",
      "html": "There is also no mutable string type, but <a class=\"reference internal\" href=\"#str.join\" title=\"str.join\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.join()</span></tt></a> or\n<a class=\"reference internal\" href=\"io.html#io.StringIO\" title=\"io.StringIO\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">io.StringIO</span></tt></a> can be used to efficiently construct strings from\nmultiple fragments.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p#index-28:nth-of-type(7)",
      "text": [
        "There is also no mutable string type, but ",
        "str.join()",
        " or\n",
        "io.StringIO",
        " can be used to efficiently construct strings from\nmultiple fragments."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 14409,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(8)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> For backwards compatibility with the Python 2 series, the <tt class=\"docutils literal\"><span class=\"pre\">u</span></tt> prefix is\nonce again permitted on string literals. It has no effect on the meaning\nof string literals and cannot be combined with the <tt class=\"docutils literal\"><span class=\"pre\">r</span></tt> prefix.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > p.versionchanged:nth-of-type(8)",
      "text": [
        "Changed in version 3.3:",
        " For backwards compatibility with the Python 2 series, the ",
        "u",
        " prefix is\nonce again permitted on string literals. It has no effect on the meaning\nof string literals and cannot be combined with the ",
        "r",
        " prefix."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 14469,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">str</tt><big>(</big><em>object=''</em><big>)</big><a class=\"headerlink\" href=\"#str\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dt#str:nth-of-type(1)",
      "text": [
        "class ",
        "str",
        "(",
        "object=''",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 14494,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">str</tt><big>(</big><em>object=b''</em>, <em>encoding='utf-8'</em>, <em>errors='strict'</em><big>)</big>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dt:nth-of-type(2)",
      "text": [
        "class ",
        "str",
        "(",
        "object=b''",
        ", ",
        "encoding='utf-8'",
        ", ",
        "errors='strict'",
        ")"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 14522,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a <a class=\"reference internal\" href=\"#textseq\"><em>string</em></a> version of <em>object</em>.  If <em>object</em> is not\nprovided, returns the empty string.  Otherwise, the behavior of <tt class=\"docutils literal\"><span class=\"pre\">str()</span></tt>\ndepends on whether <em>encoding</em> or <em>errors</em> is given, as follows.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a ",
        "string",
        " version of ",
        "object",
        ".  If ",
        "object",
        " is not\nprovided, returns the empty string.  Otherwise, the behavior of ",
        "str()",
        "\ndepends on whether ",
        "encoding",
        " or ",
        "errors",
        " is given, as follows."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 14582,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If neither <em>encoding</em> nor <em>errors</em> is given, <tt class=\"docutils literal\"><span class=\"pre\">str(object)</span></tt> returns\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__str__\" title=\"object.__str__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">object.__str__()</span></tt></a>, which is the “informal” or nicely\nprintable string representation of <em>object</em>.  For string objects, this is\nthe string itself.  If <em>object</em> does not have a <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__str__\" title=\"object.__str__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__str__()</span></tt></a>\nmethod, then <a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a> falls back to returning\n<a class=\"reference internal\" href=\"functions.html#repr\" title=\"repr\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">repr(object)</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If neither ",
        "encoding",
        " nor ",
        "errors",
        " is given, ",
        "str(object)",
        " returns\n",
        "object.__str__()",
        ", which is the “informal” or nicely\nprintable string representation of ",
        "object",
        ".  For string objects, this is\nthe string itself.  If ",
        "object",
        " does not have a ",
        "__str__()",
        "\nmethod, then ",
        "str()",
        " falls back to returning\n",
        "repr(object)",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 14642,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-30:nth-of-type(3)",
      "html": "If at least one of <em>encoding</em> or <em>errors</em> is given, <em>object</em> should be a\n<a class=\"reference internal\" href=\"../glossary.html#term-bytes-like-object\"><em class=\"xref std std-term\">bytes-like object</em></a> (e.g. <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> or <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>).  In\nthis case, if <em>object</em> is a <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> (or <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>) object,\nthen <tt class=\"docutils literal\"><span class=\"pre\">str(bytes,</span> <span class=\"pre\">encoding,</span> <span class=\"pre\">errors)</span></tt> is equivalent to\n<a class=\"reference internal\" href=\"#bytes.decode\" title=\"bytes.decode\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">bytes.decode(encoding,</span> <span class=\"pre\">errors)</span></tt></a>.  Otherwise, the bytes\nobject underlying the buffer object is obtained before calling\n<a class=\"reference internal\" href=\"#bytes.decode\" title=\"bytes.decode\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">bytes.decode()</span></tt></a>.  See <a class=\"reference internal\" href=\"#binaryseq\"><em>Binary Sequence Types — bytes, bytearray, memoryview</em></a> and\n<a class=\"reference internal\" href=\"../c-api/buffer.html#bufferobjects\"><em>Buffer Protocol</em></a> for information on buffer objects.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p#index-30:nth-of-type(3)",
      "text": [
        "If at least one of ",
        "encoding",
        " or ",
        "errors",
        " is given, ",
        "object",
        " should be a\n",
        "bytes-like object",
        " (e.g. ",
        "bytes",
        " or ",
        "bytearray",
        ").  In\nthis case, if ",
        "object",
        " is a ",
        "bytes",
        " (or ",
        "bytearray",
        ") object,\nthen ",
        "str(bytes,",
        "encoding,",
        "errors)",
        " is equivalent to\n",
        "bytes.decode(encoding,",
        "errors)",
        ".  Otherwise, the bytes\nobject underlying the buffer object is obtained before calling\n",
        "bytes.decode()",
        ".  See ",
        "Binary Sequence Types — bytes, bytearray, memoryview",
        " and\n",
        "Buffer Protocol",
        " for information on buffer objects."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 14724,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Passing a <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> object to <a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a> without the <em>encoding</em>\nor <em>errors</em> arguments falls under the first case of returning the informal\nstring representation (see also the <a class=\"reference internal\" href=\"../using/cmdline.html#cmdoption-b\"><em class=\"xref std std-option\">-b</em></a> command-line option to\nPython).  For example:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Passing a ",
        "bytes",
        " object to ",
        "str()",
        " without the ",
        "encoding",
        "\nor ",
        "errors",
        " arguments falls under the first case of returning the informal\nstring representation (see also the ",
        "-b",
        " command-line option to\nPython).  For example:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 14784,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 295,
        "top": 14784,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'Zoot!'</span><span class=\"p\">)</span>\n<span class=\"go\">\"b'Zoot!'\"</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "str",
        "(",
        "b",
        "'Zoot!'",
        ")",
        "\"b'Zoot!'\""
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 14847,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "For more information on the <tt class=\"docutils literal\"><span class=\"pre\">str</span></tt> class and its methods, see\n<a class=\"reference internal\" href=\"#textseq\"><em>Text Sequence Type — str</em></a> and the <a class=\"reference internal\" href=\"#string-methods\"><em>String Methods</em></a> section below.  To output\nformatted strings, see the <a class=\"reference internal\" href=\"string.html#string-formatting\"><em>String Formatting</em></a> section.  In addition,\nsee the <a class=\"reference internal\" href=\"text.html#stringservices\"><em>Text Processing Services</em></a> section.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "For more information on the ",
        "str",
        " class and its methods, see\n",
        "Text Sequence Type — str",
        " and the ",
        "String Methods",
        " section below.  To output\nformatted strings, see the ",
        "String Formatting",
        " section.  In addition,\nsee the ",
        "Text Processing Services",
        " section."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 14907,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.7.1. String Methods<a class=\"headerlink\" href=\"#string-methods\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "4.7.1. String Methods",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 14962,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-32:nth-of-type(1)",
      "html": "Strings implement all of the <a class=\"reference internal\" href=\"#typesseq-common\"><em>common</em></a> sequence\noperations, along with the additional methods described below.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > p#index-32:nth-of-type(1)",
      "text": [
        "Strings implement all of the ",
        "common",
        " sequence\noperations, along with the additional methods described below."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 15000,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Strings also support two styles of string formatting, one providing a large\ndegree of flexibility and customization (see <a class=\"reference internal\" href=\"#str.format\" title=\"str.format\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format()</span></tt></a>,\n<a class=\"reference internal\" href=\"string.html#formatstrings\"><em>Format String Syntax</em></a> and <a class=\"reference internal\" href=\"string.html#string-formatting\"><em>String Formatting</em></a>) and the other based on C\n<tt class=\"docutils literal\"><span class=\"pre\">printf</span></tt> style formatting that handles a narrower range of types and is\nslightly harder to use correctly, but is often faster for the cases it can\nhandle (<a class=\"reference internal\" href=\"#old-string-formatting\"><em>printf-style String Formatting</em></a>).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Strings also support two styles of string formatting, one providing a large\ndegree of flexibility and customization (see ",
        "str.format()",
        ",\n",
        "Format String Syntax",
        " and ",
        "String Formatting",
        ") and the other based on C\n",
        "printf",
        " style formatting that handles a narrower range of types and is\nslightly harder to use correctly, but is often faster for the cases it can\nhandle (",
        "printf-style String Formatting",
        ")."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 15082,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The <a class=\"reference internal\" href=\"text.html#textservices\"><em>Text Processing Services</em></a> section of the standard library covers a number of\nother modules that provide various text related utilities (including regular\nexpression support in the <a class=\"reference internal\" href=\"re.html#module-re\" title=\"re: Regular expression operations.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">re</span></tt></a> module).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The ",
        "Text Processing Services",
        " section of the standard library covers a number of\nother modules that provide various text related utilities (including regular\nexpression support in the ",
        "re",
        " module)."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 15142,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.capitalize:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">capitalize</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.capitalize\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(1) > dt#str.capitalize:nth-of-type(1)",
      "text": [
        "str.",
        "capitalize",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15170,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with its first character capitalized and the\nrest lowercased.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with its first character capitalized and the\nrest lowercased."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 15208,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.casefold:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">casefold</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.casefold\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(2) > dt#str.casefold:nth-of-type(1)",
      "text": [
        "str.",
        "casefold",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15236,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a casefolded copy of the string. Casefolded strings may be used for\ncaseless matching.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a casefolded copy of the string. Casefolded strings may be used for\ncaseless matching."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 15274,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Casefolding is similar to lowercasing but more aggressive because it is\nintended to remove all case distinctions in a string. For example, the German\nlowercase letter <tt class=\"docutils literal\"><span class=\"pre\">'ß'</span></tt> is equivalent to <tt class=\"docutils literal\"><span class=\"pre\">\"ss\"</span></tt>. Since it is already\nlowercase, <a class=\"reference internal\" href=\"#str.lower\" title=\"str.lower\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">lower()</span></tt></a> would do nothing to <tt class=\"docutils literal\"><span class=\"pre\">'ß'</span></tt>; <a class=\"reference internal\" href=\"#str.casefold\" title=\"str.casefold\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">casefold()</span></tt></a>\nconverts it to <tt class=\"docutils literal\"><span class=\"pre\">\"ss\"</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Casefolding is similar to lowercasing but more aggressive because it is\nintended to remove all case distinctions in a string. For example, the German\nlowercase letter ",
        "'ß'",
        " is equivalent to ",
        "\"ss\"",
        ". Since it is already\nlowercase, ",
        "lower()",
        " would do nothing to ",
        "'ß'",
        "; ",
        "casefold()",
        "\nconverts it to ",
        "\"ss\"",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15334,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The casefolding algorithm is described in section 3.13 of the Unicode\nStandard.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The casefolding algorithm is described in section 3.13 of the Unicode\nStandard."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15372,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(4)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p.versionadded:nth-of-type(4)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 15410,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.center:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">center</tt><big>(</big><em>width</em><span class=\"optional\">[</span>, <em>fillchar</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.center\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(3) > dt#str.center:nth-of-type(1)",
      "text": [
        "str.",
        "center",
        "(",
        "width",
        "[",
        ", ",
        "fillchar",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15439,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return centered in a string of length <em>width</em>. Padding is done using the\nspecified <em>fillchar</em> (default is a space).",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return centered in a string of length ",
        "width",
        ". Padding is done using the\nspecified ",
        "fillchar",
        " (default is a space)."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 15477,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.count:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">count</tt><big>(</big><em>sub</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.count\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(4) > dt#str.count:nth-of-type(1)",
      "text": [
        "str.",
        "count",
        "(",
        "sub",
        "[",
        ", ",
        "start",
        "[",
        ", ",
        "end",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15506,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the number of non-overlapping occurrences of substring <em>sub</em> in the\nrange [<em>start</em>, <em>end</em>].  Optional arguments <em>start</em> and <em>end</em> are\ninterpreted as in slice notation.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the number of non-overlapping occurrences of substring ",
        "sub",
        " in the\nrange [",
        "start",
        ", ",
        "end",
        "].  Optional arguments ",
        "start",
        " and ",
        "end",
        " are\ninterpreted as in slice notation."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 15544,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.encode:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">encode</tt><big>(</big><em>encoding=\"utf-8\"</em>, <em>errors=\"strict\"</em><big>)</big><a class=\"headerlink\" href=\"#str.encode\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(5) > dt#str.encode:nth-of-type(1)",
      "text": [
        "str.",
        "encode",
        "(",
        "encoding=\"utf-8\"",
        ", ",
        "errors=\"strict\"",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 15572,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an encoded version of the string as a bytes object. Default encoding\nis <tt class=\"docutils literal\"><span class=\"pre\">'utf-8'</span></tt>. <em>errors</em> may be given to set a different error handling scheme.\nThe default for <em>errors</em> is <tt class=\"docutils literal\"><span class=\"pre\">'strict'</span></tt>, meaning that encoding errors raise\na <a class=\"reference internal\" href=\"exceptions.html#UnicodeError\" title=\"UnicodeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">UnicodeError</span></tt></a>. Other possible\nvalues are <tt class=\"docutils literal\"><span class=\"pre\">'ignore'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'replace'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'xmlcharrefreplace'</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">'backslashreplace'</span></tt> and any other name registered via\n<a class=\"reference internal\" href=\"codecs.html#codecs.register_error\" title=\"codecs.register_error\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">codecs.register_error()</span></tt></a>, see section <a class=\"reference internal\" href=\"codecs.html#codec-base-classes\"><em>Codec Base Classes</em></a>. For a\nlist of possible encodings, see section <a class=\"reference internal\" href=\"codecs.html#standard-encodings\"><em>Standard Encodings</em></a>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an encoded version of the string as a bytes object. Default encoding\nis ",
        "'utf-8'",
        ". ",
        "errors",
        " may be given to set a different error handling scheme.\nThe default for ",
        "errors",
        " is ",
        "'strict'",
        ", meaning that encoding errors raise\na ",
        "UnicodeError",
        ". Other possible\nvalues are ",
        "'ignore'",
        ", ",
        "'replace'",
        ", ",
        "'xmlcharrefreplace'",
        ",\n",
        "'backslashreplace'",
        " and any other name registered via\n",
        "codecs.register_error()",
        ", see section ",
        "Codec Base Classes",
        ". For a\nlist of possible encodings, see section ",
        "Standard Encodings",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 15654,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.1:</span> Support for keyword arguments added.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(2)",
      "text": [
        "Changed in version 3.1:",
        " Support for keyword arguments added."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 15692,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.endswith:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">endswith</tt><big>(</big><em>suffix</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.endswith\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(6) > dt#str.endswith:nth-of-type(1)",
      "text": [
        "str.",
        "endswith",
        "(",
        "suffix",
        "[",
        ", ",
        "start",
        "[",
        ", ",
        "end",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 15721,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> if the string ends with the specified <em>suffix</em>, otherwise return\n<tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>.  <em>suffix</em> can also be a tuple of suffixes to look for.  With optional\n<em>start</em>, test beginning at that position.  With optional <em>end</em>, stop comparing\nat that position.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return ",
        "True",
        " if the string ends with the specified ",
        "suffix",
        ", otherwise return\n",
        "False",
        ".  ",
        "suffix",
        " can also be a tuple of suffixes to look for.  With optional\n",
        "start",
        ", test beginning at that position.  With optional ",
        "end",
        ", stop comparing\nat that position."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 15781,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.expandtabs:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">expandtabs</tt><big>(</big><span class=\"optional\">[</span><em>tabsize</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.expandtabs\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(7) > dt#str.expandtabs:nth-of-type(1)",
      "text": [
        "str.",
        "expandtabs",
        "(",
        "[",
        "tabsize",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 295,
        "top": 15810,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string where all tab characters are replaced by one or\nmore spaces, depending on the current column and the given tab size.  Tab\npositions occur every <em>tabsize</em> characters (default is 8, giving tab\npositions at columns 0, 8, 16 and so on).  To expand the string, the current\ncolumn is set to zero and the string is examined character by character.  If\nthe character is a tab (<tt class=\"docutils literal\"><span class=\"pre\">\\t</span></tt>), one or more space characters are inserted\nin the result until the current column is equal to the next tab position.\n(The tab character itself is not copied.)  If the character is a newline\n(<tt class=\"docutils literal\"><span class=\"pre\">\\n</span></tt>) or return (<tt class=\"docutils literal\"><span class=\"pre\">\\r</span></tt>), it is copied and the current column is reset to\nzero.  Any other character is copied unchanged and the current column is\nincremented by one regardless of how the character is represented when\nprinted.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string where all tab characters are replaced by one or\nmore spaces, depending on the current column and the given tab size.  Tab\npositions occur every ",
        "tabsize",
        " characters (default is 8, giving tab\npositions at columns 0, 8, 16 and so on).  To expand the string, the current\ncolumn is set to zero and the string is examined character by character.  If\nthe character is a tab (",
        "\\t",
        "), one or more space characters are inserted\nin the result until the current column is equal to the next tab position.\n(The tab character itself is not copied.)  If the character is a newline\n(",
        "\\n",
        ") or return (",
        "\\r",
        "), it is copied and the current column is reset to\nzero.  Any other character is copied unchanged and the current column is\nincremented by one regardless of how the character is represented when\nprinted."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 15936,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 15936,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'01</span><span class=\"se\">\\t</span><span class=\"s\">012</span><span class=\"se\">\\t</span><span class=\"s\">0123</span><span class=\"se\">\\t</span><span class=\"s\">01234'</span><span class=\"o\">.</span><span class=\"n\">expandtabs</span><span class=\"p\">()</span>\n<span class=\"go\">'01      012     0123    01234'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'01</span><span class=\"se\">\\t</span><span class=\"s\">012</span><span class=\"se\">\\t</span><span class=\"s\">0123</span><span class=\"se\">\\t</span><span class=\"s\">01234'</span><span class=\"o\">.</span><span class=\"n\">expandtabs</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">'01  012 0123    01234'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'01",
        "\\t",
        "012",
        "\\t",
        "0123",
        "\\t",
        "01234'",
        ".",
        "expandtabs",
        "()",
        "'01      012     0123    01234'",
        ">>> ",
        "'01",
        "\\t",
        "012",
        "\\t",
        "0123",
        "\\t",
        "01234'",
        ".",
        "expandtabs",
        "(",
        "4",
        ")",
        "'01  012 0123    01234'"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 16036,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.find:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">find</tt><big>(</big><em>sub</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.find\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(8) > dt#str.find:nth-of-type(1)",
      "text": [
        "str.",
        "find",
        "(",
        "sub",
        "[",
        ", ",
        "start",
        "[",
        ", ",
        "end",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 16065,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the lowest index in the string where substring <em>sub</em> is found, such\nthat <em>sub</em> is contained in the slice <tt class=\"docutils literal\"><span class=\"pre\">s[start:end]</span></tt>.  Optional arguments\n<em>start</em> and <em>end</em> are interpreted as in slice notation.  Return <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt> if\n<em>sub</em> is not found.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the lowest index in the string where substring ",
        "sub",
        " is found, such\nthat ",
        "sub",
        " is contained in the slice ",
        "s[start:end]",
        ".  Optional arguments\n",
        "start",
        " and ",
        "end",
        " are interpreted as in slice notation.  Return ",
        "-1",
        " if\n",
        "sub",
        " is not found."
      ]
    },
    {
      "bound": {
        "height": 106,
        "left": 295,
        "top": 16125,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p>The <a class=\"reference internal\" href=\"#str.find\" title=\"str.find\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">find()</span></tt></a> method should be used only if you need to know the\nposition of <em>sub</em>.  To check if <em>sub</em> is a substring or not, use the\n<a class=\"reference internal\" href=\"../reference/expressions.html#in\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">in</span></tt></a> operator:</p>\n<div class=\"last highlight-python3\" style=\"position: relative; \"><div class=\"highlight\"><span class=\"copybutton\" style=\"cursor: pointer; position: absolute; top: 0px; right: 0px; border-top-color: rgb(170, 204, 153); border-right-color: rgb(170, 204, 153); border-bottom-color: rgb(170, 204, 153); border-left-color: rgb(170, 204, 153); border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; color: rgb(170, 204, 153); font-family: monospace; padding-left: 0.2em; padding-right: 0.2em; border-top-left-radius: 0px 0px; border-top-right-radius: 3px 3px; border-bottom-right-radius: 0px 0px; border-bottom-left-radius: 0px 0px; \" title=\"Hide the prompts and output\">&gt;&gt;&gt;</span><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'Py'</span> <span class=\"ow\">in</span> <span class=\"s\">'Python'</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "The ",
        "find()",
        " method should be used only if you need to know the\nposition of ",
        "sub",
        ".  To check if ",
        "sub",
        " is a substring or not, use the\n",
        "in",
        " operator:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1546,
        "top": 16170,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1) > div.highlight-python3.last:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 303,
        "top": 16170,
        "width": 1273
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'Py'</span> <span class=\"ow\">in</span> <span class=\"s\">'Python'</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1) > div.highlight-python3.last:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'Py'",
        "in",
        "'Python'",
        "True"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 16247,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.format:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">format</tt><big>(</big><em>*args</em>, <em>**kwargs</em><big>)</big><a class=\"headerlink\" href=\"#str.format\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(9) > dt#str.format:nth-of-type(1)",
      "text": [
        "str.",
        "format",
        "(",
        "*args",
        ", ",
        "**kwargs",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 16275,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Perform a string formatting operation.  The string on which this method is\ncalled can contain literal text or replacement fields delimited by braces\n<tt class=\"docutils literal\"><span class=\"pre\">{}</span></tt>.  Each replacement field contains either the numeric index of a\npositional argument, or the name of a keyword argument.  Returns a copy of\nthe string where each replacement field is replaced with the string value of\nthe corresponding argument.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Perform a string formatting operation.  The string on which this method is\ncalled can contain literal text or replacement fields delimited by braces\n",
        "{}",
        ".  Each replacement field contains either the numeric index of a\npositional argument, or the name of a keyword argument.  Returns a copy of\nthe string where each replacement field is replaced with the string value of\nthe corresponding argument."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 16357,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(9) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 295,
        "top": 16357,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">\"The sum of 1 + 2 is {0}\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">'The sum of 1 + 2 is 3'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(9) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "\"The sum of 1 + 2 is {0}\"",
        ".",
        "format",
        "(",
        "1",
        "+",
        "2",
        ")",
        "'The sum of 1 + 2 is 3'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16420,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "See <a class=\"reference internal\" href=\"string.html#formatstrings\"><em>Format String Syntax</em></a> for a description of the various formatting options\nthat can be specified in format strings.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "See ",
        "Format String Syntax",
        " for a description of the various formatting options\nthat can be specified in format strings."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 16458,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.format_map:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">format_map</tt><big>(</big><em>mapping</em><big>)</big><a class=\"headerlink\" href=\"#str.format_map\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(10) > dt#str.format_map:nth-of-type(1)",
      "text": [
        "str.",
        "format_map",
        "(",
        "mapping",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16486,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Similar to <tt class=\"docutils literal\"><span class=\"pre\">str.format(**mapping)</span></tt>, except that <tt class=\"docutils literal\"><span class=\"pre\">mapping</span></tt> is\nused directly and not copied to a <a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> .  This is useful\nif for example <tt class=\"docutils literal\"><span class=\"pre\">mapping</span></tt> is a dict subclass:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Similar to ",
        "str.format(**mapping)",
        ", except that ",
        "mapping",
        " is\nused directly and not copied to a ",
        "dict",
        " .  This is useful\nif for example ",
        "mapping",
        " is a dict subclass:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 16524,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(10) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 295,
        "top": 16524,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Default</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__missing__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"n\">key</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'{name} was born in {country}'</span><span class=\"o\">.</span><span class=\"n\">format_map</span><span class=\"p\">(</span><span class=\"n\">Default</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">'Guido'</span><span class=\"p\">))</span>\n<span class=\"go\">'Guido was born in country'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(10) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "class",
        "Default",
        "(",
        "dict",
        "):",
        "... ",
        "def",
        "__missing__",
        "(",
        "self",
        ",",
        "key",
        "):",
        "... ",
        "return",
        "key",
        "...",
        ">>> ",
        "'{name} was born in {country}'",
        ".",
        "format_map",
        "(",
        "Default",
        "(",
        "name",
        "=",
        "'Guido'",
        "))",
        "'Guido was born in country'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16659,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(10) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.2."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 16697,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.index:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">index</tt><big>(</big><em>sub</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.index\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(11) > dt#str.index:nth-of-type(1)",
      "text": [
        "str.",
        "index",
        "(",
        "sub",
        "[",
        ", ",
        "start",
        "[",
        ", ",
        "end",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 16726,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Like <a class=\"reference internal\" href=\"#str.find\" title=\"str.find\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">find()</span></tt></a>, but raise <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> when the substring is not found.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Like ",
        "find()",
        ", but raise ",
        "ValueError",
        " when the substring is not found."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 16764,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isalnum:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isalnum</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isalnum\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(12) > dt#str.isalnum:nth-of-type(1)",
      "text": [
        "str.",
        "isalnum",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 16792,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all characters in the string are alphanumeric and there is at\nleast one character, false otherwise.  A character <tt class=\"docutils literal\"><span class=\"pre\">c</span></tt> is alphanumeric if one\nof the following returns <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>: <tt class=\"docutils literal\"><span class=\"pre\">c.isalpha()</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">c.isdecimal()</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">c.isdigit()</span></tt>, or <tt class=\"docutils literal\"><span class=\"pre\">c.isnumeric()</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all characters in the string are alphanumeric and there is at\nleast one character, false otherwise.  A character ",
        "c",
        " is alphanumeric if one\nof the following returns ",
        "True",
        ": ",
        "c.isalpha()",
        ", ",
        "c.isdecimal()",
        ",\n",
        "c.isdigit()",
        ", or ",
        "c.isnumeric()",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 16852,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isalpha:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isalpha</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isalpha\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(13) > dt#str.isalpha:nth-of-type(1)",
      "text": [
        "str.",
        "isalpha",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 16880,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all characters in the string are alphabetic and there is at least\none character, false otherwise.  Alphabetic characters are those characters defined\nin the Unicode character database as “Letter”, i.e., those with general category\nproperty being one of “Lm”, “Lt”, “Lu”, “Ll”, or “Lo”.  Note that this is different\nfrom the “Alphabetic” property defined in the Unicode Standard.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(13) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all characters in the string are alphabetic and there is at least\none character, false otherwise.  Alphabetic characters are those characters defined\nin the Unicode character database as “Letter”, i.e., those with general category\nproperty being one of “Lm”, “Lt”, “Lu”, “Ll”, or “Lo”.  Note that this is different\nfrom the “Alphabetic” property defined in the Unicode Standard."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 16962,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isdecimal:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isdecimal</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isdecimal\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(14) > dt#str.isdecimal:nth-of-type(1)",
      "text": [
        "str.",
        "isdecimal",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 16990,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all characters in the string are decimal\ncharacters and there is at least one character, false\notherwise. Decimal characters are those from general category “Nd”. This category\nincludes digit characters, and all characters\nthat can be used to form decimal-radix numbers, e.g. U+0660,\nARABIC-INDIC DIGIT ZERO.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(14) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all characters in the string are decimal\ncharacters and there is at least one character, false\notherwise. Decimal characters are those from general category “Nd”. This category\nincludes digit characters, and all characters\nthat can be used to form decimal-radix numbers, e.g. U+0660,\nARABIC-INDIC DIGIT ZERO."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17050,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isdigit:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isdigit</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isdigit\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(15) > dt#str.isdigit:nth-of-type(1)",
      "text": [
        "str.",
        "isdigit",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 17078,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all characters in the string are digits and there is at least one\ncharacter, false otherwise.  Digits include decimal characters and digits that need\nspecial handling, such as the compatibility superscript digits.  Formally, a digit\nis a character that has the property value Numeric_Type=Digit or Numeric_Type=Decimal.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(15) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all characters in the string are digits and there is at least one\ncharacter, false otherwise.  Digits include decimal characters and digits that need\nspecial handling, such as the compatibility superscript digits.  Formally, a digit\nis a character that has the property value Numeric_Type=Digit or Numeric_Type=Decimal."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17138,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isidentifier:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isidentifier</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isidentifier\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(16) > dt#str.isidentifier:nth-of-type(1)",
      "text": [
        "str.",
        "isidentifier",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17166,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if the string is a valid identifier according to the language\ndefinition, section <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#identifiers\"><em>Identifiers and keywords</em></a>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if the string is a valid identifier according to the language\ndefinition, section ",
        "Identifiers and keywords",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17204,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Use <a class=\"reference internal\" href=\"keyword.html#keyword.iskeyword\" title=\"keyword.iskeyword\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">keyword.iskeyword()</span></tt></a> to test for reserved identifiers such as\n<a class=\"reference internal\" href=\"../reference/compound_stmts.html#def\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">def</span></tt></a> and <a class=\"reference internal\" href=\"../reference/compound_stmts.html#class\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">class</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Use ",
        "keyword.iskeyword()",
        " to test for reserved identifiers such as\n",
        "def",
        " and ",
        "class",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17242,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.islower:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">islower</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.islower\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(17) > dt#str.islower:nth-of-type(1)",
      "text": [
        "str.",
        "islower",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17270,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all cased characters <a class=\"footnote-reference\" href=\"#id13\" id=\"id5\">[4]</a> in the string are lowercase and\nthere is at least one cased character, false otherwise.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(17) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all cased characters ",
        "[4]",
        " in the string are lowercase and\nthere is at least one cased character, false otherwise."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17308,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isnumeric:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isnumeric</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isnumeric\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(18) > dt#str.isnumeric:nth-of-type(1)",
      "text": [
        "str.",
        "isnumeric",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 17336,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all characters in the string are numeric\ncharacters, and there is at least one character, false\notherwise. Numeric characters include digit characters, and all characters\nthat have the Unicode numeric value property, e.g. U+2155,\nVULGAR FRACTION ONE FIFTH.  Formally, numeric characters are those with the property\nvalue Numeric_Type=Digit, Numeric_Type=Decimal or Numeric_Type=Numeric.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(18) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all characters in the string are numeric\ncharacters, and there is at least one character, false\notherwise. Numeric characters include digit characters, and all characters\nthat have the Unicode numeric value property, e.g. U+2155,\nVULGAR FRACTION ONE FIFTH.  Formally, numeric characters are those with the property\nvalue Numeric_Type=Digit, Numeric_Type=Decimal or Numeric_Type=Numeric."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17418,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isprintable:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isprintable</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isprintable\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(19) > dt#str.isprintable:nth-of-type(1)",
      "text": [
        "str.",
        "isprintable",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 17446,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all characters in the string are printable or the string is\nempty, false otherwise.  Nonprintable characters are those characters defined\nin the Unicode character database as “Other” or “Separator”, excepting the\nASCII space (0x20) which is considered printable.  (Note that printable\ncharacters in this context are those which should not be escaped when\n<a class=\"reference internal\" href=\"functions.html#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a> is invoked on a string.  It has no bearing on the handling of\nstrings written to <a class=\"reference internal\" href=\"sys.html#sys.stdout\" title=\"sys.stdout\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.stdout</span></tt></a> or <a class=\"reference internal\" href=\"sys.html#sys.stderr\" title=\"sys.stderr\"><tt class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.stderr</span></tt></a>.)",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(19) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all characters in the string are printable or the string is\nempty, false otherwise.  Nonprintable characters are those characters defined\nin the Unicode character database as “Other” or “Separator”, excepting the\nASCII space (0x20) which is considered printable.  (Note that printable\ncharacters in this context are those which should not be escaped when\n",
        "repr()",
        " is invoked on a string.  It has no bearing on the handling of\nstrings written to ",
        "sys.stdout",
        " or ",
        "sys.stderr",
        ".)"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17528,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isspace:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isspace</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isspace\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(20) > dt#str.isspace:nth-of-type(1)",
      "text": [
        "str.",
        "isspace",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 17556,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if there are only whitespace characters in the string and there is\nat least one character, false otherwise.  Whitespace characters  are those\ncharacters defined in the Unicode character database as “Other” or “Separator”\nand those with bidirectional property being one of “WS”, “B”, or “S”.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(20) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if there are only whitespace characters in the string and there is\nat least one character, false otherwise.  Whitespace characters  are those\ncharacters defined in the Unicode character database as “Other” or “Separator”\nand those with bidirectional property being one of “WS”, “B”, or “S”."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17616,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.istitle:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">istitle</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.istitle\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(21) > dt#str.istitle:nth-of-type(1)",
      "text": [
        "str.",
        "istitle",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 17644,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if the string is a titlecased string and there is at least one\ncharacter, for example uppercase characters may only follow uncased characters\nand lowercase characters only cased ones.  Return false otherwise.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(21) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if the string is a titlecased string and there is at least one\ncharacter, for example uppercase characters may only follow uncased characters\nand lowercase characters only cased ones.  Return false otherwise."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17704,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.isupper:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">isupper</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.isupper\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(22) > dt#str.isupper:nth-of-type(1)",
      "text": [
        "str.",
        "isupper",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17732,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true if all cased characters <a class=\"footnote-reference\" href=\"#id13\" id=\"id6\">[4]</a> in the string are uppercase and\nthere is at least one cased character, false otherwise.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true if all cased characters ",
        "[4]",
        " in the string are uppercase and\nthere is at least one cased character, false otherwise."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17770,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.join:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">join</tt><big>(</big><em>iterable</em><big>)</big><a class=\"headerlink\" href=\"#str.join\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(23) > dt#str.join:nth-of-type(1)",
      "text": [
        "str.",
        "join",
        "(",
        "iterable",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 17798,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a string which is the concatenation of the strings in the\n<a class=\"reference internal\" href=\"../glossary.html#term-iterable\"><em class=\"xref std std-term\">iterable</em></a> <em>iterable</em>.  A <a class=\"reference internal\" href=\"exceptions.html#TypeError\" title=\"TypeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></tt></a> will be raised if there are\nany non-string values in <em>iterable</em>, including <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> objects.  The\nseparator between elements is the string providing this method.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(23) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a string which is the concatenation of the strings in the\n",
        "iterable",
        "iterable",
        ".  A ",
        "TypeError",
        " will be raised if there are\nany non-string values in ",
        "iterable",
        ", including ",
        "bytes",
        " objects.  The\nseparator between elements is the string providing this method."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 17858,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.ljust:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">ljust</tt><big>(</big><em>width</em><span class=\"optional\">[</span>, <em>fillchar</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.ljust\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(24) > dt#str.ljust:nth-of-type(1)",
      "text": [
        "str.",
        "ljust",
        "(",
        "width",
        "[",
        ", ",
        "fillchar",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 17887,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the string left justified in a string of length <em>width</em>. Padding is done\nusing the specified <em>fillchar</em> (default is a space).  The original string is\nreturned if <em>width</em> is less than or equal to <tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(24) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the string left justified in a string of length ",
        "width",
        ". Padding is done\nusing the specified ",
        "fillchar",
        " (default is a space).  The original string is\nreturned if ",
        "width",
        " is less than or equal to ",
        "len(s)",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 17947,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.lower:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">lower</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.lower\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(25) > dt#str.lower:nth-of-type(1)",
      "text": [
        "str.",
        "lower",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 17975,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with all the cased characters <a class=\"footnote-reference\" href=\"#id13\" id=\"id7\">[4]</a> converted to\nlowercase.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(25) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with all the cased characters ",
        "[4]",
        " converted to\nlowercase."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 18013,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The lowercasing algorithm used is described in section 3.13 of the Unicode\nStandard.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(25) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The lowercasing algorithm used is described in section 3.13 of the Unicode\nStandard."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 18051,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.lstrip:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">lstrip</tt><big>(</big><span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.lstrip\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(26) > dt#str.lstrip:nth-of-type(1)",
      "text": [
        "str.",
        "lstrip",
        "(",
        "[",
        "chars",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18080,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with leading characters removed.  The <em>chars</em>\nargument is a string specifying the set of characters to be removed.  If omitted\nor <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, the <em>chars</em> argument defaults to removing whitespace.  The <em>chars</em>\nargument is not a prefix; rather, all combinations of its values are stripped:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(26) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with leading characters removed.  The ",
        "chars",
        "\nargument is a string specifying the set of characters to be removed.  If omitted\nor ",
        "None",
        ", the ",
        "chars",
        " argument defaults to removing whitespace.  The ",
        "chars",
        "\nargument is not a prefix; rather, all combinations of its values are stripped:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 18140,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(26) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 18140,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'   spacious   '</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">()</span>\n<span class=\"go\">'spacious   '</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'www.example.com'</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s\">'cmowz.'</span><span class=\"p\">)</span>\n<span class=\"go\">'example.com'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(26) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'   spacious   '",
        ".",
        "lstrip",
        "()",
        "'spacious   '",
        ">>> ",
        "'www.example.com'",
        ".",
        "lstrip",
        "(",
        "'cmowz.'",
        ")",
        "'example.com'"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 18240,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.maketrans:nth-of-type(1)",
      "html": "\n<em class=\"property\">static </em><tt class=\"descclassname\">str.</tt><tt class=\"descname\">maketrans</tt><big>(</big><em>x</em><span class=\"optional\">[</span>, <em>y</em><span class=\"optional\">[</span>, <em>z</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.maketrans\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.staticmethod:nth-of-type(27) > dt#str.maketrans:nth-of-type(1)",
      "text": [
        "static ",
        "str.",
        "maketrans",
        "(",
        "x",
        "[",
        ", ",
        "y",
        "[",
        ", ",
        "z",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 18269,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This static method returns a translation table usable for <a class=\"reference internal\" href=\"#str.translate\" title=\"str.translate\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.translate()</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.staticmethod:nth-of-type(27) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This static method returns a translation table usable for ",
        "str.translate()",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18307,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters (strings of length 1) to Unicode ordinals,\nstrings (of arbitrary lengths) or None.  Character keys will then be\nconverted to ordinals.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.staticmethod:nth-of-type(27) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters (strings of length 1) to Unicode ordinals,\nstrings (of arbitrary lengths) or None.  Character keys will then be\nconverted to ordinals."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18367,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If there are two arguments, they must be strings of equal length, and in the\nresulting dictionary, each character in x will be mapped to the character at\nthe same position in y.  If there is a third argument, it must be a string,\nwhose characters will be mapped to None in the result.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.staticmethod:nth-of-type(27) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If there are two arguments, they must be strings of equal length, and in the\nresulting dictionary, each character in x will be mapped to the character at\nthe same position in y.  If there is a third argument, it must be a string,\nwhose characters will be mapped to None in the result."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 18427,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.partition:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">partition</tt><big>(</big><em>sep</em><big>)</big><a class=\"headerlink\" href=\"#str.partition\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(28) > dt#str.partition:nth-of-type(1)",
      "text": [
        "str.",
        "partition",
        "(",
        "sep",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18455,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Split the string at the first occurrence of <em>sep</em>, and return a 3-tuple\ncontaining the part before the separator, the separator itself, and the part\nafter the separator.  If the separator is not found, return a 3-tuple containing\nthe string itself, followed by two empty strings.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(28) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Split the string at the first occurrence of ",
        "sep",
        ", and return a 3-tuple\ncontaining the part before the separator, the separator itself, and the part\nafter the separator.  If the separator is not found, return a 3-tuple containing\nthe string itself, followed by two empty strings."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 18515,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.replace:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">replace</tt><big>(</big><em>old</em>, <em>new</em><span class=\"optional\">[</span>, <em>count</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.replace\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(29) > dt#str.replace:nth-of-type(1)",
      "text": [
        "str.",
        "replace",
        "(",
        "old",
        ", ",
        "new",
        "[",
        ", ",
        "count",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 18544,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with all occurrences of substring <em>old</em> replaced by\n<em>new</em>.  If the optional argument <em>count</em> is given, only the first <em>count</em>\noccurrences are replaced.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(29) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with all occurrences of substring ",
        "old",
        " replaced by\n",
        "new",
        ".  If the optional argument ",
        "count",
        " is given, only the first ",
        "count",
        "\noccurrences are replaced."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 18582,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.rfind:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">rfind</tt><big>(</big><em>sub</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.rfind\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(30) > dt#str.rfind:nth-of-type(1)",
      "text": [
        "str.",
        "rfind",
        "(",
        "sub",
        "[",
        ", ",
        "start",
        "[",
        ", ",
        "end",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18611,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the highest index in the string where substring <em>sub</em> is found, such\nthat <em>sub</em> is contained within <tt class=\"docutils literal\"><span class=\"pre\">s[start:end]</span></tt>.  Optional arguments <em>start</em>\nand <em>end</em> are interpreted as in slice notation.  Return <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt> on failure.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(30) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the highest index in the string where substring ",
        "sub",
        " is found, such\nthat ",
        "sub",
        " is contained within ",
        "s[start:end]",
        ".  Optional arguments ",
        "start",
        "\nand ",
        "end",
        " are interpreted as in slice notation.  Return ",
        "-1",
        " on failure."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 18671,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.rindex:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">rindex</tt><big>(</big><em>sub</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.rindex\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(31) > dt#str.rindex:nth-of-type(1)",
      "text": [
        "str.",
        "rindex",
        "(",
        "sub",
        "[",
        ", ",
        "start",
        "[",
        ", ",
        "end",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 18700,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Like <a class=\"reference internal\" href=\"#str.rfind\" title=\"str.rfind\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">rfind()</span></tt></a> but raises <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a> when the substring <em>sub</em> is not\nfound.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(31) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Like ",
        "rfind()",
        " but raises ",
        "ValueError",
        " when the substring ",
        "sub",
        " is not\nfound."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 18738,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.rjust:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">rjust</tt><big>(</big><em>width</em><span class=\"optional\">[</span>, <em>fillchar</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.rjust\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(32) > dt#str.rjust:nth-of-type(1)",
      "text": [
        "str.",
        "rjust",
        "(",
        "width",
        "[",
        ", ",
        "fillchar",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18767,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the string right justified in a string of length <em>width</em>. Padding is done\nusing the specified <em>fillchar</em> (default is a space). The original string is\nreturned if <em>width</em> is less than or equal to <tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(32) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the string right justified in a string of length ",
        "width",
        ". Padding is done\nusing the specified ",
        "fillchar",
        " (default is a space). The original string is\nreturned if ",
        "width",
        " is less than or equal to ",
        "len(s)",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 18827,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.rpartition:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">rpartition</tt><big>(</big><em>sep</em><big>)</big><a class=\"headerlink\" href=\"#str.rpartition\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(33) > dt#str.rpartition:nth-of-type(1)",
      "text": [
        "str.",
        "rpartition",
        "(",
        "sep",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18855,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Split the string at the last occurrence of <em>sep</em>, and return a 3-tuple\ncontaining the part before the separator, the separator itself, and the part\nafter the separator.  If the separator is not found, return a 3-tuple containing\ntwo empty strings, followed by the string itself.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(33) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Split the string at the last occurrence of ",
        "sep",
        ", and return a 3-tuple\ncontaining the part before the separator, the separator itself, and the part\nafter the separator.  If the separator is not found, return a 3-tuple containing\ntwo empty strings, followed by the string itself."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 18915,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.rsplit:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">rsplit</tt><big>(</big><em>sep=None</em>, <em>maxsplit=-1</em><big>)</big><a class=\"headerlink\" href=\"#str.rsplit\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(34) > dt#str.rsplit:nth-of-type(1)",
      "text": [
        "str.",
        "rsplit",
        "(",
        "sep=None",
        ", ",
        "maxsplit=-1",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 18943,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a list of the words in the string, using <em>sep</em> as the delimiter string.\nIf <em>maxsplit</em> is given, at most <em>maxsplit</em> splits are done, the <em>rightmost</em>\nones.  If <em>sep</em> is not specified or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, any whitespace string is a\nseparator.  Except for splitting from the right, <a class=\"reference internal\" href=\"#str.rsplit\" title=\"str.rsplit\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">rsplit()</span></tt></a> behaves like\n<a class=\"reference internal\" href=\"#str.split\" title=\"str.split\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">split()</span></tt></a> which is described in detail below.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(34) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a list of the words in the string, using ",
        "sep",
        " as the delimiter string.\nIf ",
        "maxsplit",
        " is given, at most ",
        "maxsplit",
        " splits are done, the ",
        "rightmost",
        "\nones.  If ",
        "sep",
        " is not specified or ",
        "None",
        ", any whitespace string is a\nseparator.  Except for splitting from the right, ",
        "rsplit()",
        " behaves like\n",
        "split()",
        " which is described in detail below."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 19003,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.rstrip:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">rstrip</tt><big>(</big><span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.rstrip\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(35) > dt#str.rstrip:nth-of-type(1)",
      "text": [
        "str.",
        "rstrip",
        "(",
        "[",
        "chars",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 19032,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with trailing characters removed.  The <em>chars</em>\nargument is a string specifying the set of characters to be removed.  If omitted\nor <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, the <em>chars</em> argument defaults to removing whitespace.  The <em>chars</em>\nargument is not a suffix; rather, all combinations of its values are stripped:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(35) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with trailing characters removed.  The ",
        "chars",
        "\nargument is a string specifying the set of characters to be removed.  If omitted\nor ",
        "None",
        ", the ",
        "chars",
        " argument defaults to removing whitespace.  The ",
        "chars",
        "\nargument is not a suffix; rather, all combinations of its values are stripped:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 19092,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(35) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 19092,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'   spacious   '</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">()</span>\n<span class=\"go\">'   spacious'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'mississippi'</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">(</span><span class=\"s\">'ipz'</span><span class=\"p\">)</span>\n<span class=\"go\">'mississ'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(35) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'   spacious   '",
        ".",
        "rstrip",
        "()",
        "'   spacious'",
        ">>> ",
        "'mississippi'",
        ".",
        "rstrip",
        "(",
        "'ipz'",
        ")",
        "'mississ'"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 19192,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.split:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">split</tt><big>(</big><em>sep=None</em>, <em>maxsplit=-1</em><big>)</big><a class=\"headerlink\" href=\"#str.split\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(36) > dt#str.split:nth-of-type(1)",
      "text": [
        "str.",
        "split",
        "(",
        "sep=None",
        ", ",
        "maxsplit=-1",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 19220,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a list of the words in the string, using <em>sep</em> as the delimiter\nstring.  If <em>maxsplit</em> is given, at most <em>maxsplit</em> splits are done (thus,\nthe list will have at most <tt class=\"docutils literal\"><span class=\"pre\">maxsplit+1</span></tt> elements).  If <em>maxsplit</em> is not\nspecified or <tt class=\"docutils literal\"><span class=\"pre\">-1</span></tt>, then there is no limit on the number of splits\n(all possible splits are made).",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(36) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a list of the words in the string, using ",
        "sep",
        " as the delimiter\nstring.  If ",
        "maxsplit",
        " is given, at most ",
        "maxsplit",
        " splits are done (thus,\nthe list will have at most ",
        "maxsplit+1",
        " elements).  If ",
        "maxsplit",
        " is not\nspecified or ",
        "-1",
        ", then there is no limit on the number of splits\n(all possible splits are made)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 19280,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If <em>sep</em> is given, consecutive delimiters are not grouped together and are\ndeemed to delimit empty strings (for example, <tt class=\"docutils literal\"><span class=\"pre\">'1,,2'.split(',')</span></tt> returns\n<tt class=\"docutils literal\"><span class=\"pre\">['1',</span> <span class=\"pre\">'',</span> <span class=\"pre\">'2']</span></tt>).  The <em>sep</em> argument may consist of multiple characters\n(for example, <tt class=\"docutils literal\"><span class=\"pre\">'1&lt;&gt;2&lt;&gt;3'.split('&lt;&gt;')</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">['1',</span> <span class=\"pre\">'2',</span> <span class=\"pre\">'3']</span></tt>).\nSplitting an empty string with a specified separator returns <tt class=\"docutils literal\"><span class=\"pre\">['']</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(36) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If ",
        "sep",
        " is given, consecutive delimiters are not grouped together and are\ndeemed to delimit empty strings (for example, ",
        "'1,,2'.split(',')",
        " returns\n",
        "['1',",
        "'',",
        "'2']",
        ").  The ",
        "sep",
        " argument may consist of multiple characters\n(for example, ",
        "'1<>2<>3'.split('<>')",
        " returns ",
        "['1',",
        "'2',",
        "'3']",
        ").\nSplitting an empty string with a specified separator returns ",
        "['']",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 19340,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If <em>sep</em> is not specified or is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, a different splitting algorithm is\napplied: runs of consecutive whitespace are regarded as a single separator,\nand the result will contain no empty strings at the start or end if the\nstring has leading or trailing whitespace.  Consequently, splitting an empty\nstring or a string consisting of just whitespace with a <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> separator\nreturns <tt class=\"docutils literal\"><span class=\"pre\">[]</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(36) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If ",
        "sep",
        " is not specified or is ",
        "None",
        ", a different splitting algorithm is\napplied: runs of consecutive whitespace are regarded as a single separator,\nand the result will contain no empty strings at the start or end if the\nstring has leading or trailing whitespace.  Consequently, splitting an empty\nstring or a string consisting of just whitespace with a ",
        "None",
        " separator\nreturns ",
        "[]",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 19422,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "For example, <tt class=\"docutils literal\"><span class=\"pre\">'</span> <span class=\"pre\">1</span>&nbsp; <span class=\"pre\">2</span>&nbsp;&nbsp; <span class=\"pre\">3</span>&nbsp; <span class=\"pre\">'.split()</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">['1',</span> <span class=\"pre\">'2',</span> <span class=\"pre\">'3']</span></tt>, and\n<tt class=\"docutils literal\"><span class=\"pre\">'</span>&nbsp; <span class=\"pre\">1</span>&nbsp; <span class=\"pre\">2</span>&nbsp;&nbsp; <span class=\"pre\">3</span>&nbsp; <span class=\"pre\">'.split(None,</span> <span class=\"pre\">1)</span></tt> returns <tt class=\"docutils literal\"><span class=\"pre\">['1',</span> <span class=\"pre\">'2</span>&nbsp;&nbsp; <span class=\"pre\">3</span>&nbsp; <span class=\"pre\">']</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(36) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "For example, ",
        "'",
        "1",
        "2",
        "3",
        "'.split()",
        " returns ",
        "['1',",
        "'2',",
        "'3']",
        ", and\n",
        "'",
        "1",
        "2",
        "3",
        "'.split(None,",
        "1)",
        " returns ",
        "['1',",
        "'2",
        "3",
        "']",
        "."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 19460,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.splitlines:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">splitlines</tt><big>(</big><span class=\"optional\">[</span><em>keepends</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.splitlines\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(37) > dt#str.splitlines:nth-of-type(1)",
      "text": [
        "str.",
        "splitlines",
        "(",
        "[",
        "keepends",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 19489,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a list of the lines in the string, breaking at line boundaries.\nThis method uses the <a class=\"reference internal\" href=\"../glossary.html#term-universal-newlines\"><em class=\"xref std std-term\">universal newlines</em></a> approach to splitting lines.\nLine breaks are not included in the resulting list unless <em>keepends</em> is\ngiven and true.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(37) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a list of the lines in the string, breaking at line boundaries.\nThis method uses the ",
        "universal newlines",
        " approach to splitting lines.\nLine breaks are not included in the resulting list unless ",
        "keepends",
        " is\ngiven and true."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 19549,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For example, <tt class=\"docutils literal\"><span class=\"pre\">'ab</span> <span class=\"pre\">c\\n\\nde</span> <span class=\"pre\">fg\\rkl\\r\\n'.splitlines()</span></tt> returns\n<tt class=\"docutils literal\"><span class=\"pre\">['ab</span> <span class=\"pre\">c',</span> <span class=\"pre\">'',</span> <span class=\"pre\">'de</span> <span class=\"pre\">fg',</span> <span class=\"pre\">'kl']</span></tt>, while the same call with <tt class=\"docutils literal\"><span class=\"pre\">splitlines(True)</span></tt>\nreturns <tt class=\"docutils literal\"><span class=\"pre\">['ab</span> <span class=\"pre\">c\\n',</span> <span class=\"pre\">'\\n',</span> <span class=\"pre\">'de</span> <span class=\"pre\">fg\\r',</span> <span class=\"pre\">'kl\\r\\n']</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(37) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For example, ",
        "'ab",
        "c\\n\\nde",
        "fg\\rkl\\r\\n'.splitlines()",
        " returns\n",
        "['ab",
        "c',",
        "'',",
        "'de",
        "fg',",
        "'kl']",
        ", while the same call with ",
        "splitlines(True)",
        "\nreturns ",
        "['ab",
        "c\\n',",
        "'\\n',",
        "'de",
        "fg\\r',",
        "'kl\\r\\n']",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 19587,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Unlike <a class=\"reference internal\" href=\"#str.split\" title=\"str.split\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">split()</span></tt></a> when a delimiter string <em>sep</em> is given, this\nmethod returns an empty list for the empty string, and a terminal line\nbreak does not result in an extra line.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(37) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Unlike ",
        "split()",
        " when a delimiter string ",
        "sep",
        " is given, this\nmethod returns an empty list for the empty string, and a terminal line\nbreak does not result in an extra line."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 19625,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.startswith:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">startswith</tt><big>(</big><em>prefix</em><span class=\"optional\">[</span>, <em>start</em><span class=\"optional\">[</span>, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.startswith\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(38) > dt#str.startswith:nth-of-type(1)",
      "text": [
        "str.",
        "startswith",
        "(",
        "prefix",
        "[",
        ", ",
        "start",
        "[",
        ", ",
        "end",
        "]",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 19654,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> if string starts with the <em>prefix</em>, otherwise return <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>.\n<em>prefix</em> can also be a tuple of prefixes to look for.  With optional <em>start</em>,\ntest string beginning at that position.  With optional <em>end</em>, stop comparing\nstring at that position.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(38) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return ",
        "True",
        " if string starts with the ",
        "prefix",
        ", otherwise return ",
        "False",
        ".\n",
        "prefix",
        " can also be a tuple of prefixes to look for.  With optional ",
        "start",
        ",\ntest string beginning at that position.  With optional ",
        "end",
        ", stop comparing\nstring at that position."
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 19714,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.strip:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">strip</tt><big>(</big><span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#str.strip\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(39) > dt#str.strip:nth-of-type(1)",
      "text": [
        "str.",
        "strip",
        "(",
        "[",
        "chars",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 19743,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with the leading and trailing characters removed.\nThe <em>chars</em> argument is a string specifying the set of characters to be removed.\nIf omitted or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, the <em>chars</em> argument defaults to removing whitespace.\nThe <em>chars</em> argument is not a prefix or suffix; rather, all combinations of its\nvalues are stripped:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(39) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with the leading and trailing characters removed.\nThe ",
        "chars",
        " argument is a string specifying the set of characters to be removed.\nIf omitted or ",
        "None",
        ", the ",
        "chars",
        " argument defaults to removing whitespace.\nThe ",
        "chars",
        " argument is not a prefix or suffix; rather, all combinations of its\nvalues are stripped:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 19803,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(39) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 295,
        "top": 19803,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'   spacious   '</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n<span class=\"go\">'spacious'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">'www.example.com'</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s\">'cmowz.'</span><span class=\"p\">)</span>\n<span class=\"go\">'example'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(39) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "'   spacious   '",
        ".",
        "strip",
        "()",
        "'spacious'",
        ">>> ",
        "'www.example.com'",
        ".",
        "strip",
        "(",
        "'cmowz.'",
        ")",
        "'example'"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 19903,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.swapcase:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">swapcase</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.swapcase\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(40) > dt#str.swapcase:nth-of-type(1)",
      "text": [
        "str.",
        "swapcase",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 19931,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with uppercase characters converted to lowercase and\nvice versa. Note that it is not necessarily true that\n<tt class=\"docutils literal\"><span class=\"pre\">s.swapcase().swapcase()</span> <span class=\"pre\">==</span> <span class=\"pre\">s</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(40) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with uppercase characters converted to lowercase and\nvice versa. Note that it is not necessarily true that\n",
        "s.swapcase().swapcase()",
        "==",
        "s",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 19969,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.title:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">title</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.title\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dt#str.title:nth-of-type(1)",
      "text": [
        "str.",
        "title",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 19997,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a titlecased version of the string where words start with an uppercase\ncharacter and the remaining characters are lowercase.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a titlecased version of the string where words start with an uppercase\ncharacter and the remaining characters are lowercase."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 20035,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The algorithm uses a simple language-independent definition of a word as\ngroups of consecutive letters.  The definition works in many contexts but\nit means that apostrophes in contractions and possessives form word\nboundaries, which may not be the desired result:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The algorithm uses a simple language-independent definition of a word as\ngroups of consecutive letters.  The definition works in many contexts but\nit means that apostrophes in contractions and possessives form word\nboundaries, which may not be the desired result:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 20095,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 295,
        "top": 20095,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s\">\"they're bill's friends from the UK\"</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">()</span>\n<span class=\"go\">\"They'Re Bill'S Friends From The Uk\"</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "\"they're bill's friends from the UK\"",
        ".",
        "title",
        "()",
        "\"They'Re Bill'S Friends From The Uk\""
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 20158,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "A workaround for apostrophes can be constructed using regular expressions:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "A workaround for apostrophes can be constructed using regular expressions:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 20196,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 295,
        "top": 20196,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">titlecase</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s\">r\"[A-Za-z]+('[A-Za-z]+)?\"</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                  <span class=\"k\">lambda</span> <span class=\"n\">mo</span><span class=\"p\">:</span> <span class=\"n\">mo</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span> <span class=\"o\">+</span>\n<span class=\"gp\">... </span>                             <span class=\"n\">mo</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span>\n<span class=\"gp\">... </span>                  <span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">titlecase</span><span class=\"p\">(</span><span class=\"s\">\"they're bill's friends.\"</span><span class=\"p\">)</span>\n<span class=\"go\">\"They're Bill's Friends.\"</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(41) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "re",
        ">>> ",
        "def",
        "titlecase",
        "(",
        "s",
        "):",
        "... ",
        "return",
        "re",
        ".",
        "sub",
        "(",
        "r\"[A-Za-z]+('[A-Za-z]+)?\"",
        ",",
        "... ",
        "lambda",
        "mo",
        ":",
        "mo",
        ".",
        "group",
        "(",
        "0",
        ")[",
        "0",
        "]",
        ".",
        "upper",
        "()",
        "+",
        "... ",
        "mo",
        ".",
        "group",
        "(",
        "0",
        ")[",
        "1",
        ":]",
        ".",
        "lower",
        "(),",
        "... ",
        "s",
        ")",
        "...",
        ">>> ",
        "titlecase",
        "(",
        "\"they're bill's friends.\"",
        ")",
        "\"They're Bill's Friends.\""
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 20386,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.translate:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">translate</tt><big>(</big><em>map</em><big>)</big><a class=\"headerlink\" href=\"#str.translate\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(42) > dt#str.translate:nth-of-type(1)",
      "text": [
        "str.",
        "translate",
        "(",
        "map",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 20414,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the <em>s</em> where all characters have been mapped through the\n<em>map</em> which must be a dictionary of Unicode ordinals (integers) to Unicode\nordinals, strings or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.  Unmapped characters are left untouched.\nCharacters mapped to <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> are deleted.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(42) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the ",
        "s",
        " where all characters have been mapped through the\n",
        "map",
        " which must be a dictionary of Unicode ordinals (integers) to Unicode\nordinals, strings or ",
        "None",
        ".  Unmapped characters are left untouched.\nCharacters mapped to ",
        "None",
        " are deleted."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 20474,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "You can use <a class=\"reference internal\" href=\"#str.maketrans\" title=\"str.maketrans\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.maketrans()</span></tt></a> to create a translation map from\ncharacter-to-character mappings in different formats.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(42) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "You can use ",
        "str.maketrans()",
        " to create a translation map from\ncharacter-to-character mappings in different formats."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 295,
        "top": 20512,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px",
        "text-align": "justify"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">An even more flexible approach is to create a custom character mapping\ncodec using the <a class=\"reference internal\" href=\"codecs.html#module-codecs\" title=\"codecs: Encode and decode data and streams.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">codecs</span></tt></a> module (see <tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">encodings.cp1251</span></tt> for an\nexample).</p>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(42) > dd:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "An even more flexible approach is to create a custom character mapping\ncodec using the ",
        "codecs",
        " module (see ",
        "encodings.cp1251",
        " for an\nexample)."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 20566,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.upper:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">upper</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#str.upper\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(43) > dt#str.upper:nth-of-type(1)",
      "text": [
        "str.",
        "upper",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 20594,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the string with all the cased characters <a class=\"footnote-reference\" href=\"#id13\" id=\"id8\">[4]</a> converted to\nuppercase.  Note that <tt class=\"docutils literal\"><span class=\"pre\">str.upper().isupper()</span></tt> might be <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> if <tt class=\"docutils literal\"><span class=\"pre\">s</span></tt>\ncontains uncased characters or if the Unicode category of the resulting\ncharacter(s) is not “Lu” (Letter, uppercase), but e.g. “Lt” (Letter,\ntitlecase).",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(43) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the string with all the cased characters ",
        "[4]",
        " converted to\nuppercase.  Note that ",
        "str.upper().isupper()",
        " might be ",
        "False",
        " if ",
        "s",
        "\ncontains uncased characters or if the Unicode category of the resulting\ncharacter(s) is not “Lu” (Letter, uppercase), but e.g. “Lt” (Letter,\ntitlecase)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 20654,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The uppercasing algorithm used is described in section 3.13 of the Unicode\nStandard.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(43) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The uppercasing algorithm used is described in section 3.13 of the Unicode\nStandard."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 20692,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#str.zfill:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">str.</tt><tt class=\"descname\">zfill</tt><big>(</big><em>width</em><big>)</big><a class=\"headerlink\" href=\"#str.zfill\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(44) > dt#str.zfill:nth-of-type(1)",
      "text": [
        "str.",
        "zfill",
        "(",
        "width",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 20720,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the numeric string left filled with zeros in a string of length\n<em>width</em>.  A sign prefix is handled correctly.  The original string is\nreturned if <em>width</em> is less than or equal to <tt class=\"docutils literal\"><span class=\"pre\">len(s)</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#string-methods.section:nth-of-type(1) > dl.method:nth-of-type(44) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the numeric string left filled with zeros in a string of length\n",
        "width",
        ".  A sign prefix is handled correctly.  The original string is\nreturned if ",
        "width",
        " is less than or equal to ",
        "len(s)",
        "."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 265,
        "top": 20780,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.7.2. <tt class=\"docutils literal\"><span class=\"pre\">printf</span></tt>-style String Formatting<a class=\"headerlink\" href=\"#printf-style-string-formatting\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > h3:nth-of-type(1)",
      "text": [
        "4.7.2. ",
        "printf",
        "-style String Formatting",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 60,
        "left": 265,
        "top": 20830,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div#index-34.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The formatting operations described here exhibit a variety of quirks that\nlead to a number of common errors (such as failing to display tuples and\ndictionaries correctly).  Using the newer <a class=\"reference internal\" href=\"#str.format\" title=\"str.format\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format()</span></tt></a> interface\nhelps avoid these errors, and also provides a generally more powerful,\nflexible and extensible approach to formatting text.</p>\n",
      "path": "div > div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > div#index-34.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "The formatting operations described here exhibit a variety of quirks that\nlead to a number of common errors (such as failing to display tuples and\ndictionaries correctly).  Using the newer ",
        "str.format()",
        " interface\nhelps avoid these errors, and also provides a generally more powerful,\nflexible and extensible approach to formatting text."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 20906,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "String objects have one unique built-in operation: the <tt class=\"docutils literal\"><span class=\"pre\">%</span></tt> operator (modulo).\nThis is also known as the string <em>formatting</em> or <em>interpolation</em> operator.\nGiven <tt class=\"docutils literal\"><span class=\"pre\">format</span> <span class=\"pre\">%</span> <span class=\"pre\">values</span></tt> (where <em>format</em> is a string), <tt class=\"docutils literal\"><span class=\"pre\">%</span></tt> conversion\nspecifications in <em>format</em> are replaced with zero or more elements of <em>values</em>.\nThe effect is similar to using the <tt class=\"xref c c-func docutils literal\"><span class=\"pre\">sprintf()</span></tt> in the C language.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(1)",
      "text": [
        "String objects have one unique built-in operation: the ",
        "%",
        " operator (modulo).\nThis is also known as the string ",
        "formatting",
        " or ",
        "interpolation",
        " operator.\nGiven ",
        "format",
        "%",
        "values",
        " (where ",
        "format",
        " is a string), ",
        "%",
        " conversion\nspecifications in ",
        "format",
        " are replaced with zero or more elements of ",
        "values",
        ".\nThe effect is similar to using the ",
        "sprintf()",
        " in the C language."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 20966,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If <em>format</em> requires a single argument, <em>values</em> may be a single non-tuple\nobject. <a class=\"footnote-reference\" href=\"#id14\" id=\"id9\">[5]</a>  Otherwise, <em>values</em> must be a tuple with exactly the number of\nitems specified by the format string, or a single mapping object (for example, a\ndictionary).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "If ",
        "format",
        " requires a single argument, ",
        "values",
        " may be a single non-tuple\nobject. ",
        "[5]",
        "  Otherwise, ",
        "values",
        " must be a tuple with exactly the number of\nitems specified by the format string, or a single mapping object (for example, a\ndictionary)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 21026,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "A conversion specifier contains two or more characters and has the following\ncomponents, which must occur in this order:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(3)",
      "text": [
        "A conversion specifier contains two or more characters and has the following\ncomponents, which must occur in this order:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 21064,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "The <tt class=\"docutils literal\"><span class=\"pre\">'%'</span></tt> character, which marks the start of the specifier.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "The ",
        "'%'",
        " character, which marks the start of the specifier."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 21084,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Mapping key (optional), consisting of a parenthesised sequence of characters\n(for example, <tt class=\"docutils literal\"><span class=\"pre\">(somename)</span></tt>).",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Mapping key (optional), consisting of a parenthesised sequence of characters\n(for example, ",
        "(somename)",
        ")."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 21104,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "Conversion flags (optional), which affect the result of some conversion\ntypes.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "Conversion flags (optional), which affect the result of some conversion\ntypes."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 21124,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "Minimum field width (optional).  If specified as an <tt class=\"docutils literal\"><span class=\"pre\">'*'</span></tt> (asterisk), the\nactual width is read from the next element of the tuple in <em>values</em>, and the\nobject to convert comes after the minimum field width and optional precision.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "Minimum field width (optional).  If specified as an ",
        "'*'",
        " (asterisk), the\nactual width is read from the next element of the tuple in ",
        "values",
        ", and the\nobject to convert comes after the minimum field width and optional precision."
      ]
    },
    {
      "bound": {
        "height": 40,
        "left": 305,
        "top": 21164,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(5)",
      "html": "Precision (optional), given as a <tt class=\"docutils literal\"><span class=\"pre\">'.'</span></tt> (dot) followed by the precision.  If\nspecified as <tt class=\"docutils literal\"><span class=\"pre\">'*'</span></tt> (an asterisk), the actual precision is read from the next\nelement of the tuple in <em>values</em>, and the value to convert comes after the\nprecision.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "Precision (optional), given as a ",
        "'.'",
        " (dot) followed by the precision.  If\nspecified as ",
        "'*'",
        " (an asterisk), the actual precision is read from the next\nelement of the tuple in ",
        "values",
        ", and the value to convert comes after the\nprecision."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 21204,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(6)",
      "html": "Length modifier (optional).",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(6)",
      "text": [
        "Length modifier (optional)."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 21224,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(7)",
      "html": "Conversion type.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(1) > li:nth-of-type(7)",
      "text": [
        "Conversion type."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 21260,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "When the right argument is a dictionary (or other mapping type), then the\nformats in the string <em>must</em> include a parenthesised mapping key into that\ndictionary inserted immediately after the <tt class=\"docutils literal\"><span class=\"pre\">'%'</span></tt> character. The mapping key\nselects the value to be formatted from the mapping.  For example:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(4)",
      "text": [
        "When the right argument is a dictionary (or other mapping type), then the\nformats in the string ",
        "must",
        " include a parenthesised mapping key into that\ndictionary inserted immediately after the ",
        "'%'",
        " character. The mapping key\nselects the value to be formatted from the mapping.  For example:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 21320,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 21320,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">'%(language)s has %(number)03d quote types.'</span> <span class=\"o\">%</span>\n<span class=\"gp\">... </span>      <span class=\"p\">{</span><span class=\"s\">'language'</span><span class=\"p\">:</span> <span class=\"s\">\"Python\"</span><span class=\"p\">,</span> <span class=\"s\">\"number\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span>\n<span class=\"go\">Python has 002 quote types.</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "print",
        "(",
        "'%(language)s has %(number)03d quote types.'",
        "%",
        "... ",
        "{",
        "'language'",
        ":",
        "\"Python\"",
        ",",
        "\"number\"",
        ":",
        "2",
        "})",
        "Python has 002 quote types."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 21402,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "In this case no <tt class=\"docutils literal\"><span class=\"pre\">*</span></tt> specifiers may occur in a format (since they require a\nsequential parameter list).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(5)",
      "text": [
        "In this case no ",
        "*",
        " specifiers may occur in a format (since they require a\nsequential parameter list)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 21440,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The conversion flag characters are:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(6)",
      "text": [
        "The conversion flag characters are:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 21478,
        "width": 113
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Flag",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Flag"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 378,
        "top": 21478,
        "width": 827
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21506,
        "width": 113
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'#'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'#'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 378,
        "top": 21506,
        "width": 827
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "The value conversion will use the “alternate form” (where defined\nbelow).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "The value conversion will use the “alternate form” (where defined\nbelow)."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21535,
        "width": 113
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'0'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'0'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 378,
        "top": 21535,
        "width": 827
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "The conversion will be zero padded for numeric values.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "The conversion will be zero padded for numeric values."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21564,
        "width": 113
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'-'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'-'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 378,
        "top": 21564,
        "width": 827
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "The converted value is left adjusted (overrides the <tt class=\"docutils literal\"><span class=\"pre\">'0'</span></tt>\nconversion if both are given).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "The converted value is left adjusted (overrides the ",
        "'0'",
        "\nconversion if both are given)."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 21593,
        "width": 113
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'</span> <span class=\"pre\">'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'",
        "'"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 378,
        "top": 21593,
        "width": 827
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "(a space) A blank should be left before a positive number (or empty\nstring) produced by a signed conversion.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "(a space) A blank should be left before a positive number (or empty\nstring) produced by a signed conversion."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21640,
        "width": 113
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'+'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "'+'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 378,
        "top": 21640,
        "width": 827
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "A sign character (<tt class=\"docutils literal\"><span class=\"pre\">'+'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'-'</span></tt>) will precede the conversion\n(overrides a “space” flag).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "A sign character (",
        "'+'",
        " or ",
        "'-'",
        ") will precede the conversion\n(overrides a “space” flag)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 21686,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "A length modifier (<tt class=\"docutils literal\"><span class=\"pre\">h</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">l</span></tt>, or <tt class=\"docutils literal\"><span class=\"pre\">L</span></tt>) may be present, but is ignored as it\nis not necessary for Python – so e.g. <tt class=\"docutils literal\"><span class=\"pre\">%ld</span></tt> is identical to <tt class=\"docutils literal\"><span class=\"pre\">%d</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(7)",
      "text": [
        "A length modifier (",
        "h",
        ", ",
        "l",
        ", or ",
        "L",
        ") may be present, but is ignored as it\nis not necessary for Python – so e.g. ",
        "%ld",
        " is identical to ",
        "%d",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 21724,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "The conversion types are:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(8)",
      "text": [
        "The conversion types are:"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 21762,
        "width": 225
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Conversion",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Conversion"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 490,
        "top": 21762,
        "width": 975
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 1465,
        "top": 21762,
        "width": 118
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(3)",
      "html": "Notes",
      "path": "div > div > div > div > div > div > div > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(3)",
      "text": [
        "Notes"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21790,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'d'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'d'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21790,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Signed integer decimal.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "Signed integer decimal."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21819,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'i'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'i'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21819,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Signed integer decimal.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "Signed integer decimal."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21848,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'o'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'o'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21848,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Signed octal value.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "Signed octal value."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 21848,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(1)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(3)",
      "text": [
        "(1)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21877,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'u'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'u'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21877,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Obsolete type – it is identical to <tt class=\"docutils literal\"><span class=\"pre\">'d'</span></tt>.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "Obsolete type – it is identical to ",
        "'d'",
        "."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 21877,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(7)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(3)",
      "text": [
        "(7)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21906,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'x'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(1)",
      "text": [
        "'x'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21906,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Signed hexadecimal (lowercase).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(2)",
      "text": [
        "Signed hexadecimal (lowercase)."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 21906,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(2)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(5) > td:nth-of-type(3)",
      "text": [
        "(2)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21935,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'X'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(1)",
      "text": [
        "'X'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21935,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Signed hexadecimal (uppercase).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(2)",
      "text": [
        "Signed hexadecimal (uppercase)."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 21935,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(2)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(6) > td:nth-of-type(3)",
      "text": [
        "(2)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21964,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'e'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(1)",
      "text": [
        "'e'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21964,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Floating point exponential format (lowercase).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(2)",
      "text": [
        "Floating point exponential format (lowercase)."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 21964,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(7) > td:nth-of-type(3)",
      "text": [
        "(3)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 21993,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'E'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(1)",
      "text": [
        "'E'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 21993,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Floating point exponential format (uppercase).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(2)",
      "text": [
        "Floating point exponential format (uppercase)."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 21993,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(8) > td:nth-of-type(3)",
      "text": [
        "(3)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 22022,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'f'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(1)",
      "text": [
        "'f'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 22022,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Floating point decimal format.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(2)",
      "text": [
        "Floating point decimal format."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 22022,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(9) > td:nth-of-type(3)",
      "text": [
        "(3)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 22051,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'F'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(1)",
      "text": [
        "'F'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 22051,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Floating point decimal format.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(2)",
      "text": [
        "Floating point decimal format."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 22051,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(3)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(10) > td:nth-of-type(3)",
      "text": [
        "(3)"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 22080,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'g'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(1)",
      "text": [
        "'g'"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 490,
        "top": 22080,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Floating point format. Uses lowercase exponential\nformat if exponent is less than -4 or not less than\nprecision, decimal format otherwise.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(2)",
      "text": [
        "Floating point format. Uses lowercase exponential\nformat if exponent is less than -4 or not less than\nprecision, decimal format otherwise."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 1465,
        "top": 22080,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(4)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(11) > td:nth-of-type(3)",
      "text": [
        "(4)"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 22127,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'G'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(1)",
      "text": [
        "'G'"
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 490,
        "top": 22127,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Floating point format. Uses uppercase exponential\nformat if exponent is less than -4 or not less than\nprecision, decimal format otherwise.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(2)",
      "text": [
        "Floating point format. Uses uppercase exponential\nformat if exponent is less than -4 or not less than\nprecision, decimal format otherwise."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 1465,
        "top": 22127,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(4)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(12) > td:nth-of-type(3)",
      "text": [
        "(4)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 22174,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'c'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(1)",
      "text": [
        "'c'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 22174,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Single character (accepts integer or single\ncharacter string).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(13) > td:nth-of-type(2)",
      "text": [
        "Single character (accepts integer or single\ncharacter string)."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 22203,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'r'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(1)",
      "text": [
        "'r'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 22203,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "String (converts any Python object using\n<a class=\"reference internal\" href=\"functions.html#repr\" title=\"repr\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></tt></a>).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(2)",
      "text": [
        "String (converts any Python object using\n",
        "repr()",
        ")."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 22203,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(5)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(14) > td:nth-of-type(3)",
      "text": [
        "(5)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 22232,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'s'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(15) > td:nth-of-type(1)",
      "text": [
        "'s'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 22232,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "String (converts any Python object using\n<a class=\"reference internal\" href=\"#str\" title=\"str\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></tt></a>).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(15) > td:nth-of-type(2)",
      "text": [
        "String (converts any Python object using\n",
        "str()",
        ")."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 22232,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(5)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(15) > td:nth-of-type(3)",
      "text": [
        "(5)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 22261,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'a'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(16) > td:nth-of-type(1)",
      "text": [
        "'a'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 22261,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "String (converts any Python object using\n<a class=\"reference internal\" href=\"functions.html#ascii\" title=\"ascii\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ascii()</span></tt></a>).",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(16) > td:nth-of-type(2)",
      "text": [
        "String (converts any Python object using\n",
        "ascii()",
        ")."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 1465,
        "top": 22261,
        "width": 118
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(3)",
      "html": "(5)",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(16) > td:nth-of-type(3)",
      "text": [
        "(5)"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 265,
        "top": 22290,
        "width": 225
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'%'</span></tt>",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(17) > td:nth-of-type(1)",
      "text": [
        "'%'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 490,
        "top": 22290,
        "width": 975
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "No argument is converted, results in a <tt class=\"docutils literal\"><span class=\"pre\">'%'</span></tt>\ncharacter in the result.",
      "path": "div > div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > table.docutils:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(17) > td:nth-of-type(2)",
      "text": [
        "No argument is converted, results in a ",
        "'%'",
        "\ncharacter in the result."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 22336,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "Notes:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(9)",
      "text": [
        "Notes:"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 22374,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The alternate form causes a leading zero (<tt class=\"docutils literal\"><span class=\"pre\">'0'</span></tt>) to be inserted between\nleft-hand padding and the formatting of the number if the leading character\nof the result is not already a zero.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic:nth-of-type(2) > li:nth-of-type(1) > p.first:nth-of-type(1)",
      "text": [
        "The alternate form causes a leading zero (",
        "'0'",
        ") to be inserted between\nleft-hand padding and the formatting of the number if the leading character\nof the result is not already a zero."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 305,
        "top": 22434,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The alternate form causes a leading <tt class=\"docutils literal\"><span class=\"pre\">'0x'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'0X'</span></tt> (depending on whether\nthe <tt class=\"docutils literal\"><span class=\"pre\">'x'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'X'</span></tt> format was used) to be inserted between left-hand padding\nand the formatting of the number if the leading character of the result is not\nalready a zero.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic:nth-of-type(2) > li:nth-of-type(2) > p.first:nth-of-type(1)",
      "text": [
        "The alternate form causes a leading ",
        "'0x'",
        " or ",
        "'0X'",
        " (depending on whether\nthe ",
        "'x'",
        " or ",
        "'X'",
        " format was used) to be inserted between left-hand padding\nand the formatting of the number if the leading character of the result is not\nalready a zero."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 22494,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The alternate form causes the result to always contain a decimal point, even if\nno digits follow it.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic:nth-of-type(2) > li:nth-of-type(3) > p.first:nth-of-type(1)",
      "text": [
        "The alternate form causes the result to always contain a decimal point, even if\nno digits follow it."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 22532,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The precision determines the number of digits after the decimal point and\ndefaults to 6.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic:nth-of-type(2) > li:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "The precision determines the number of digits after the decimal point and\ndefaults to 6."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 22570,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "The alternate form causes the result to always contain a decimal point, and\ntrailing zeroes are not removed as they would otherwise be.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic:nth-of-type(2) > li:nth-of-type(4) > p.first:nth-of-type(1)",
      "text": [
        "The alternate form causes the result to always contain a decimal point, and\ntrailing zeroes are not removed as they would otherwise be."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 22608,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The precision determines the number of significant digits before and after the\ndecimal point and defaults to 6.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic:nth-of-type(2) > li:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "The precision determines the number of significant digits before and after the\ndecimal point and defaults to 6."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 305,
        "top": 22646,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "list-style-type": "decimal",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.first:nth-of-type(1)",
      "html": "If precision is <tt class=\"docutils literal\"><span class=\"pre\">N</span></tt>, the output is truncated to <tt class=\"docutils literal\"><span class=\"pre\">N</span></tt> characters.",
      "path": "div > div > div > div > div > div > div > ol > li > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic:nth-of-type(2) > li:nth-of-type(5) > p.first:nth-of-type(1)",
      "text": [
        "If precision is ",
        "N",
        ", the output is truncated to ",
        "N",
        " characters."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 22684,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "list-style-type": "decimal",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "See <span class=\"target\" id=\"index-35\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-0237\"><strong>PEP 237</strong></a>.",
      "path": "div > div > div > div > div > div > div > ol > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > ol.arabic.simple:nth-of-type(3) > li:nth-of-type(1)",
      "text": [
        "See ",
        "PEP 237",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 22720,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "Since Python strings have an explicit length, <tt class=\"docutils literal\"><span class=\"pre\">%s</span></tt> conversions do not assume\nthat <tt class=\"docutils literal\"><span class=\"pre\">'\\0'</span></tt> is the end of the string.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p:nth-of-type(10)",
      "text": [
        "Since Python strings have an explicit length, ",
        "%s",
        " conversions do not assume\nthat ",
        "'\\0'",
        " is the end of the string."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 22758,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(11)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.1:</span> <tt class=\"docutils literal\"><span class=\"pre\">%f</span></tt> conversions for numbers whose absolute value is over 1e50 are no\nlonger replaced by <tt class=\"docutils literal\"><span class=\"pre\">%g</span></tt> conversions.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#text-sequence-type-str.section:nth-of-type(7) > div#printf-style-string-formatting.section:nth-of-type(2) > p.versionchanged:nth-of-type(11)",
      "text": [
        "Changed in version 3.1:",
        "%f",
        " conversions for numbers whose absolute value is over 1e50 are no\nlonger replaced by ",
        "%g",
        " conversions."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 22796,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.8. Binary Sequence Types — <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a>, <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>, <a class=\"reference internal\" href=\"#memoryview\" title=\"memoryview\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">memoryview</span></tt></a><a class=\"headerlink\" href=\"#binary-sequence-types-bytes-bytearray-memoryview\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > h2:nth-of-type(1)",
      "text": [
        "4.8. Binary Sequence Types — ",
        "bytes",
        ", ",
        "bytearray",
        ", ",
        "memoryview",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 22859,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-37:nth-of-type(1)",
      "html": "The core built-in types for manipulating binary data are <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> and\n<a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>. They are supported by <a class=\"reference internal\" href=\"#memoryview\" title=\"memoryview\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">memoryview</span></tt></a> which uses\nthe <a class=\"reference internal\" href=\"../c-api/buffer.html#bufferobjects\"><em>buffer protocol</em></a> to access the memory of other\nbinary objects without needing to make a copy.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > p#index-37:nth-of-type(1)",
      "text": [
        "The core built-in types for manipulating binary data are ",
        "bytes",
        " and\n",
        "bytearray",
        ". They are supported by ",
        "memoryview",
        " which uses\nthe ",
        "buffer protocol",
        " to access the memory of other\nbinary objects without needing to make a copy."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 22919,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <a class=\"reference internal\" href=\"array.html#module-array\" title=\"array: Space efficient arrays of uniformly typed numeric values.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">array</span></tt></a> module supports efficient storage of basic data types like\n32-bit integers and IEEE754 double-precision floating values.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > p:nth-of-type(2)",
      "text": [
        "The ",
        "array",
        " module supports efficient storage of basic data types like\n32-bit integers and IEEE754 double-precision floating values."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 22957,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.8.1. Bytes<a class=\"headerlink\" href=\"#bytes\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "4.8.1. Bytes",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 23012,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-38:nth-of-type(1)",
      "html": "Bytes objects are immutable sequences of single bytes. Since many major\nbinary protocols are based on the ASCII text encoding, bytes objects offer\nseveral methods that are only valid when working with ASCII compatible\ndata and are closely related to string objects in a variety of other ways.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p#index-38:nth-of-type(1)",
      "text": [
        "Bytes objects are immutable sequences of single bytes. Since many major\nbinary protocols are based on the ASCII text encoding, bytes objects offer\nseveral methods that are only valid when working with ASCII compatible\ndata and are closely related to string objects in a variety of other ways."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 23072,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Firstly, the syntax for bytes literals is largely the same as that for string\nliterals, except that a <tt class=\"docutils literal\"><span class=\"pre\">b</span></tt> prefix is added:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Firstly, the syntax for bytes literals is largely the same as that for string\nliterals, except that a ",
        "b",
        " prefix is added:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23110,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "Single quotes: <tt class=\"docutils literal\"><span class=\"pre\">b'still</span> <span class=\"pre\">allows</span> <span class=\"pre\">embedded</span> <span class=\"pre\">\"double\"</span> <span class=\"pre\">quotes'</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Single quotes: ",
        "b'still",
        "allows",
        "embedded",
        "\"double\"",
        "quotes'"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23130,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Double quotes: <tt class=\"docutils literal\"><span class=\"pre\">b\"still</span> <span class=\"pre\">allows</span> <span class=\"pre\">embedded</span> <span class=\"pre\">'single'</span> <span class=\"pre\">quotes\"</span></tt>.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Double quotes: ",
        "b\"still",
        "allows",
        "embedded",
        "'single'",
        "quotes\"",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23150,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "Triple quoted: <tt class=\"docutils literal\"><span class=\"pre\">b'''3</span> <span class=\"pre\">single</span> <span class=\"pre\">quotes'''</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">b\"\"\"3</span> <span class=\"pre\">double</span> <span class=\"pre\">quotes\"\"\"</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "Triple quoted: ",
        "b'''3",
        "single",
        "quotes'''",
        ", ",
        "b\"\"\"3",
        "double",
        "quotes\"\"\""
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 23186,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Only ASCII characters are permitted in bytes literals (regardless of the\ndeclared source code encoding). Any binary values over 127 must be entered\ninto bytes literals using the appropriate escape sequence.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Only ASCII characters are permitted in bytes literals (regardless of the\ndeclared source code encoding). Any binary values over 127 must be entered\ninto bytes literals using the appropriate escape sequence."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 23246,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "As with string literals, bytes literals may also use a <tt class=\"docutils literal\"><span class=\"pre\">r</span></tt> prefix to disable\nprocessing of escape sequences. See <a class=\"reference internal\" href=\"../reference/lexical_analysis.html#strings\"><em>String and Bytes literals</em></a> for more about the various\nforms of bytes literal, including supported escape sequences.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "As with string literals, bytes literals may also use a ",
        "r",
        " prefix to disable\nprocessing of escape sequences. See ",
        "String and Bytes literals",
        " for more about the various\nforms of bytes literal, including supported escape sequences."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 23306,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "While bytes literals and representations are based on ASCII text, bytes\nobjects actually behave like immutable sequences of integers, with each\nvalue in the sequence restricted such that <tt class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">256</span></tt> (attempts to\nviolate this restriction will trigger <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></tt></a>. This is done\ndeliberately to emphasise that while many binary formats include ASCII based\nelements and can be usefully manipulated with some text-oriented algorithms,\nthis is not generally the case for arbitrary binary data (blindly applying\ntext processing algorithms to binary data formats that are not ASCII\ncompatible will usually lead to data corruption).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "While bytes literals and representations are based on ASCII text, bytes\nobjects actually behave like immutable sequences of integers, with each\nvalue in the sequence restricted such that ",
        "0",
        "<=",
        "x",
        "<",
        "256",
        " (attempts to\nviolate this restriction will trigger ",
        "ValueError",
        ". This is done\ndeliberately to emphasise that while many binary formats include ASCII based\nelements and can be usefully manipulated with some text-oriented algorithms,\nthis is not generally the case for arbitrary binary data (blindly applying\ntext processing algorithms to binary data formats that are not ASCII\ncompatible will usually lead to data corruption)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 23410,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "In addition to the literal forms, bytes objects can be created in a number of\nother ways:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "In addition to the literal forms, bytes objects can be created in a number of\nother ways:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23448,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "A zero-filled bytes object of a specified length: <tt class=\"docutils literal\"><span class=\"pre\">bytes(10)</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "A zero-filled bytes object of a specified length: ",
        "bytes(10)"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23468,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "From an iterable of integers: <tt class=\"docutils literal\"><span class=\"pre\">bytes(range(20))</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "From an iterable of integers: ",
        "bytes(range(20))"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23488,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "Copying existing binary data via the buffer protocol:  <tt class=\"docutils literal\"><span class=\"pre\">bytes(obj)</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > ul.simple:nth-of-type(2) > li:nth-of-type(3)",
      "text": [
        "Copying existing binary data via the buffer protocol:  ",
        "bytes(obj)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 23524,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Also see the <a class=\"reference internal\" href=\"functions.html#func-bytes\"><em>bytes</em></a> built-in.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "Also see the ",
        "bytes",
        " built-in."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 23562,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "Since bytes objects are sequences of integers, for a bytes object <em>b</em>,\n<tt class=\"docutils literal\"><span class=\"pre\">b[0]</span></tt> will be an integer, while <tt class=\"docutils literal\"><span class=\"pre\">b[0:1]</span></tt> will be a bytes object of\nlength 1.  (This contrasts with text strings, where both indexing and\nslicing will produce a string of length 1)",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "Since bytes objects are sequences of integers, for a bytes object ",
        "b",
        ",\n",
        "b[0]",
        " will be an integer, while ",
        "b[0:1]",
        " will be a bytes object of\nlength 1.  (This contrasts with text strings, where both indexing and\nslicing will produce a string of length 1)"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 23622,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "The representation of bytes objects uses the literal format (<tt class=\"docutils literal\"><span class=\"pre\">b'...'</span></tt>)\nsince it is often more useful than e.g. <tt class=\"docutils literal\"><span class=\"pre\">bytes([46,</span> <span class=\"pre\">46,</span> <span class=\"pre\">46])</span></tt>.  You can\nalways convert a bytes object into a list of integers using <tt class=\"docutils literal\"><span class=\"pre\">list(b)</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > p:nth-of-type(9)",
      "text": [
        "The representation of bytes objects uses the literal format (",
        "b'...'",
        ")\nsince it is often more useful than e.g. ",
        "bytes([46,",
        "46,",
        "46])",
        ".  You can\nalways convert a bytes object into a list of integers using ",
        "list(b)",
        "."
      ]
    },
    {
      "bound": {
        "height": 104,
        "left": 265,
        "top": 23682,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">For Python 2.x users: In the Python 2.x series, a variety of implicit\nconversions between 8-bit strings (the closest thing 2.x offers to a\nbuilt-in binary data type) and Unicode strings were permitted. This was a\nbackwards compatibility workaround to account for the fact that Python\noriginally only supported 8-bit text, and Unicode text was a later\naddition. In Python 3.x, those implicit conversions are gone - conversions\nbetween 8-bit binary data and Unicode text must be explicit, and bytes and\nstring objects will always compare unequal.</p>\n",
      "path": "div > div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes.section:nth-of-type(1) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "For Python 2.x users: In the Python 2.x series, a variety of implicit\nconversions between 8-bit strings (the closest thing 2.x offers to a\nbuilt-in binary data type) and Unicode strings were permitted. This was a\nbackwards compatibility workaround to account for the fact that Python\noriginally only supported 8-bit text, and Unicode text was a later\naddition. In Python 3.x, those implicit conversions are gone - conversions\nbetween 8-bit binary data and Unicode text must be explicit, and bytes and\nstring objects will always compare unequal."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 23796,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.8.2. Bytearray Objects<a class=\"headerlink\" href=\"#bytearray-objects\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > h3:nth-of-type(1)",
      "text": [
        "4.8.2. Bytearray Objects",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 23851,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-39:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a> objects are a mutable counterpart to <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a>\nobjects. There is no dedicated literal syntax for bytearray objects, instead\nthey are always created by calling the constructor:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > p#index-39:nth-of-type(1)",
      "text": [
        "bytearray",
        " objects are a mutable counterpart to ",
        "bytes",
        "\nobjects. There is no dedicated literal syntax for bytearray objects, instead\nthey are always created by calling the constructor:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23911,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "Creating an empty instance: <tt class=\"docutils literal\"><span class=\"pre\">bytearray()</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "Creating an empty instance: ",
        "bytearray()"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23931,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "Creating a zero-filled instance with a given length: <tt class=\"docutils literal\"><span class=\"pre\">bytearray(10)</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Creating a zero-filled instance with a given length: ",
        "bytearray(10)"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23951,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "From an iterable of integers: <tt class=\"docutils literal\"><span class=\"pre\">bytearray(range(20))</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "From an iterable of integers: ",
        "bytearray(range(20))"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 23971,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(4)",
      "html": "Copying existing binary data via the buffer protocol:  <tt class=\"docutils literal\"><span class=\"pre\">bytearray(b'Hi!')</span></tt>",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > ul.simple:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "Copying existing binary data via the buffer protocol:  ",
        "bytearray(b'Hi!')"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 24007,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "As bytearray objects are mutable, they support the\n<a class=\"reference internal\" href=\"#typesseq-mutable\"><em>mutable</em></a> sequence operations in addition to the\ncommon bytes and bytearray operations described in <a class=\"reference internal\" href=\"#bytes-methods\"><em>Bytes and Bytearray Operations</em></a>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "As bytearray objects are mutable, they support the\n",
        "mutable",
        " sequence operations in addition to the\ncommon bytes and bytearray operations described in ",
        "Bytes and Bytearray Operations",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 24067,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Also see the <a class=\"reference internal\" href=\"functions.html#func-bytearray\"><em>bytearray</em></a> built-in.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytearray-objects.section:nth-of-type(2) > p:nth-of-type(3)",
      "text": [
        "Also see the ",
        "bytearray",
        " built-in."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 24105,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.8.3. Bytes and Bytearray Operations<a class=\"headerlink\" href=\"#bytes-and-bytearray-operations\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > h3:nth-of-type(1)",
      "text": [
        "4.8.3. Bytes and Bytearray Operations",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 24160,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-40:nth-of-type(1)",
      "html": "Both bytes and bytearray objects support the <a class=\"reference internal\" href=\"#typesseq-common\"><em>common</em></a>\nsequence operations. They interoperate not just with operands of the same\ntype, but with any object that supports the\n<a class=\"reference internal\" href=\"../c-api/buffer.html#bufferobjects\"><em>buffer protocol</em></a>. Due to this flexibility, they can be\nfreely mixed in operations without causing errors. However, the return type\nof the result may depend on the order of operands.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p#index-40:nth-of-type(1)",
      "text": [
        "Both bytes and bytearray objects support the ",
        "common",
        "\nsequence operations. They interoperate not just with operands of the same\ntype, but with any object that supports the\n",
        "buffer protocol",
        ". Due to this flexibility, they can be\nfreely mixed in operations without causing errors. However, the return type\nof the result may depend on the order of operands."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 24242,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Due to the common use of ASCII text as the basis for binary protocols, bytes\nand bytearray objects provide almost all methods found on text strings, with\nthe exceptions of:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "Due to the common use of ASCII text as the basis for binary protocols, bytes\nand bytearray objects provide almost all methods found on text strings, with\nthe exceptions of:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 24280,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#str.encode\" title=\"str.encode\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.encode()</span></tt></a> (which converts text strings to bytes objects)",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > ul.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "str.encode()",
        " (which converts text strings to bytes objects)"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 24300,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#str.format\" title=\"str.format\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format()</span></tt></a> and <a class=\"reference internal\" href=\"#str.format_map\" title=\"str.format_map\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format_map()</span></tt></a> (which are used to format\ntext for display to users)",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > ul.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "str.format()",
        " and ",
        "str.format_map()",
        " (which are used to format\ntext for display to users)"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 305,
        "top": 24320,
        "width": 1279
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#str.isidentifier\" title=\"str.isidentifier\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.isidentifier()</span></tt></a>, <a class=\"reference internal\" href=\"#str.isnumeric\" title=\"str.isnumeric\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.isnumeric()</span></tt></a>, <a class=\"reference internal\" href=\"#str.isdecimal\" title=\"str.isdecimal\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.isdecimal()</span></tt></a>,\n<a class=\"reference internal\" href=\"#str.isprintable\" title=\"str.isprintable\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.isprintable()</span></tt></a> (which are used to check various properties of\ntext strings which are not typically applicable to binary protocols).",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > ul.simple:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "str.isidentifier()",
        ", ",
        "str.isnumeric()",
        ", ",
        "str.isdecimal()",
        ",\n",
        "str.isprintable()",
        " (which are used to check various properties of\ntext strings which are not typically applicable to binary protocols)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 24356,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "All other string methods are supported, although sometimes with slight\ndifferences in functionality and semantics (as described below).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "All other string methods are supported, although sometimes with slight\ndifferences in functionality and semantics (as described below)."
      ]
    },
    {
      "bound": {
        "height": 229,
        "left": 265,
        "top": 24394,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.note:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p>The methods on bytes and bytearray objects don’t accept strings as their\narguments, just as the methods on strings don’t accept bytes as their\narguments.  For example, you have to write:</p>\n<div class=\"highlight-python3\" style=\"position: relative; \"><div class=\"highlight\"><pre><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"abc\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"s\">\"f\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>and:</p>\n<div class=\"last highlight-python3\" style=\"position: relative; \"><div class=\"highlight\"><pre><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"s\">\"abc\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"s\">\"f\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n",
      "path": "div > div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > div.admonition.note:nth-of-type(1)",
      "text": [
        "Note",
        "The methods on bytes and bytearray objects don’t accept strings as their\narguments, just as the methods on strings don’t accept bytes as their\narguments.  For example, you have to write:"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 273,
        "top": 24461,
        "width": 1303
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"abc\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"s\">\"f\"</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > div.admonition.note:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "a",
        "=",
        "\"abc\"",
        "b",
        "=",
        "a",
        ".",
        "replace",
        "(",
        "\"a\"",
        ",",
        "\"f\"",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 273,
        "top": 24525,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "and:",
      "path": "div > div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > div.admonition.note:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "and:"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 273,
        "top": 24562,
        "width": 1303
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"s\">\"abc\"</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"s\">\"f\"</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > div.admonition.note:nth-of-type(1) > div.highlight-python3.last:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "a",
        "=",
        "b",
        "\"abc\"",
        "b",
        "=",
        "a",
        ".",
        "replace",
        "(",
        "b",
        "\"a\"",
        ",",
        "b",
        "\"f\"",
        ")"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 24639,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Whenever a bytes or bytearray method needs to interpret the bytes as\ncharacters (e.g. the <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">is...()</span></tt> methods, <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">split()</span></tt>, <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">strip()</span></tt>),\nthe ASCII character set is assumed (text strings use Unicode semantics).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p:nth-of-type(4)",
      "text": [
        "Whenever a bytes or bytearray method needs to interpret the bytes as\ncharacters (e.g. the ",
        "is...()",
        " methods, ",
        "split()",
        ", ",
        "strip()",
        "),\nthe ASCII character set is assumed (text strings use Unicode semantics)."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 265,
        "top": 24699,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(204, 204, 204)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(204, 204, 204)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(204, 204, 204)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(204, 204, 204)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.note:nth-of-type(2)",
      "html": "\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Using these ASCII based methods to manipulate binary data that is not\nstored in an ASCII based format may lead to data corruption.</p>\n",
      "path": "div > div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > div.admonition.note:nth-of-type(2)",
      "text": [
        "Note",
        "Using these ASCII based methods to manipulate binary data that is not\nstored in an ASCII based format may lead to data corruption."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 24753,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "The search operations (<a class=\"reference internal\" href=\"../reference/expressions.html#in\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">in</span></tt></a>, <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">count()</span></tt>, <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">find()</span></tt>,\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">index()</span></tt>, <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">rfind()</span></tt> and <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">rindex()</span></tt>) all accept both integers\nin the range 0 to 255 (inclusive) as well as bytes and byte array sequences.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p:nth-of-type(5)",
      "text": [
        "The search operations (",
        "in",
        ", ",
        "count()",
        ", ",
        "find()",
        ",\n",
        "index()",
        ", ",
        "rfind()",
        " and ",
        "rindex()",
        ") all accept both integers\nin the range 0 to 255 (inclusive) as well as bytes and byte array sequences."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 24791,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(6)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> All of the search methods also accept an integer in the range 0 to 255\n(inclusive) as their first argument.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p.versionchanged:nth-of-type(6)",
      "text": [
        "Changed in version 3.3:",
        " All of the search methods also accept an integer in the range 0 to 255\n(inclusive) as their first argument."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 24829,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Each bytes and bytearray instance provides a <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">decode()</span></tt> convenience\nmethod that is the inverse of <a class=\"reference internal\" href=\"#str.encode\" title=\"str.encode\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.encode()</span></tt></a>:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p:nth-of-type(7)",
      "text": [
        "Each bytes and bytearray instance provides a ",
        "decode()",
        " convenience\nmethod that is the inverse of ",
        "str.encode()",
        ":"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 24867,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytes.decode:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">bytes.</tt><tt class=\"descname\">decode</tt><big>(</big><em>encoding=\"utf-8\"</em>, <em>errors=\"strict\"</em><big>)</big><a class=\"headerlink\" href=\"#bytes.decode\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(1) > dt#bytes.decode:nth-of-type(1)",
      "text": [
        "bytes.",
        "decode",
        "(",
        "encoding=\"utf-8\"",
        ", ",
        "errors=\"strict\"",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 24892,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytearray.decode:nth-of-type(2)",
      "html": "\n<tt class=\"descclassname\">bytearray.</tt><tt class=\"descname\">decode</tt><big>(</big><em>encoding=\"utf-8\"</em>, <em>errors=\"strict\"</em><big>)</big><a class=\"headerlink\" href=\"#bytearray.decode\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(1) > dt#bytearray.decode:nth-of-type(2)",
      "text": [
        "bytearray.",
        "decode",
        "(",
        "encoding=\"utf-8\"",
        ", ",
        "errors=\"strict\"",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 24920,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a string decoded from the given bytes.  Default encoding is\n<tt class=\"docutils literal\"><span class=\"pre\">'utf-8'</span></tt>. <em>errors</em> may be given to set a different\nerror handling scheme.  The default for <em>errors</em> is <tt class=\"docutils literal\"><span class=\"pre\">'strict'</span></tt>, meaning\nthat encoding errors raise a <a class=\"reference internal\" href=\"exceptions.html#UnicodeError\" title=\"UnicodeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">UnicodeError</span></tt></a>.  Other possible values are\n<tt class=\"docutils literal\"><span class=\"pre\">'ignore'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'replace'</span></tt> and any other name registered via\n<a class=\"reference internal\" href=\"codecs.html#codecs.register_error\" title=\"codecs.register_error\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">codecs.register_error()</span></tt></a>, see section <a class=\"reference internal\" href=\"codecs.html#codec-base-classes\"><em>Codec Base Classes</em></a>. For a\nlist of possible encodings, see section <a class=\"reference internal\" href=\"codecs.html#standard-encodings\"><em>Standard Encodings</em></a>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a string decoded from the given bytes.  Default encoding is\n",
        "'utf-8'",
        ". ",
        "errors",
        " may be given to set a different\nerror handling scheme.  The default for ",
        "errors",
        " is ",
        "'strict'",
        ", meaning\nthat encoding errors raise a ",
        "UnicodeError",
        ".  Other possible values are\n",
        "'ignore'",
        ", ",
        "'replace'",
        " and any other name registered via\n",
        "codecs.register_error()",
        ", see section ",
        "Codec Base Classes",
        ". For a\nlist of possible encodings, see section ",
        "Standard Encodings",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 25002,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.1:</span> Added support for keyword arguments.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(2)",
      "text": [
        "Changed in version 3.1:",
        " Added support for keyword arguments."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 25040,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "Since 2 hexadecimal digits correspond precisely to a single byte, hexadecimal\nnumbers are a commonly used format for describing binary data. Accordingly,\nthe bytes and bytearray types have an additional class method to read data in\nthat format:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p:nth-of-type(8)",
      "text": [
        "Since 2 hexadecimal digits correspond precisely to a single byte, hexadecimal\nnumbers are a commonly used format for describing binary data. Accordingly,\nthe bytes and bytearray types have an additional class method to read data in\nthat format:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 25100,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytes.fromhex:nth-of-type(1)",
      "html": "\n<em class=\"property\">classmethod </em><tt class=\"descclassname\">bytes.</tt><tt class=\"descname\">fromhex</tt><big>(</big><em>string</em><big>)</big><a class=\"headerlink\" href=\"#bytes.fromhex\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.classmethod:nth-of-type(2) > dt#bytes.fromhex:nth-of-type(1)",
      "text": [
        "classmethod ",
        "bytes.",
        "fromhex",
        "(",
        "string",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 25125,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytearray.fromhex:nth-of-type(2)",
      "html": "\n<em class=\"property\">classmethod </em><tt class=\"descclassname\">bytearray.</tt><tt class=\"descname\">fromhex</tt><big>(</big><em>string</em><big>)</big><a class=\"headerlink\" href=\"#bytearray.fromhex\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.classmethod:nth-of-type(2) > dt#bytearray.fromhex:nth-of-type(2)",
      "text": [
        "classmethod ",
        "bytearray.",
        "fromhex",
        "(",
        "string",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 25153,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> class method returns a bytes or bytearray object,\ndecoding the given string object.  The string must contain two hexadecimal\ndigits per byte, spaces are ignored.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.classmethod:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This ",
        "bytes",
        " class method returns a bytes or bytearray object,\ndecoding the given string object.  The string must contain two hexadecimal\ndigits per byte, spaces are ignored."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 25191,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.classmethod:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 295,
        "top": 25191,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s\">'2Ef0 F1f2  '</span><span class=\"p\">)</span>\n<span class=\"go\">b'.\\xf0\\xf1\\xf2'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.classmethod:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "bytes",
        ".",
        "fromhex",
        "(",
        "'2Ef0 F1f2  '",
        ")",
        "b'.\\xf0\\xf1\\xf2'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 25255,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "The maketrans and translate methods differ in semantics from the versions\navailable on strings:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > p:nth-of-type(9)",
      "text": [
        "The maketrans and translate methods differ in semantics from the versions\navailable on strings:"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 25293,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytes.translate:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">bytes.</tt><tt class=\"descname\">translate</tt><big>(</big><em>table</em><span class=\"optional\">[</span>, <em>delete</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#bytes.translate\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(3) > dt#bytes.translate:nth-of-type(1)",
      "text": [
        "bytes.",
        "translate",
        "(",
        "table",
        "[",
        ", ",
        "delete",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 25319,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytearray.translate:nth-of-type(2)",
      "html": "\n<tt class=\"descclassname\">bytearray.</tt><tt class=\"descname\">translate</tt><big>(</big><em>table</em><span class=\"optional\">[</span>, <em>delete</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#bytearray.translate\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(3) > dt#bytearray.translate:nth-of-type(2)",
      "text": [
        "bytearray.",
        "translate",
        "(",
        "table",
        "[",
        ", ",
        "delete",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 25348,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a copy of the bytes or bytearray object where all bytes occurring in\nthe optional argument <em>delete</em> are removed, and the remaining bytes have been\nmapped through the given translation table, which must be a bytes object of\nlength 256.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a copy of the bytes or bytearray object where all bytes occurring in\nthe optional argument ",
        "delete",
        " are removed, and the remaining bytes have been\nmapped through the given translation table, which must be a bytes object of\nlength 256."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 25408,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "You can use the <a class=\"reference internal\" href=\"#bytes.maketrans\" title=\"bytes.maketrans\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bytes.maketrans()</span></tt></a> method to create a translation table.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "You can use the ",
        "bytes.maketrans()",
        " method to create a translation table."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 25446,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Set the <em>table</em> argument to <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> for translations that only delete\ncharacters:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Set the ",
        "table",
        " argument to ",
        "None",
        " for translations that only delete\ncharacters:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 25484,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 295,
        "top": 25484,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span><span class=\"s\">'read this short text'</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"k\">None</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"s\">'aeiou'</span><span class=\"p\">)</span>\n<span class=\"go\">b'rd ths shrt txt'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "b",
        "'read this short text'",
        ".",
        "translate",
        "(",
        "None",
        ",",
        "b",
        "'aeiou'",
        ")",
        "b'rd ths shrt txt'"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 25548,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytes.maketrans:nth-of-type(1)",
      "html": "\n<em class=\"property\">static </em><tt class=\"descclassname\">bytes.</tt><tt class=\"descname\">maketrans</tt><big>(</big><em>from</em>, <em>to</em><big>)</big><a class=\"headerlink\" href=\"#bytes.maketrans\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.staticmethod:nth-of-type(4) > dt#bytes.maketrans:nth-of-type(1)",
      "text": [
        "static ",
        "bytes.",
        "maketrans",
        "(",
        "from",
        ", ",
        "to",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 25573,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#bytearray.maketrans:nth-of-type(2)",
      "html": "\n<em class=\"property\">static </em><tt class=\"descclassname\">bytearray.</tt><tt class=\"descname\">maketrans</tt><big>(</big><em>from</em>, <em>to</em><big>)</big><a class=\"headerlink\" href=\"#bytearray.maketrans\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.staticmethod:nth-of-type(4) > dt#bytearray.maketrans:nth-of-type(2)",
      "text": [
        "static ",
        "bytearray.",
        "maketrans",
        "(",
        "from",
        ", ",
        "to",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 25601,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This static method returns a translation table usable for\n<a class=\"reference internal\" href=\"#bytes.translate\" title=\"bytes.translate\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">bytes.translate()</span></tt></a> that will map each character in <em>from</em> into the\ncharacter at the same position in <em>to</em>; <em>from</em> and <em>to</em> must be bytes objects\nand have the same length.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.staticmethod:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This static method returns a translation table usable for\n",
        "bytes.translate()",
        " that will map each character in ",
        "from",
        " into the\ncharacter at the same position in ",
        "to",
        "; ",
        "from",
        " and ",
        "to",
        " must be bytes objects\nand have the same length."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 25661,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.1.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#bytes-and-bytearray-operations.section:nth-of-type(3) > dl.staticmethod:nth-of-type(4) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.1."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 25699,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.8.4. Memory Views<a class=\"headerlink\" href=\"#memory-views\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > h3:nth-of-type(1)",
      "text": [
        "4.8.4. Memory Views",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 25754,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#memoryview\" title=\"memoryview\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">memoryview</span></tt></a> objects allow Python code to access the internal data\nof an object that supports the <a class=\"reference internal\" href=\"../c-api/buffer.html#bufferobjects\"><em>buffer protocol</em></a> without\ncopying.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > p:nth-of-type(1)",
      "text": [
        "memoryview",
        " objects allow Python code to access the internal data\nof an object that supports the ",
        "buffer protocol",
        " without\ncopying."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 25792,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#memoryview:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">memoryview</tt><big>(</big><em>obj</em><big>)</big><a class=\"headerlink\" href=\"#memoryview\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dt#memoryview:nth-of-type(1)",
      "text": [
        "class ",
        "memoryview",
        "(",
        "obj",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 25820,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Create a <a class=\"reference internal\" href=\"#memoryview\" title=\"memoryview\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">memoryview</span></tt></a> that references <em>obj</em>.  <em>obj</em> must support the\nbuffer protocol.  Built-in objects that support the buffer protocol include\n<a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> and <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Create a ",
        "memoryview",
        " that references ",
        "obj",
        ".  ",
        "obj",
        " must support the\nbuffer protocol.  Built-in objects that support the buffer protocol include\n",
        "bytes",
        " and ",
        "bytearray",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 25858,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A <a class=\"reference internal\" href=\"#memoryview\" title=\"memoryview\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">memoryview</span></tt></a> has the notion of an <em>element</em>, which is the\natomic memory unit handled by the originating object <em>obj</em>.  For many\nsimple types such as <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> and <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a>, an element\nis a single byte, but other types such as <a class=\"reference internal\" href=\"array.html#array.array\" title=\"array.array\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">array.array</span></tt></a> may have\nbigger elements.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "A ",
        "memoryview",
        " has the notion of an ",
        "element",
        ", which is the\natomic memory unit handled by the originating object ",
        "obj",
        ".  For many\nsimple types such as ",
        "bytes",
        " and ",
        "bytearray",
        ", an element\nis a single byte, but other types such as ",
        "array.array",
        " may have\nbigger elements."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 25918,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">len(view)</span></tt> is equal to the length of <a class=\"reference internal\" href=\"#memoryview.tolist\" title=\"memoryview.tolist\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tolist</span></tt></a>.\nIf <tt class=\"docutils literal\"><span class=\"pre\">view.ndim</span> <span class=\"pre\">=</span> <span class=\"pre\">0</span></tt>, the length is 1. If <tt class=\"docutils literal\"><span class=\"pre\">view.ndim</span> <span class=\"pre\">=</span> <span class=\"pre\">1</span></tt>, the length\nis equal to the number of elements in the view. For higher dimensions,\nthe length is equal to the length of the nested list representation of\nthe view. The <a class=\"reference internal\" href=\"#memoryview.itemsize\" title=\"memoryview.itemsize\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">itemsize</span></tt></a> attribute will give you the\nnumber of bytes in a single element.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "len(view)",
        " is equal to the length of ",
        "tolist",
        ".\nIf ",
        "view.ndim",
        "=",
        "0",
        ", the length is 1. If ",
        "view.ndim",
        "=",
        "1",
        ", the length\nis equal to the number of elements in the view. For higher dimensions,\nthe length is equal to the length of the nested list representation of\nthe view. The ",
        "itemsize",
        " attribute will give you the\nnumber of bytes in a single element."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 25978,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "A <a class=\"reference internal\" href=\"#memoryview\" title=\"memoryview\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">memoryview</span></tt></a> supports slicing to expose its data. If\n<a class=\"reference internal\" href=\"#memoryview.format\" title=\"memoryview.format\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">format</span></tt></a> is one of the native format specifiers\nfrom the <a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> module, indexing will return a single element\nwith the correct type. Full slicing will result in a subview:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "A ",
        "memoryview",
        " supports slicing to expose its data. If\n",
        "format",
        " is one of the native format specifiers\nfrom the ",
        "struct",
        " module, indexing will return a single element\nwith the correct type. Full slicing will result in a subview:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 26038,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 295,
        "top": 26038,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abcefg'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">98</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">103</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;memory at 0x7f3ddc9f4350&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"go\">b'bce'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "v",
        "=",
        "memoryview",
        "(",
        "b",
        "'abcefg'",
        ")",
        ">>> ",
        "v",
        "[",
        "1",
        "]",
        "98",
        ">>> ",
        "v",
        "[",
        "-",
        "1",
        "]",
        "103",
        ">>> ",
        "v",
        "[",
        "1",
        ":",
        "4",
        "]",
        "<memory at 0x7f3ddc9f4350>",
        ">>> ",
        "bytes",
        "(",
        "v",
        "[",
        "1",
        ":",
        "4",
        "])",
        "b'bce'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 26227,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Other native formats:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Other native formats:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 26265,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 295,
        "top": 26265,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">array</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'l'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">11111111</span><span class=\"p\">,</span> <span class=\"mi\">22222222</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">33333333</span><span class=\"p\">,</span> <span class=\"mi\">44444444</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">-11111111</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">44444444</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[-33333333]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[-11111111, -33333333]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[44444444, -33333333, 22222222, -11111111]</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "array",
        ">>> ",
        "a",
        "=",
        "array",
        ".",
        "array",
        "(",
        "'l'",
        ",",
        "[",
        "-",
        "11111111",
        ",",
        "22222222",
        ",",
        "-",
        "33333333",
        ",",
        "44444444",
        "])",
        ">>> ",
        "a",
        "[",
        "0",
        "]",
        "-11111111",
        ">>> ",
        "a",
        "[",
        "-",
        "1",
        "]",
        "44444444",
        ">>> ",
        "a",
        "[",
        "2",
        ":",
        "3",
        "]",
        ".",
        "tolist",
        "()",
        "[-33333333]",
        ">>> ",
        "a",
        "[::",
        "2",
        "]",
        ".",
        "tolist",
        "()",
        "[-11111111, -33333333]",
        ">>> ",
        "a",
        "[::",
        "-",
        "1",
        "]",
        ".",
        "tolist",
        "()",
        "[44444444, -33333333, 22222222, -11111111]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 26508,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(6)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p.versionadded:nth-of-type(6)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 26546,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "If the underlying object is writable, the memoryview supports slice\nassignment. Resizing is not allowed:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "If the underlying object is writable, the memoryview supports slice\nassignment. Resizing is not allowed:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 26584,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 318,
        "left": 295,
        "top": 26584,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">bytearray</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abcefg'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">readonly</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'z'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span>\n<span class=\"go\">bytearray(b'zbcefg')</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"s\">'123'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span>\n<span class=\"go\">bytearray(b'z123fg')</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"s\">'spam'</span>\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">1</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">ValueError: memoryview assignment</span><span>: </span><span class=\"n\">lvalue and rvalue have different structures</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"s\">'spam'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span>\n<span class=\"go\">bytearray(b'z1spam')</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "data",
        "=",
        "bytearray",
        "(",
        "b",
        "'abcefg'",
        ")",
        ">>> ",
        "v",
        "=",
        "memoryview",
        "(",
        "data",
        ")",
        ">>> ",
        "v",
        ".",
        "readonly",
        "False",
        ">>> ",
        "v",
        "[",
        "0",
        "]",
        "=",
        "ord",
        "(",
        "b",
        "'z'",
        ")",
        ">>> ",
        "data",
        "bytearray(b'zbcefg')",
        ">>> ",
        "v",
        "[",
        "1",
        ":",
        "4",
        "]",
        "=",
        "b",
        "'123'",
        ">>> ",
        "data",
        "bytearray(b'z123fg')",
        ">>> ",
        "v",
        "[",
        "2",
        ":",
        "3",
        "]",
        "=",
        "b",
        "'spam'",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "1",
        ", in ",
        "<module>",
        "ValueError: memoryview assignment",
        ": ",
        "lvalue and rvalue have different structures",
        ">>> ",
        "v",
        "[",
        "2",
        ":",
        "6",
        "]",
        "=",
        "b",
        "'spam'",
        ">>> ",
        "data",
        "bytearray(b'z1spam')"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 26917,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "One-dimensional memoryviews of hashable (read-only) types with formats\n‘B’, ‘b’ or ‘c’ are also hashable. The hash is defined as\n<tt class=\"docutils literal\"><span class=\"pre\">hash(m)</span> <span class=\"pre\">==</span> <span class=\"pre\">hash(m.tobytes())</span></tt>:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "One-dimensional memoryviews of hashable (read-only) types with formats\n‘B’, ‘b’ or ‘c’ are also hashable. The hash is defined as\n",
        "hash(m)",
        "==",
        "hash(m.tobytes())",
        ":"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 26955,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 138,
        "left": 295,
        "top": 26955,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abcefg'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abcefg'</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'ce'</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abcefg'</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "v",
        "=",
        "memoryview",
        "(",
        "b",
        "'abcefg'",
        ")",
        ">>> ",
        "hash",
        "(",
        "v",
        ")",
        "==",
        "hash",
        "(",
        "b",
        "'abcefg'",
        ")",
        "True",
        ">>> ",
        "hash",
        "(",
        "v",
        "[",
        "2",
        ":",
        "4",
        "])",
        "==",
        "hash",
        "(",
        "b",
        "'ce'",
        ")",
        "True",
        ">>> ",
        "hash",
        "(",
        "v",
        "[::",
        "-",
        "2",
        "])",
        "==",
        "hash",
        "(",
        "b",
        "'abcefg'",
        "[::",
        "-",
        "2",
        "])",
        "True"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 27108,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(9)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> One-dimensional memoryviews with formats ‘B’, ‘b’ or ‘c’ are now hashable.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(9)",
      "text": [
        "Changed in version 3.3:",
        " One-dimensional memoryviews with formats ‘B’, ‘b’ or ‘c’ are now hashable."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 27146,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "<a class=\"reference internal\" href=\"#memoryview\" title=\"memoryview\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">memoryview</span></tt></a> has several methods:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(10)",
      "text": [
        "memoryview",
        " has several methods:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 27184,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.__eq__:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">__eq__</tt><big>(</big><em>exporter</em><big>)</big><a class=\"headerlink\" href=\"#memoryview.__eq__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dt#memoryview.__eq__:nth-of-type(1)",
      "text": [
        "__eq__",
        "(",
        "exporter",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 27210,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A memoryview and a <span class=\"target\" id=\"index-41\"></span><a class=\"pep reference external\" href=\"http://www.python.org/dev/peps/pep-3118\"><strong>PEP 3118</strong></a> exporter are equal if their shapes are\nequivalent and if all corresponding values are equal when the operands’\nrespective format codes are interpreted using <a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> syntax.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A memoryview and a ",
        "PEP 3118",
        " exporter are equal if their shapes are\nequivalent and if all corresponding values are equal when the operands’\nrespective format codes are interpreted using ",
        "struct",
        " syntax."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 27270,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For the subset of <a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> format strings currently supported by\n<a class=\"reference internal\" href=\"#memoryview.tolist\" title=\"memoryview.tolist\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">tolist()</span></tt></a>, <tt class=\"docutils literal\"><span class=\"pre\">v</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">w</span></tt> are equal if <tt class=\"docutils literal\"><span class=\"pre\">v.tolist()</span> <span class=\"pre\">==</span> <span class=\"pre\">w.tolist()</span></tt>:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For the subset of ",
        "struct",
        " format strings currently supported by\n",
        "tolist()",
        ", ",
        "v",
        " and ",
        "w",
        " are equal if ",
        "v.tolist()",
        "==",
        "w.tolist()",
        ":"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 27308,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 282,
        "left": 325,
        "top": 27308,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">array</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'I'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'d'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"n\">y</span> <span class=\"o\">==</span> <span class=\"n\">b</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span> <span class=\"o\">==</span> <span class=\"n\">c</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "array",
        ">>> ",
        "a",
        "=",
        "array",
        ".",
        "array",
        "(",
        "'I'",
        ",",
        "[",
        "1",
        ",",
        "2",
        ",",
        "3",
        ",",
        "4",
        ",",
        "5",
        "])",
        ">>> ",
        "b",
        "=",
        "array",
        ".",
        "array",
        "(",
        "'d'",
        ",",
        "[",
        "1.0",
        ",",
        "2.0",
        ",",
        "3.0",
        ",",
        "4.0",
        ",",
        "5.0",
        "])",
        ">>> ",
        "c",
        "=",
        "array",
        ".",
        "array",
        "(",
        "'b'",
        ",",
        "[",
        "5",
        ",",
        "3",
        ",",
        "1",
        "])",
        ">>> ",
        "x",
        "=",
        "memoryview",
        "(",
        "a",
        ")",
        ">>> ",
        "y",
        "=",
        "memoryview",
        "(",
        "b",
        ")",
        ">>> ",
        "x",
        "==",
        "a",
        "==",
        "y",
        "==",
        "b",
        "True",
        ">>> ",
        "x",
        ".",
        "tolist",
        "()",
        "==",
        "a",
        ".",
        "tolist",
        "()",
        "==",
        "y",
        ".",
        "tolist",
        "()",
        "==",
        "b",
        ".",
        "tolist",
        "()",
        "True",
        ">>> ",
        "z",
        "=",
        "y",
        "[::",
        "-",
        "2",
        "]",
        ">>> ",
        "z",
        "==",
        "c",
        "True",
        ">>> ",
        "z",
        ".",
        "tolist",
        "()",
        "==",
        "c",
        ".",
        "tolist",
        "()",
        "True"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 27605,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If either format string is not supported by the <a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> module,\nthen the objects will always compare as unequal (even if the format\nstrings and buffer contents are identical):",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If either format string is not supported by the ",
        "struct",
        " module,\nthen the objects will always compare as unequal (even if the format\nstrings and buffer contents are identical):"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 27665,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 210,
        "left": 325,
        "top": 27665,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">ctypes</span> <span class=\"k\">import</span> <span class=\"n\">BigEndianStructure</span><span class=\"p\">,</span> <span class=\"n\">c_long</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">BEPoint</span><span class=\"p\">(</span><span class=\"n\">BigEndianStructure</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">_fields_</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s\">\"x\"</span><span class=\"p\">,</span> <span class=\"n\">c_long</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">\"y\"</span><span class=\"p\">,</span> <span class=\"n\">c_long</span><span class=\"p\">)]</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">point</span> <span class=\"o\">=</span> <span class=\"n\">BEPoint</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"n\">point</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"n\">b</span>\n<span class=\"go\">False</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "from",
        "ctypes",
        "import",
        "BigEndianStructure",
        ",",
        "c_long",
        ">>> ",
        "class",
        "BEPoint",
        "(",
        "BigEndianStructure",
        "):",
        "... ",
        "_fields_",
        "=",
        "[(",
        "\"x\"",
        ",",
        "c_long",
        "),",
        "(",
        "\"y\"",
        ",",
        "c_long",
        ")]",
        "...",
        ">>> ",
        "point",
        "=",
        "BEPoint",
        "(",
        "100",
        ",",
        "200",
        ")",
        ">>> ",
        "a",
        "=",
        "memoryview",
        "(",
        "point",
        ")",
        ">>> ",
        "b",
        "=",
        "memoryview",
        "(",
        "point",
        ")",
        ">>> ",
        "a",
        "==",
        "point",
        "False",
        ">>> ",
        "a",
        "==",
        "b",
        "False"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 27890,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Note that, as with floating point numbers, <tt class=\"docutils literal\"><span class=\"pre\">v</span> <span class=\"pre\">is</span> <span class=\"pre\">w</span></tt> does <em>not</em> imply\n<tt class=\"docutils literal\"><span class=\"pre\">v</span> <span class=\"pre\">==</span> <span class=\"pre\">w</span></tt> for memoryview objects.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Note that, as with floating point numbers, ",
        "v",
        "is",
        "w",
        " does ",
        "not",
        " imply\n",
        "v",
        "==",
        "w",
        " for memoryview objects."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 27928,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(5)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> Previous versions compared the raw memory disregarding the item format\nand the logical array structure.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(5)",
      "text": [
        "Changed in version 3.3:",
        " Previous versions compared the raw memory disregarding the item format\nand the logical array structure."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 27966,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.tobytes:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">tobytes</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#memoryview.tobytes\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dt#memoryview.tobytes:nth-of-type(1)",
      "text": [
        "tobytes",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 27992,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the data in the buffer as a bytestring.  This is equivalent to\ncalling the <a class=\"reference internal\" href=\"functions.html#bytes\" title=\"bytes\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></tt></a> constructor on the memoryview.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the data in the buffer as a bytestring.  This is equivalent to\ncalling the ",
        "bytes",
        " constructor on the memoryview."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 28030,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 325,
        "top": 28030,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">\"abc\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">tobytes</span><span class=\"p\">()</span>\n<span class=\"go\">b'abc'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span>\n<span class=\"go\">b'abc'</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "m",
        "=",
        "memoryview",
        "(",
        "b",
        "\"abc\"",
        ")",
        ">>> ",
        "m",
        ".",
        "tobytes",
        "()",
        "b'abc'",
        ">>> ",
        "bytes",
        "(",
        "m",
        ")",
        "b'abc'"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 28147,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "For non-contiguous arrays the result is equal to the flattened list\nrepresentation with all elements converted to bytes. <a class=\"reference internal\" href=\"#memoryview.tobytes\" title=\"memoryview.tobytes\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">tobytes()</span></tt></a>\nsupports all format strings, including those that are not in\n<a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> module syntax.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "For non-contiguous arrays the result is equal to the flattened list\nrepresentation with all elements converted to bytes. ",
        "tobytes()",
        "\nsupports all format strings, including those that are not in\n",
        "struct",
        " module syntax."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 28207,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.tolist:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">tolist</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#memoryview.tolist\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dt#memoryview.tolist:nth-of-type(1)",
      "text": [
        "tolist",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 28233,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the data in the buffer as a list of elements.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the data in the buffer as a list of elements."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 28271,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 138,
        "left": 325,
        "top": 28271,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abc'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[97, 98, 99]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">array</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'d'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mf\">1.1</span><span class=\"p\">,</span> <span class=\"mf\">2.2</span><span class=\"p\">,</span> <span class=\"mf\">3.3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[1.1, 2.2, 3.3]</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "memoryview",
        "(",
        "b",
        "'abc'",
        ")",
        ".",
        "tolist",
        "()",
        "[97, 98, 99]",
        ">>> ",
        "import",
        "array",
        ">>> ",
        "a",
        "=",
        "array",
        ".",
        "array",
        "(",
        "'d'",
        ",",
        "[",
        "1.1",
        ",",
        "2.2",
        ",",
        "3.3",
        "])",
        ">>> ",
        "m",
        "=",
        "memoryview",
        "(",
        "a",
        ")",
        ">>> ",
        "m",
        ".",
        "tolist",
        "()",
        "[1.1, 2.2, 3.3]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 28424,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> <a class=\"reference internal\" href=\"#memoryview.tolist\" title=\"memoryview.tolist\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">tolist()</span></tt></a> now supports all single character native formats in\n<a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> module syntax as well as multi-dimensional\nrepresentations.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(2)",
      "text": [
        "Changed in version 3.3:",
        "tolist()",
        " now supports all single character native formats in\n",
        "struct",
        " module syntax as well as multi-dimensional\nrepresentations."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 28462,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.release:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">release</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#memoryview.release\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dt#memoryview.release:nth-of-type(1)",
      "text": [
        "release",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 28488,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Release the underlying buffer exposed by the memoryview object.  Many\nobjects take special actions when a view is held on them (for example,\na <a class=\"reference internal\" href=\"functions.html#bytearray\" title=\"bytearray\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></tt></a> would temporarily forbid resizing); therefore,\ncalling release() is handy to remove these restrictions (and free any\ndangling resources) as soon as possible.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Release the underlying buffer exposed by the memoryview object.  Many\nobjects take special actions when a view is held on them (for example,\na ",
        "bytearray",
        " would temporarily forbid resizing); therefore,\ncalling release() is handy to remove these restrictions (and free any\ndangling resources) as soon as possible."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 28548,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "After this method has been called, any further operation on the view\nraises a <a class=\"reference internal\" href=\"exceptions.html#ValueError\" title=\"ValueError\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">ValueError</span></tt></a> (except <a class=\"reference internal\" href=\"#memoryview.release\" title=\"memoryview.release\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">release()</span></tt></a> itself which can\nbe called multiple times):",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "After this method has been called, any further operation on the view\nraises a ",
        "ValueError",
        " (except ",
        "release()",
        " itself which can\nbe called multiple times):"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 28586,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 325,
        "top": 28586,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abc'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">1</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">ValueError</span><span>: </span><span class=\"n\">operation forbidden on released memoryview object</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "m",
        "=",
        "memoryview",
        "(",
        "b",
        "'abc'",
        ")",
        ">>> ",
        "m",
        ".",
        "release",
        "()",
        ">>> ",
        "m",
        "[",
        "0",
        "]",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "1",
        ", in ",
        "<module>",
        "ValueError",
        ": ",
        "operation forbidden on released memoryview object"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 28721,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The context management protocol can be used for a similar effect,\nusing the <tt class=\"docutils literal\"><span class=\"pre\">with</span></tt> statement:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The context management protocol can be used for a similar effect,\nusing the ",
        "with",
        " statement:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 28759,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 156,
        "left": 325,
        "top": 28759,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'abc'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">m</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">97</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">1</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">ValueError</span><span>: </span><span class=\"n\">operation forbidden on released memoryview object</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "with",
        "memoryview",
        "(",
        "b",
        "'abc'",
        ")",
        "as",
        "m",
        ":",
        "... ",
        "m",
        "[",
        "0",
        "]",
        "...",
        "97",
        ">>> ",
        "m",
        "[",
        "0",
        "]",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "1",
        ", in ",
        "<module>",
        "ValueError",
        ": ",
        "operation forbidden on released memoryview object"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 28930,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(4)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p.versionadded:nth-of-type(4)",
      "text": [
        "New in version 3.2."
      ]
    },
    {
      "bound": {
        "height": 24,
        "left": 295,
        "top": 28968,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.cast:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">cast</tt><big>(</big><em>format</em><span class=\"optional\">[</span>, <em>shape</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#memoryview.cast\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dt#memoryview.cast:nth-of-type(1)",
      "text": [
        "cast",
        "(",
        "format",
        "[",
        ", ",
        "shape",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 28995,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Cast a memoryview to a new format or shape. <em>shape</em> defaults to\n<tt class=\"docutils literal\"><span class=\"pre\">[byte_length//new_itemsize]</span></tt>, which means that the result view\nwill be one-dimensional. The return value is a new memoryview, but\nthe buffer itself is not copied. Supported casts are 1D -&gt; C-contiguous\nand C-contiguous -&gt; 1D.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Cast a memoryview to a new format or shape. ",
        "shape",
        " defaults to\n",
        "[byte_length//new_itemsize]",
        ", which means that the result view\nwill be one-dimensional. The return value is a new memoryview, but\nthe buffer itself is not copied. Supported casts are 1D -> C-contiguous\nand C-contiguous -> 1D."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 29055,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Both formats are restricted to single element native formats in\n<a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> syntax. One of the formats must be a byte format\n(‘B’, ‘b’ or ‘c’). The byte length of the result must be the same\nas the original length.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Both formats are restricted to single element native formats in\n",
        "struct",
        " syntax. One of the formats must be a byte format\n(‘B’, ‘b’ or ‘c’). The byte length of the result must be the same\nas the original length."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 29115,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Cast 1D/long to 1D/unsigned bytes:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Cast 1D/long to 1D/unsigned bytes:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 29153,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 372,
        "left": 325,
        "top": 29153,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">array</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'l'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">format</span>\n<span class=\"go\">'l'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">itemsize</span>\n<span class=\"go\">8</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">24</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"s\">'B'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">format</span>\n<span class=\"go\">'B'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">itemsize</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"go\">24</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">24</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "array",
        ">>> ",
        "a",
        "=",
        "array",
        ".",
        "array",
        "(",
        "'l'",
        ",",
        "[",
        "1",
        ",",
        "2",
        ",",
        "3",
        "])",
        ">>> ",
        "x",
        "=",
        "memoryview",
        "(",
        "a",
        ")",
        ">>> ",
        "x",
        ".",
        "format",
        "'l'",
        ">>> ",
        "x",
        ".",
        "itemsize",
        "8",
        ">>> ",
        "len",
        "(",
        "x",
        ")",
        "3",
        ">>> ",
        "x",
        ".",
        "nbytes",
        "24",
        ">>> ",
        "y",
        "=",
        "x",
        ".",
        "cast",
        "(",
        "'B'",
        ")",
        ">>> ",
        "y",
        ".",
        "format",
        "'B'",
        ">>> ",
        "y",
        ".",
        "itemsize",
        "1",
        ">>> ",
        "len",
        "(",
        "y",
        ")",
        "24",
        ">>> ",
        "y",
        ".",
        "nbytes",
        "24"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 29540,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Cast 1D/unsigned bytes to 1D/char:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Cast 1D/unsigned bytes to 1D/char:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 29578,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 325,
        "top": 29578,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"nb\">bytearray</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'zyz'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"s\">'a'</span>\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">1</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">ValueError: memoryview</span><span>: </span><span class=\"n\">invalid value for format \"B\"</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"s\">'c'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"s\">'a'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span>\n<span class=\"go\">bytearray(b'ayz')</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "b",
        "=",
        "bytearray",
        "(",
        "b",
        "'zyz'",
        ")",
        ">>> ",
        "x",
        "=",
        "memoryview",
        "(",
        "b",
        ")",
        ">>> ",
        "x",
        "[",
        "0",
        "]",
        "=",
        "b",
        "'a'",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "1",
        ", in ",
        "<module>",
        "ValueError: memoryview",
        ": ",
        "invalid value for format \"B\"",
        ">>> ",
        "y",
        "=",
        "x",
        ".",
        "cast",
        "(",
        "'c'",
        ")",
        ">>> ",
        "y",
        "[",
        "0",
        "]",
        "=",
        "b",
        "'a'",
        ">>> ",
        "b",
        "bytearray(b'ayz')"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 29785,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Cast 1D/bytes to 3D/ints to 1D/signed char:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Cast 1D/bytes to 3D/ints to 1D/signed char:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 29823,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 426,
        "left": 325,
        "top": 29823,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">struct</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"s\">\"i\"</span><span class=\"o\">*</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">)))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"s\">'i'</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[[[0, 1, 2], [3, 4, 5]], [[6, 7, 8], [9, 10, 11]]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">format</span>\n<span class=\"go\">'i'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">itemsize</span>\n<span class=\"go\">4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"go\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">48</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"s\">'b'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">format</span>\n<span class=\"go\">'b'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">itemsize</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"go\">48</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">48</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "struct",
        ">>> ",
        "buf",
        "=",
        "struct",
        ".",
        "pack",
        "(",
        "\"i\"",
        "*",
        "12",
        ",",
        "*",
        "list",
        "(",
        "range",
        "(",
        "12",
        ")))",
        ">>> ",
        "x",
        "=",
        "memoryview",
        "(",
        "buf",
        ")",
        ">>> ",
        "y",
        "=",
        "x",
        ".",
        "cast",
        "(",
        "'i'",
        ",",
        "shape",
        "=",
        "[",
        "2",
        ",",
        "2",
        ",",
        "3",
        "])",
        ">>> ",
        "y",
        ".",
        "tolist",
        "()",
        "[[[0, 1, 2], [3, 4, 5]], [[6, 7, 8], [9, 10, 11]]]",
        ">>> ",
        "y",
        ".",
        "format",
        "'i'",
        ">>> ",
        "y",
        ".",
        "itemsize",
        "4",
        ">>> ",
        "len",
        "(",
        "y",
        ")",
        "2",
        ">>> ",
        "y",
        ".",
        "nbytes",
        "48",
        ">>> ",
        "z",
        "=",
        "y",
        ".",
        "cast",
        "(",
        "'b'",
        ")",
        ">>> ",
        "z",
        ".",
        "format",
        "'b'",
        ">>> ",
        "z",
        ".",
        "itemsize",
        "1",
        ">>> ",
        "len",
        "(",
        "z",
        ")",
        "48",
        ">>> ",
        "z",
        ".",
        "nbytes",
        "48"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 30264,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "Cast 1D/unsigned char to 2D/unsigned long:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "Cast 1D/unsigned char to 2D/unsigned long:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 30302,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 325,
        "top": 30302,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"s\">\"L\"</span><span class=\"o\">*</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"s\">'L'</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"go\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">48</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[[0, 1, 2], [3, 4, 5]]</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "buf",
        "=",
        "struct",
        ".",
        "pack",
        "(",
        "\"L\"",
        "*",
        "6",
        ",",
        "*",
        "list",
        "(",
        "range",
        "(",
        "6",
        ")))",
        ">>> ",
        "x",
        "=",
        "memoryview",
        "(",
        "buf",
        ")",
        ">>> ",
        "y",
        "=",
        "x",
        ".",
        "cast",
        "(",
        "'L'",
        ",",
        "shape",
        "=",
        "[",
        "2",
        ",",
        "3",
        "])",
        ">>> ",
        "len",
        "(",
        "y",
        ")",
        "2",
        ">>> ",
        "y",
        ".",
        "nbytes",
        "48",
        ">>> ",
        "y",
        ".",
        "tolist",
        "()",
        "[[0, 1, 2], [3, 4, 5]]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 30491,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(7)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p.versionadded:nth-of-type(7)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 30529,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "There are also several readonly attributes available:",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(11)",
      "text": [
        "There are also several readonly attributes available:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 30567,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.obj:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">obj</tt><a class=\"headerlink\" href=\"#memoryview.obj\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(6) > dt#memoryview.obj:nth-of-type(1)",
      "text": [
        "obj",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 30593,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The underlying object of the memoryview:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The underlying object of the memoryview:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 30631,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(6) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 84,
        "left": 325,
        "top": 30631,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span>  <span class=\"o\">=</span> <span class=\"nb\">bytearray</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"s\">'xyz'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">obj</span> <span class=\"ow\">is</span> <span class=\"n\">b</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(6) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "b",
        "=",
        "bytearray",
        "(",
        "b",
        "'xyz'",
        ")",
        ">>> ",
        "m",
        "=",
        "memoryview",
        "(",
        "b",
        ")",
        ">>> ",
        "m",
        ".",
        "obj",
        "is",
        "b",
        "True"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 30730,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(6) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 30768,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.nbytes:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">nbytes</tt><a class=\"headerlink\" href=\"#memoryview.nbytes\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dt#memoryview.nbytes:nth-of-type(1)",
      "text": [
        "nbytes",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 30794,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">nbytes</span> <span class=\"pre\">==</span> <span class=\"pre\">product(shape)</span> <span class=\"pre\">*</span> <span class=\"pre\">itemsize</span> <span class=\"pre\">==</span> <span class=\"pre\">len(m.tobytes())</span></tt>. This is\nthe amount of space in bytes that the array would use in a contiguous\nrepresentation. It is not necessarily equal to len(m):",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "nbytes",
        "==",
        "product(shape)",
        "*",
        "itemsize",
        "==",
        "len(m.tobytes())",
        ". This is\nthe amount of space in bytes that the array would use in a contiguous\nrepresentation. It is not necessarily equal to len(m):"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 30854,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 325,
        "top": 30854,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">array</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'i'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span>\n<span class=\"go\">5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">20</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">12</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">tobytes</span><span class=\"p\">())</span>\n<span class=\"go\">12</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "array",
        ">>> ",
        "a",
        "=",
        "array",
        ".",
        "array",
        "(",
        "'i'",
        ",",
        "[",
        "1",
        ",",
        "2",
        ",",
        "3",
        ",",
        "4",
        ",",
        "5",
        "])",
        ">>> ",
        "m",
        "=",
        "memoryview",
        "(",
        "a",
        ")",
        ">>> ",
        "len",
        "(",
        "m",
        ")",
        "5",
        ">>> ",
        "m",
        ".",
        "nbytes",
        "20",
        ">>> ",
        "y",
        "=",
        "m",
        "[::",
        "2",
        "]",
        ">>> ",
        "len",
        "(",
        "y",
        ")",
        "3",
        ">>> ",
        "y",
        ".",
        "nbytes",
        "12",
        ">>> ",
        "len",
        "(",
        "y",
        ".",
        "tobytes",
        "())",
        "12"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31133,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Multi-dimensional arrays:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Multi-dimensional arrays:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 31171,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 325,
        "top": 31171,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">struct</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">pack</span><span class=\"p\">(</span><span class=\"s\">\"d\"</span><span class=\"o\">*</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">[</span><span class=\"mf\">1.5</span><span class=\"o\">*</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">)])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"s\">'d'</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"go\">[[0.0, 1.5, 3.0, 4.5], [6.0, 7.5, 9.0, 10.5], [12.0, 13.5, 15.0, 16.5]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">nbytes</span>\n<span class=\"go\">96</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "struct",
        ">>> ",
        "buf",
        "=",
        "struct",
        ".",
        "pack",
        "(",
        "\"d\"",
        "*",
        "12",
        ",",
        "*",
        "[",
        "1.5",
        "*",
        "x",
        "for",
        "x",
        "in",
        "range",
        "(",
        "12",
        ")])",
        ">>> ",
        "x",
        "=",
        "memoryview",
        "(",
        "buf",
        ")",
        ">>> ",
        "y",
        "=",
        "x",
        ".",
        "cast",
        "(",
        "'d'",
        ",",
        "shape",
        "=",
        "[",
        "3",
        ",",
        "4",
        "])",
        ">>> ",
        "y",
        ".",
        "tolist",
        "()",
        "[[0.0, 1.5, 3.0, 4.5], [6.0, 7.5, 9.0, 10.5], [12.0, 13.5, 15.0, 16.5]]",
        ">>> ",
        "len",
        "(",
        "y",
        ")",
        "3",
        ">>> ",
        "y",
        ".",
        "nbytes",
        "96"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31378,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(3)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(7) > dd:nth-of-type(1) > p.versionadded:nth-of-type(3)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 31416,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.readonly:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">readonly</tt><a class=\"headerlink\" href=\"#memoryview.readonly\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(8) > dt#memoryview.readonly:nth-of-type(1)",
      "text": [
        "readonly",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31442,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A bool indicating whether the memory is read only.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A bool indicating whether the memory is read only."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 31480,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.format:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">format</tt><a class=\"headerlink\" href=\"#memoryview.format\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(9) > dt#memoryview.format:nth-of-type(1)",
      "text": [
        "format",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 31506,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A string containing the format (in <a class=\"reference internal\" href=\"struct.html#module-struct\" title=\"struct: Interpret bytes as packed binary data.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">struct</span></tt></a> module style) for each\nelement in the view. A memoryview can be created from exporters with\narbitrary format strings, but some methods (e.g. <a class=\"reference internal\" href=\"#memoryview.tolist\" title=\"memoryview.tolist\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">tolist()</span></tt></a>) are\nrestricted to native single element formats.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A string containing the format (in ",
        "struct",
        " module style) for each\nelement in the view. A memoryview can be created from exporters with\narbitrary format strings, but some methods (e.g. ",
        "tolist()",
        ") are\nrestricted to native single element formats."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31566,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> format <tt class=\"docutils literal\"><span class=\"pre\">'B'</span></tt> is now handled according to the struct module syntax.\nThis means that <tt class=\"docutils literal\"><span class=\"pre\">memoryview(b'abc')[0]</span> <span class=\"pre\">==</span> <span class=\"pre\">b'abc'[0]</span> <span class=\"pre\">==</span> <span class=\"pre\">97</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(9) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(2)",
      "text": [
        "Changed in version 3.3:",
        " format ",
        "'B'",
        " is now handled according to the struct module syntax.\nThis means that ",
        "memoryview(b'abc')[0]",
        "==",
        "b'abc'[0]",
        "==",
        "97",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 31604,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.itemsize:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">itemsize</tt><a class=\"headerlink\" href=\"#memoryview.itemsize\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(10) > dt#memoryview.itemsize:nth-of-type(1)",
      "text": [
        "itemsize",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31630,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The size in bytes of each element of the memoryview:",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The size in bytes of each element of the memoryview:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 31668,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(10) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 156,
        "left": 325,
        "top": 31668,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">array</span><span class=\"o\">,</span> <span class=\"nn\">struct</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">memoryview</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"s\">'H'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">32000</span><span class=\"p\">,</span> <span class=\"mi\">32001</span><span class=\"p\">,</span> <span class=\"mi\">32002</span><span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">itemsize</span>\n<span class=\"go\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">m</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">32000</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">struct</span><span class=\"o\">.</span><span class=\"n\">calcsize</span><span class=\"p\">(</span><span class=\"s\">'H'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">itemsize</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(10) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "array",
        ",",
        "struct",
        ">>> ",
        "m",
        "=",
        "memoryview",
        "(",
        "array",
        ".",
        "array",
        "(",
        "'H'",
        ",",
        "[",
        "32000",
        ",",
        "32001",
        ",",
        "32002",
        "]))",
        ">>> ",
        "m",
        ".",
        "itemsize",
        "2",
        ">>> ",
        "m",
        "[",
        "0",
        "]",
        "32000",
        ">>> ",
        "struct",
        ".",
        "calcsize",
        "(",
        "'H'",
        ")",
        "==",
        "m",
        ".",
        "itemsize",
        "True"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 31840,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.ndim:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">ndim</tt><a class=\"headerlink\" href=\"#memoryview.ndim\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(11) > dt#memoryview.ndim:nth-of-type(1)",
      "text": [
        "ndim",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31866,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "An integer indicating how many dimensions of a multi-dimensional array the\nmemory represents.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "An integer indicating how many dimensions of a multi-dimensional array the\nmemory represents."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 31904,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.shape:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">shape</tt><a class=\"headerlink\" href=\"#memoryview.shape\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(12) > dt#memoryview.shape:nth-of-type(1)",
      "text": [
        "shape",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31930,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A tuple of integers the length of <a class=\"reference internal\" href=\"#memoryview.ndim\" title=\"memoryview.ndim\"><tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">ndim</span></tt></a> giving the shape of the\nmemory as an N-dimensional array.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A tuple of integers the length of ",
        "ndim",
        " giving the shape of the\nmemory as an N-dimensional array."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 31968,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> An empty tuple instead of None when ndim = 0.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(12) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(2)",
      "text": [
        "Changed in version 3.3:",
        " An empty tuple instead of None when ndim = 0."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 32006,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.strides:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">strides</tt><a class=\"headerlink\" href=\"#memoryview.strides\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(13) > dt#memoryview.strides:nth-of-type(1)",
      "text": [
        "strides",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32032,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A tuple of integers the length of <a class=\"reference internal\" href=\"#memoryview.ndim\" title=\"memoryview.ndim\"><tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">ndim</span></tt></a> giving the size in bytes to\naccess each element for each dimension of the array.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(13) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A tuple of integers the length of ",
        "ndim",
        " giving the size in bytes to\naccess each element for each dimension of the array."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32070,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionchanged:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">Changed in version 3.3:</span> An empty tuple instead of None when ndim = 0.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(13) > dd:nth-of-type(1) > p.versionchanged:nth-of-type(2)",
      "text": [
        "Changed in version 3.3:",
        " An empty tuple instead of None when ndim = 0."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 32108,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.suboffsets:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">suboffsets</tt><a class=\"headerlink\" href=\"#memoryview.suboffsets\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(14) > dt#memoryview.suboffsets:nth-of-type(1)",
      "text": [
        "suboffsets",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32134,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Used internally for PIL-style arrays. The value is informational only.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(14) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Used internally for PIL-style arrays. The value is informational only."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 32172,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.c_contiguous:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">c_contiguous</tt><a class=\"headerlink\" href=\"#memoryview.c_contiguous\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(15) > dt#memoryview.c_contiguous:nth-of-type(1)",
      "text": [
        "c_contiguous",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32198,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A bool indicating whether the memory is C-contiguous.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(15) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A bool indicating whether the memory is C-contiguous."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32236,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(15) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 32274,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.f_contiguous:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">f_contiguous</tt><a class=\"headerlink\" href=\"#memoryview.f_contiguous\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(16) > dt#memoryview.f_contiguous:nth-of-type(1)",
      "text": [
        "f_contiguous",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32300,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A bool indicating whether the memory is Fortran contiguous.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A bool indicating whether the memory is Fortran contiguous."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32338,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(16) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 32376,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#memoryview.contiguous:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">contiguous</tt><a class=\"headerlink\" href=\"#memoryview.contiguous\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(17) > dt#memoryview.contiguous:nth-of-type(1)",
      "text": [
        "contiguous",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32402,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A bool indicating whether the memory is contiguous.",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(17) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A bool indicating whether the memory is contiguous."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 32440,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#binary-sequence-types-bytes-bytearray-memoryview.section:nth-of-type(8) > div#memory-views.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.attribute:nth-of-type(17) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 32478,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.9. Set Types — <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a>, <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a><a class=\"headerlink\" href=\"#set-types-set-frozenset\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > h2:nth-of-type(1)",
      "text": [
        "4.9. Set Types — ",
        "set",
        ", ",
        "frozenset",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 32541,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-42:nth-of-type(1)",
      "html": "A <em class=\"dfn\">set</em> object is an unordered collection of distinct <a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a> objects.\nCommon uses include membership testing, removing duplicates from a sequence, and\ncomputing mathematical operations such as intersection, union, difference, and\nsymmetric difference.\n(For other containers see the built-in <a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a>, <a class=\"reference internal\" href=\"#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a>,\nand <a class=\"reference internal\" href=\"#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a> classes, and the <a class=\"reference internal\" href=\"collections.html#module-collections\" title=\"collections: Container datatypes\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></tt></a> module.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > p#index-42:nth-of-type(1)",
      "text": [
        "A ",
        "set",
        " object is an unordered collection of distinct ",
        "hashable",
        " objects.\nCommon uses include membership testing, removing duplicates from a sequence, and\ncomputing mathematical operations such as intersection, union, difference, and\nsymmetric difference.\n(For other containers see the built-in ",
        "dict",
        ", ",
        "list",
        ",\nand ",
        "tuple",
        " classes, and the ",
        "collections",
        " module.)"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 32623,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Like other collections, sets support <tt class=\"docutils literal\"><span class=\"pre\">x</span> <span class=\"pre\">in</span> <span class=\"pre\">set</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">len(set)</span></tt>, and <tt class=\"docutils literal\"><span class=\"pre\">for</span> <span class=\"pre\">x</span> <span class=\"pre\">in</span>\n<span class=\"pre\">set</span></tt>.  Being an unordered collection, sets do not record element position or\norder of insertion.  Accordingly, sets do not support indexing, slicing, or\nother sequence-like behavior.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > p:nth-of-type(2)",
      "text": [
        "Like other collections, sets support ",
        "x",
        "in",
        "set",
        ", ",
        "len(set)",
        ", and ",
        "for",
        "x",
        "in",
        "set",
        ".  Being an unordered collection, sets do not record element position or\norder of insertion.  Accordingly, sets do not support indexing, slicing, or\nother sequence-like behavior."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 32683,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "There are currently two built-in set types, <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> and <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>.\nThe <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> type is mutable — the contents can be changed using methods\nlike <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">add()</span></tt> and <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">remove()</span></tt>.  Since it is mutable, it has no hash value\nand cannot be used as either a dictionary key or as an element of another set.\nThe <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a> type is immutable and <a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a> — its contents cannot be\naltered after it is created; it can therefore be used as a dictionary key or as\nan element of another set.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > p:nth-of-type(3)",
      "text": [
        "There are currently two built-in set types, ",
        "set",
        " and ",
        "frozenset",
        ".\nThe ",
        "set",
        " type is mutable — the contents can be changed using methods\nlike ",
        "add()",
        " and ",
        "remove()",
        ".  Since it is mutable, it has no hash value\nand cannot be used as either a dictionary key or as an element of another set.\nThe ",
        "frozenset",
        " type is immutable and ",
        "hashable",
        " — its contents cannot be\naltered after it is created; it can therefore be used as a dictionary key or as\nan element of another set."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 32765,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Non-empty sets (not frozensets) can be created by placing a comma-separated list\nof elements within braces, for example: <tt class=\"docutils literal\"><span class=\"pre\">{'jack',</span> <span class=\"pre\">'sjoerd'}</span></tt>, in addition to the\n<a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> constructor.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > p:nth-of-type(4)",
      "text": [
        "Non-empty sets (not frozensets) can be created by placing a comma-separated list\nof elements within braces, for example: ",
        "{'jack',",
        "'sjoerd'}",
        ", in addition to the\n",
        "set",
        " constructor."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 32803,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "The constructors for both classes work the same:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > p:nth-of-type(5)",
      "text": [
        "The constructors for both classes work the same:"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 32841,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#set:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">set</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#set\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dt#set:nth-of-type(1)",
      "text": [
        "class ",
        "set",
        "(",
        "[",
        "iterable",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 26,
        "left": 265,
        "top": 32867,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#frozenset:nth-of-type(2)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">frozenset</tt><big>(</big><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#frozenset\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dt#frozenset:nth-of-type(2)",
      "text": [
        "class ",
        "frozenset",
        "(",
        "[",
        "iterable",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 32896,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new set or frozenset object whose elements are taken from\n<em>iterable</em>.  The elements of a set must be <a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a>.  To\nrepresent sets of sets, the inner sets must be <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>\nobjects.  If <em>iterable</em> is not specified, a new empty set is\nreturned.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new set or frozenset object whose elements are taken from\n",
        "iterable",
        ".  The elements of a set must be ",
        "hashable",
        ".  To\nrepresent sets of sets, the inner sets must be ",
        "frozenset",
        "\nobjects.  If ",
        "iterable",
        " is not specified, a new empty set is\nreturned."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 32956,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Instances of <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> and <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a> provide the following\noperations:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Instances of ",
        "set",
        " and ",
        "frozenset",
        " provide the following\noperations:"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 32994,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">len(s)</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "len(s)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33017,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the cardinality of set <em>s</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the cardinality of set ",
        "s",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33055,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">x in s</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dt:nth-of-type(1)",
      "text": [
        "x in s"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33078,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Test <em>x</em> for membership in <em>s</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Test ",
        "x",
        " for membership in ",
        "s",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33116,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">x not in s</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(3) > dt:nth-of-type(1)",
      "text": [
        "x not in s"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33139,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Test <em>x</em> for non-membership in <em>s</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Test ",
        "x",
        " for non-membership in ",
        "s",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33177,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.isdisjoint:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">isdisjoint</tt><big>(</big><em>other</em><big>)</big><a class=\"headerlink\" href=\"#set.isdisjoint\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dt#set.isdisjoint:nth-of-type(1)",
      "text": [
        "isdisjoint",
        "(",
        "other",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33203,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return True if the set has no elements in common with <em>other</em>.  Sets are\ndisjoint if and only if their intersection is the empty set.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return True if the set has no elements in common with ",
        "other",
        ".  Sets are\ndisjoint if and only if their intersection is the empty set."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33241,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.issubset:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">issubset</tt><big>(</big><em>other</em><big>)</big><a class=\"headerlink\" href=\"#set.issubset\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dt#set.issubset:nth-of-type(1)",
      "text": [
        "issubset",
        "(",
        "other",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33264,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set &lt;= other</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dt:nth-of-type(2)",
      "text": [
        "set <= other"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33287,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Test whether every element in the set is in <em>other</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Test whether every element in the set is in ",
        "other",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33325,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">set &lt; other</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dt:nth-of-type(1)",
      "text": [
        "set < other"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33348,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Test whether the set is a proper subset of <em>other</em>, that is,\n<tt class=\"docutils literal\"><span class=\"pre\">set</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">other</span> <span class=\"pre\">and</span> <span class=\"pre\">set</span> <span class=\"pre\">!=</span> <span class=\"pre\">other</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Test whether the set is a proper subset of ",
        "other",
        ", that is,\n",
        "set",
        "<=",
        "other",
        "and",
        "set",
        "!=",
        "other",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33386,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.issuperset:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">issuperset</tt><big>(</big><em>other</em><big>)</big><a class=\"headerlink\" href=\"#set.issuperset\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dt#set.issuperset:nth-of-type(1)",
      "text": [
        "issuperset",
        "(",
        "other",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33409,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set &gt;= other</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dt:nth-of-type(2)",
      "text": [
        "set >= other"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33432,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Test whether every element in <em>other</em> is in the set.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Test whether every element in ",
        "other",
        " is in the set."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33470,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">set &gt; other</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dt:nth-of-type(1)",
      "text": [
        "set > other"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33493,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Test whether the set is a proper superset of <em>other</em>, that is, <tt class=\"docutils literal\"><span class=\"pre\">set</span> <span class=\"pre\">&gt;=</span>\n<span class=\"pre\">other</span> <span class=\"pre\">and</span> <span class=\"pre\">set</span> <span class=\"pre\">!=</span> <span class=\"pre\">other</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Test whether the set is a proper superset of ",
        "other",
        ", that is, ",
        "set",
        ">=",
        "other",
        "and",
        "set",
        "!=",
        "other",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33531,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.union:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">union</tt><big>(</big><em>other</em>, <em>...</em><big>)</big><a class=\"headerlink\" href=\"#set.union\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(9) > dt#set.union:nth-of-type(1)",
      "text": [
        "union",
        "(",
        "other",
        ", ",
        "...",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33554,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set | other | ...</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(9) > dt:nth-of-type(2)",
      "text": [
        "set | other | ..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33577,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new set with elements from the set and all others.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new set with elements from the set and all others."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33615,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.intersection:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">intersection</tt><big>(</big><em>other</em>, <em>...</em><big>)</big><a class=\"headerlink\" href=\"#set.intersection\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(10) > dt#set.intersection:nth-of-type(1)",
      "text": [
        "intersection",
        "(",
        "other",
        ", ",
        "...",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33638,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set &amp; other &amp; ...</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(10) > dt:nth-of-type(2)",
      "text": [
        "set & other & ..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33661,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new set with elements common to the set and all others.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new set with elements common to the set and all others."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33699,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.difference:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">difference</tt><big>(</big><em>other</em>, <em>...</em><big>)</big><a class=\"headerlink\" href=\"#set.difference\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(11) > dt#set.difference:nth-of-type(1)",
      "text": [
        "difference",
        "(",
        "other",
        ", ",
        "...",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33722,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set - other - ...</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(11) > dt:nth-of-type(2)",
      "text": [
        "set - other - ..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33745,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new set with elements in the set that are not in the others.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new set with elements in the set that are not in the others."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33783,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.symmetric_difference:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">symmetric_difference</tt><big>(</big><em>other</em><big>)</big><a class=\"headerlink\" href=\"#set.symmetric_difference\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(12) > dt#set.symmetric_difference:nth-of-type(1)",
      "text": [
        "symmetric_difference",
        "(",
        "other",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 33806,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set ^ other</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(12) > dt:nth-of-type(2)",
      "text": [
        "set ^ other"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33829,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new set with elements in either the set or <em>other</em> but not both.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new set with elements in either the set or ",
        "other",
        " but not both."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 33867,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.copy:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">copy</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#set.copy\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(13) > dt#set.copy:nth-of-type(1)",
      "text": [
        "copy",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 33893,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new set with a shallow copy of <em>s</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(13) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new set with a shallow copy of ",
        "s",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 33931,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Note, the non-operator versions of <a class=\"reference internal\" href=\"#set.union\" title=\"set.union\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">union()</span></tt></a>, <a class=\"reference internal\" href=\"#set.intersection\" title=\"set.intersection\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">intersection()</span></tt></a>,\n<a class=\"reference internal\" href=\"#set.difference\" title=\"set.difference\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">difference()</span></tt></a>, and <a class=\"reference internal\" href=\"#set.symmetric_difference\" title=\"set.symmetric_difference\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">symmetric_difference()</span></tt></a>, <a class=\"reference internal\" href=\"#set.issubset\" title=\"set.issubset\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">issubset()</span></tt></a>, and\n<a class=\"reference internal\" href=\"#set.issuperset\" title=\"set.issuperset\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">issuperset()</span></tt></a> methods will accept any iterable as an argument.  In\ncontrast, their operator based counterparts require their arguments to be\nsets.  This precludes error-prone constructions like <tt class=\"docutils literal\"><span class=\"pre\">set('abc')</span> <span class=\"pre\">&amp;</span> <span class=\"pre\">'cbs'</span></tt>\nin favor of the more readable <tt class=\"docutils literal\"><span class=\"pre\">set('abc').intersection('cbs')</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Note, the non-operator versions of ",
        "union()",
        ", ",
        "intersection()",
        ",\n",
        "difference()",
        ", and ",
        "symmetric_difference()",
        ", ",
        "issubset()",
        ", and\n",
        "issuperset()",
        " methods will accept any iterable as an argument.  In\ncontrast, their operator based counterparts require their arguments to be\nsets.  This precludes error-prone constructions like ",
        "set('abc')",
        "&",
        "'cbs'",
        "\nin favor of the more readable ",
        "set('abc').intersection('cbs')",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 34013,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Both <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> and <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a> support set to set comparisons. Two\nsets are equal if and only if every element of each set is contained in the\nother (each is a subset of the other). A set is less than another set if and\nonly if the first set is a proper subset of the second set (is a subset, but\nis not equal). A set is greater than another set if and only if the first set\nis a proper superset of the second set (is a superset, but is not equal).",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Both ",
        "set",
        " and ",
        "frozenset",
        " support set to set comparisons. Two\nsets are equal if and only if every element of each set is contained in the\nother (each is a subset of the other). A set is less than another set if and\nonly if the first set is a proper subset of the second set (is a subset, but\nis not equal). A set is greater than another set if and only if the first set\nis a proper superset of the second set (is a superset, but is not equal)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 34095,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Instances of <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> are compared to instances of <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>\nbased on their members.  For example, <tt class=\"docutils literal\"><span class=\"pre\">set('abc')</span> <span class=\"pre\">==</span> <span class=\"pre\">frozenset('abc')</span></tt>\nreturns <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> and so does <tt class=\"docutils literal\"><span class=\"pre\">set('abc')</span> <span class=\"pre\">in</span> <span class=\"pre\">set([frozenset('abc')])</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Instances of ",
        "set",
        " are compared to instances of ",
        "frozenset",
        "\nbased on their members.  For example, ",
        "set('abc')",
        "==",
        "frozenset('abc')",
        "\nreturns ",
        "True",
        " and so does ",
        "set('abc')",
        "in",
        "set([frozenset('abc')])",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 34155,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "The subset and equality comparisons do not generalize to a total ordering\nfunction.  For example, any two nonempty disjoint sets are not equal and are not\nsubsets of each other, so <em>all</em> of the following return <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>: <tt class=\"docutils literal\"><span class=\"pre\">a&lt;b</span></tt>,\n<tt class=\"docutils literal\"><span class=\"pre\">a==b</span></tt>, or <tt class=\"docutils literal\"><span class=\"pre\">a&gt;b</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "The subset and equality comparisons do not generalize to a total ordering\nfunction.  For example, any two nonempty disjoint sets are not equal and are not\nsubsets of each other, so ",
        "all",
        " of the following return ",
        "False",
        ": ",
        "a<b",
        ",\n",
        "a==b",
        ", or ",
        "a>b",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 34215,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(7)",
      "html": "Since sets only define partial ordering (subset relationships), the output of\nthe <a class=\"reference internal\" href=\"#list.sort\" title=\"list.sort\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">list.sort()</span></tt></a> method is undefined for lists of sets.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(7)",
      "text": [
        "Since sets only define partial ordering (subset relationships), the output of\nthe ",
        "list.sort()",
        " method is undefined for lists of sets."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 34253,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "Set elements, like dictionary keys, must be <a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "Set elements, like dictionary keys, must be ",
        "hashable",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 34291,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "Binary operations that mix <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> instances with <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>\nreturn the type of the first operand.  For example: <tt class=\"docutils literal\"><span class=\"pre\">frozenset('ab')</span> <span class=\"pre\">|</span>\n<span class=\"pre\">set('bc')</span></tt> returns an instance of <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(9)",
      "text": [
        "Binary operations that mix ",
        "set",
        " instances with ",
        "frozenset",
        "\nreturn the type of the first operand.  For example: ",
        "frozenset('ab')",
        "|",
        "set('bc')",
        " returns an instance of ",
        "frozenset",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 34329,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(10)",
      "html": "The following table lists operations available for <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a> that do not\napply to immutable instances of <a class=\"reference internal\" href=\"#frozenset\" title=\"frozenset\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></tt></a>:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(10)",
      "text": [
        "The following table lists operations available for ",
        "set",
        " that do not\napply to immutable instances of ",
        "frozenset",
        ":"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34367,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.update:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">update</tt><big>(</big><em>other</em>, <em>...</em><big>)</big><a class=\"headerlink\" href=\"#set.update\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(14) > dt#set.update:nth-of-type(1)",
      "text": [
        "update",
        "(",
        "other",
        ", ",
        "...",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 34390,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set |= other | ...</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(14) > dt:nth-of-type(2)",
      "text": [
        "set |= other | ..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34413,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Update the set, adding elements from all others.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(14) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Update the set, adding elements from all others."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34451,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.intersection_update:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">intersection_update</tt><big>(</big><em>other</em>, <em>...</em><big>)</big><a class=\"headerlink\" href=\"#set.intersection_update\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(15) > dt#set.intersection_update:nth-of-type(1)",
      "text": [
        "intersection_update",
        "(",
        "other",
        ", ",
        "...",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 34474,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set &amp;= other &amp; ...</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(15) > dt:nth-of-type(2)",
      "text": [
        "set &= other & ..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34497,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Update the set, keeping only elements found in it and all others.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(15) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Update the set, keeping only elements found in it and all others."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34535,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.difference_update:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">difference_update</tt><big>(</big><em>other</em>, <em>...</em><big>)</big><a class=\"headerlink\" href=\"#set.difference_update\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(16) > dt#set.difference_update:nth-of-type(1)",
      "text": [
        "difference_update",
        "(",
        "other",
        ", ",
        "...",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 34558,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set -= other | ...</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(16) > dt:nth-of-type(2)",
      "text": [
        "set -= other | ..."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34581,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Update the set, removing elements found in others.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Update the set, removing elements found in others."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34619,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.symmetric_difference_update:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">symmetric_difference_update</tt><big>(</big><em>other</em><big>)</big><a class=\"headerlink\" href=\"#set.symmetric_difference_update\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(17) > dt#set.symmetric_difference_update:nth-of-type(1)",
      "text": [
        "symmetric_difference_update",
        "(",
        "other",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 34642,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<tt class=\"descname\">set ^= other</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(17) > dt:nth-of-type(2)",
      "text": [
        "set ^= other"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34665,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Update the set, keeping only elements found in either set, but not in both.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(17) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Update the set, keeping only elements found in either set, but not in both."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34703,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.add:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">add</tt><big>(</big><em>elem</em><big>)</big><a class=\"headerlink\" href=\"#set.add\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(18) > dt#set.add:nth-of-type(1)",
      "text": [
        "add",
        "(",
        "elem",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34729,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Add element <em>elem</em> to the set.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(18) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Add element ",
        "elem",
        " to the set."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34767,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.remove:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">remove</tt><big>(</big><em>elem</em><big>)</big><a class=\"headerlink\" href=\"#set.remove\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(19) > dt#set.remove:nth-of-type(1)",
      "text": [
        "remove",
        "(",
        "elem",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34793,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Remove element <em>elem</em> from the set.  Raises <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> if <em>elem</em> is\nnot contained in the set.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(19) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Remove element ",
        "elem",
        " from the set.  Raises ",
        "KeyError",
        " if ",
        "elem",
        " is\nnot contained in the set."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34831,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.discard:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">discard</tt><big>(</big><em>elem</em><big>)</big><a class=\"headerlink\" href=\"#set.discard\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(20) > dt#set.discard:nth-of-type(1)",
      "text": [
        "discard",
        "(",
        "elem",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34857,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Remove element <em>elem</em> from the set if it is present.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(20) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Remove element ",
        "elem",
        " from the set if it is present."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34895,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.pop:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">pop</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#set.pop\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(21) > dt#set.pop:nth-of-type(1)",
      "text": [
        "pop",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34921,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Remove and return an arbitrary element from the set.  Raises\n<a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> if the set is empty.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(21) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Remove and return an arbitrary element from the set.  Raises\n",
        "KeyError",
        " if the set is empty."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 34959,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#set.clear:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">clear</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#set.clear\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(22) > dt#set.clear:nth-of-type(1)",
      "text": [
        "clear",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 34985,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Remove all elements from the set.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(22) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Remove all elements from the set."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 35023,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(11)",
      "html": "Note, the non-operator versions of the <a class=\"reference internal\" href=\"#set.update\" title=\"set.update\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">update()</span></tt></a>,\n<a class=\"reference internal\" href=\"#set.intersection_update\" title=\"set.intersection_update\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">intersection_update()</span></tt></a>, <a class=\"reference internal\" href=\"#set.difference_update\" title=\"set.difference_update\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">difference_update()</span></tt></a>, and\n<a class=\"reference internal\" href=\"#set.symmetric_difference_update\" title=\"set.symmetric_difference_update\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">symmetric_difference_update()</span></tt></a> methods will accept any iterable as an\nargument.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(11)",
      "text": [
        "Note, the non-operator versions of the ",
        "update()",
        ",\n",
        "intersection_update()",
        ", ",
        "difference_update()",
        ", and\n",
        "symmetric_difference_update()",
        " methods will accept any iterable as an\nargument."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 35061,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(12)",
      "html": "Note, the <em>elem</em> argument to the <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__contains__\" title=\"object.__contains__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__contains__()</span></tt></a>, <a class=\"reference internal\" href=\"#set.remove\" title=\"set.remove\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">remove()</span></tt></a>, and\n<a class=\"reference internal\" href=\"#set.discard\" title=\"set.discard\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">discard()</span></tt></a> methods may be a set.  To support searching for an equivalent\nfrozenset, the <em>elem</em> set is temporarily mutated during the search and then\nrestored.  During the search, the <em>elem</em> set should not be read or mutated\nsince it does not have a meaningful value.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#set-types-set-frozenset.section:nth-of-type(9) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(12)",
      "text": [
        "Note, the ",
        "elem",
        " argument to the ",
        "__contains__()",
        ", ",
        "remove()",
        ", and\n",
        "discard()",
        " methods may be a set.  To support searching for an equivalent\nfrozenset, the ",
        "elem",
        " set is temporarily mutated during the search and then\nrestored.  During the search, the ",
        "elem",
        " set should not be read or mutated\nsince it does not have a meaningful value."
      ]
    },
    {
      "bound": {
        "height": 47,
        "left": 265,
        "top": 35121,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.10. Mapping Types — <a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a><a class=\"headerlink\" href=\"#mapping-types-dict\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > h2:nth-of-type(1)",
      "text": [
        "4.10. Mapping Types — ",
        "dict",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 35184,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-43:nth-of-type(1)",
      "html": "A <a class=\"reference internal\" href=\"../glossary.html#term-mapping\"><em class=\"xref std std-term\">mapping</em></a> object maps <a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a> values to arbitrary objects.\nMappings are mutable objects.  There is currently only one standard mapping\ntype, the <em class=\"dfn\">dictionary</em>.  (For other containers see the built-in\n<a class=\"reference internal\" href=\"#list\" title=\"list\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt></a>, <a class=\"reference internal\" href=\"#set\" title=\"set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></tt></a>, and <a class=\"reference internal\" href=\"#tuple\" title=\"tuple\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></tt></a> classes, and the\n<a class=\"reference internal\" href=\"collections.html#module-collections\" title=\"collections: Container datatypes\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></tt></a> module.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > p#index-43:nth-of-type(1)",
      "text": [
        "A ",
        "mapping",
        " object maps ",
        "hashable",
        " values to arbitrary objects.\nMappings are mutable objects.  There is currently only one standard mapping\ntype, the ",
        "dictionary",
        ".  (For other containers see the built-in\n",
        "list",
        ", ",
        "set",
        ", and ",
        "tuple",
        " classes, and the\n",
        "collections",
        " module.)"
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 265,
        "top": 35244,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A dictionary’s keys are <em>almost</em> arbitrary values.  Values that are not\n<a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a>, that is, values containing lists, dictionaries or other\nmutable types (that are compared by value rather than by object identity) may\nnot be used as keys.  Numeric types used for keys obey the normal rules for\nnumeric comparison: if two numbers compare equal (such as <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">1.0</span></tt>)\nthen they can be used interchangeably to index the same dictionary entry.  (Note\nhowever, that since computers store floating-point numbers as approximations it\nis usually unwise to use them as dictionary keys.)",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > p:nth-of-type(2)",
      "text": [
        "A dictionary’s keys are ",
        "almost",
        " arbitrary values.  Values that are not\n",
        "hashable",
        ", that is, values containing lists, dictionaries or other\nmutable types (that are compared by value rather than by object identity) may\nnot be used as keys.  Numeric types used for keys obey the normal rules for\nnumeric comparison: if two numbers compare equal (such as ",
        "1",
        " and ",
        "1.0",
        ")\nthen they can be used interchangeably to index the same dictionary entry.  (Note\nhowever, that since computers store floating-point numbers as approximations it\nis usually unwise to use them as dictionary keys.)"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 35348,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Dictionaries can be created by placing a comma-separated list of <tt class=\"docutils literal\"><span class=\"pre\">key:</span> <span class=\"pre\">value</span></tt>\npairs within braces, for example: <tt class=\"docutils literal\"><span class=\"pre\">{'jack':</span> <span class=\"pre\">4098,</span> <span class=\"pre\">'sjoerd':</span> <span class=\"pre\">4127}</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">{4098:</span>\n<span class=\"pre\">'jack',</span> <span class=\"pre\">4127:</span> <span class=\"pre\">'sjoerd'}</span></tt>, or by the <a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a> constructor.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > p:nth-of-type(3)",
      "text": [
        "Dictionaries can be created by placing a comma-separated list of ",
        "key:",
        "value",
        "\npairs within braces, for example: ",
        "{'jack':",
        "4098,",
        "'sjoerd':",
        "4127}",
        " or ",
        "{4098:",
        "'jack',",
        "4127:",
        "'sjoerd'}",
        ", or by the ",
        "dict",
        " constructor."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 35408,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#dict:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">dict</tt><big>(</big><em>**kwarg</em><big>)</big><a class=\"headerlink\" href=\"#dict\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dt#dict:nth-of-type(1)",
      "text": [
        "class ",
        "dict",
        "(",
        "**kwarg",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 35433,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(2)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">dict</tt><big>(</big><em>mapping</em>, <em>**kwarg</em><big>)</big>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dt:nth-of-type(2)",
      "text": [
        "class ",
        "dict",
        "(",
        "mapping",
        ", ",
        "**kwarg",
        ")"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 35458,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(3)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descname\">dict</tt><big>(</big><em>iterable</em>, <em>**kwarg</em><big>)</big>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dt:nth-of-type(3)",
      "text": [
        "class ",
        "dict",
        "(",
        "iterable",
        ", ",
        "**kwarg",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 35486,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new dictionary initialized from an optional positional argument\nand a possibly empty set of keyword arguments.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new dictionary initialized from an optional positional argument\nand a possibly empty set of keyword arguments."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 35524,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If no positional argument is given, an empty dictionary is created.\nIf a positional argument is given and it is a mapping object, a dictionary\nis created with the same key-value pairs as the mapping object.  Otherwise,\nthe positional argument must be an <a class=\"reference internal\" href=\"../glossary.html#term-iterator\"><em class=\"xref std std-term\">iterator</em></a> object.  Each item in\nthe iterable must itself be an iterator with exactly two objects.  The\nfirst object of each item becomes a key in the new dictionary, and the\nsecond object the corresponding value.  If a key occurs more than once, the\nlast value for that key becomes the corresponding value in the new\ndictionary.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If no positional argument is given, an empty dictionary is created.\nIf a positional argument is given and it is a mapping object, a dictionary\nis created with the same key-value pairs as the mapping object.  Otherwise,\nthe positional argument must be an ",
        "iterator",
        " object.  Each item in\nthe iterable must itself be an iterator with exactly two objects.  The\nfirst object of each item becomes a key in the new dictionary, and the\nsecond object the corresponding value.  If a key occurs more than once, the\nlast value for that key becomes the corresponding value in the new\ndictionary."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 35628,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If keyword arguments are given, the keyword arguments and their values are\nadded to the dictionary created from the positional argument.  If a key\nbeing added is already present, the value from the keyword argument\nreplaces the value from the positional argument.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If keyword arguments are given, the keyword arguments and their values are\nadded to the dictionary created from the positional argument.  If a key\nbeing added is already present, the value from the keyword argument\nreplaces the value from the positional argument."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 35688,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "To illustrate, the following examples all return a dictionary equal to\n<tt class=\"docutils literal\"><span class=\"pre\">{\"one\":</span> <span class=\"pre\">1,</span> <span class=\"pre\">\"two\":</span> <span class=\"pre\">2,</span> <span class=\"pre\">\"three\":</span> <span class=\"pre\">3}</span></tt>:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "To illustrate, the following examples all return a dictionary equal to\n",
        "{\"one\":",
        "1,",
        "\"two\":",
        "2,",
        "\"three\":",
        "3}",
        ":"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 35726,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 138,
        "left": 295,
        "top": 35726,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">one</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">two</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">three</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'one'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s\">'two'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">([</span><span class=\"s\">'one'</span><span class=\"p\">,</span> <span class=\"s\">'two'</span><span class=\"p\">,</span> <span class=\"s\">'three'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">([(</span><span class=\"s\">'two'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">'one'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s\">'three'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">({</span><span class=\"s\">'three'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s\">'one'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s\">'two'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"n\">b</span> <span class=\"o\">==</span> <span class=\"n\">c</span> <span class=\"o\">==</span> <span class=\"n\">d</span> <span class=\"o\">==</span> <span class=\"n\">e</span>\n<span class=\"go\">True</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "a",
        "=",
        "dict",
        "(",
        "one",
        "=",
        "1",
        ",",
        "two",
        "=",
        "2",
        ",",
        "three",
        "=",
        "3",
        ")",
        ">>> ",
        "b",
        "=",
        "{",
        "'one'",
        ":",
        "1",
        ",",
        "'two'",
        ":",
        "2",
        ",",
        "'three'",
        ":",
        "3",
        "}",
        ">>> ",
        "c",
        "=",
        "dict",
        "(",
        "zip",
        "([",
        "'one'",
        ",",
        "'two'",
        ",",
        "'three'",
        "],",
        "[",
        "1",
        ",",
        "2",
        ",",
        "3",
        "]))",
        ">>> ",
        "d",
        "=",
        "dict",
        "([(",
        "'two'",
        ",",
        "2",
        "),",
        "(",
        "'one'",
        ",",
        "1",
        "),",
        "(",
        "'three'",
        ",",
        "3",
        ")])",
        ">>> ",
        "e",
        "=",
        "dict",
        "({",
        "'three'",
        ":",
        "3",
        ",",
        "'one'",
        ":",
        "1",
        ",",
        "'two'",
        ":",
        "2",
        "})",
        ">>> ",
        "a",
        "==",
        "b",
        "==",
        "c",
        "==",
        "d",
        "==",
        "e",
        "True"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 35879,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "Providing keyword arguments as in the first example only works for keys that\nare valid Python identifiers.  Otherwise, any valid keys can be used.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Providing keyword arguments as in the first example only works for keys that\nare valid Python identifiers.  Otherwise, any valid keys can be used."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 35917,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "These are the operations that dictionaries support (and therefore, custom\nmapping types should support too):",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "These are the operations that dictionaries support (and therefore, custom\nmapping types should support too):"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 35955,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">len(d)</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "len(d)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 35978,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the number of items in the dictionary <em>d</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the number of items in the dictionary ",
        "d",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 36016,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">d[key]</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dt:nth-of-type(1)",
      "text": [
        "d[key]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36039,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the item of <em>d</em> with key <em>key</em>.  Raises a <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> if <em>key</em> is\nnot in the map.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the item of ",
        "d",
        " with key ",
        "key",
        ".  Raises a ",
        "KeyError",
        " if ",
        "key",
        " is\nnot in the map."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 36077,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If a subclass of dict defines a method <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__missing__()</span></tt>, if the key <em>key</em>\nis not present, the <tt class=\"docutils literal\"><span class=\"pre\">d[key]</span></tt> operation calls that method with the key <em>key</em>\nas argument.  The <tt class=\"docutils literal\"><span class=\"pre\">d[key]</span></tt> operation then returns or raises whatever is\nreturned or raised by the <tt class=\"docutils literal\"><span class=\"pre\">__missing__(key)</span></tt> call if the key is not\npresent. No other operations or methods invoke <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__missing__()</span></tt>. If\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__missing__()</span></tt> is not defined, <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> is raised.\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__missing__()</span></tt> must be a method; it cannot be an instance variable:",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If a subclass of dict defines a method ",
        "__missing__()",
        ", if the key ",
        "key",
        "\nis not present, the ",
        "d[key]",
        " operation calls that method with the key ",
        "key",
        "\nas argument.  The ",
        "d[key]",
        " operation then returns or raises whatever is\nreturned or raised by the ",
        "__missing__(key)",
        " call if the key is not\npresent. No other operations or methods invoke ",
        "__missing__()",
        ". If\n",
        "__missing__()",
        " is not defined, ",
        "KeyError",
        " is raised.\n",
        "__missing__()",
        " must be a method; it cannot be an instance variable:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 36159,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 325,
        "top": 36159,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Counter</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__missing__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Counter</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s\">'red'</span><span class=\"p\">]</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s\">'red'</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s\">'red'</span><span class=\"p\">]</span>\n<span class=\"go\">1</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "class",
        "Counter",
        "(",
        "dict",
        "):",
        "... ",
        "def",
        "__missing__",
        "(",
        "self",
        ",",
        "key",
        "):",
        "... ",
        "return",
        "0",
        ">>> ",
        "c",
        "=",
        "Counter",
        "()",
        ">>> ",
        "c",
        "[",
        "'red'",
        "]",
        "0",
        ">>> ",
        "c",
        "[",
        "'red'",
        "]",
        "+=",
        "1",
        ">>> ",
        "c",
        "[",
        "'red'",
        "]",
        "1"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36348,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "See <a class=\"reference internal\" href=\"collections.html#collections.Counter\" title=\"collections.Counter\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">collections.Counter</span></tt></a> for a complete implementation including\nother methods helpful for accumulating and managing tallies.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "See ",
        "collections.Counter",
        " for a complete implementation including\nother methods helpful for accumulating and managing tallies."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 36386,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">d[key] = value</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(3) > dt:nth-of-type(1)",
      "text": [
        "d[key] = value"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36409,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Set <tt class=\"docutils literal\"><span class=\"pre\">d[key]</span></tt> to <em>value</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Set ",
        "d[key]",
        " to ",
        "value",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 36447,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">del d[key]</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(4) > dt:nth-of-type(1)",
      "text": [
        "del d[key]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36470,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Remove <tt class=\"docutils literal\"><span class=\"pre\">d[key]</span></tt> from <em>d</em>.  Raises a <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> if <em>key</em> is not in the\nmap.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Remove ",
        "d[key]",
        " from ",
        "d",
        ".  Raises a ",
        "KeyError",
        " if ",
        "key",
        " is not in the\nmap."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 36508,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">key in d</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(5) > dt:nth-of-type(1)",
      "text": [
        "key in d"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36531,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> if <em>d</em> has a key <em>key</em>, else <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return ",
        "True",
        " if ",
        "d",
        " has a key ",
        "key",
        ", else ",
        "False",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 36569,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">key not in d</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(6) > dt:nth-of-type(1)",
      "text": [
        "key not in d"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36592,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Equivalent to <tt class=\"docutils literal\"><span class=\"pre\">not</span> <span class=\"pre\">key</span> <span class=\"pre\">in</span> <span class=\"pre\">d</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Equivalent to ",
        "not",
        "key",
        "in",
        "d",
        "."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 295,
        "top": 36630,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">iter(d)</tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(7) > dt:nth-of-type(1)",
      "text": [
        "iter(d)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36653,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an iterator over the keys of the dictionary.  This is a shortcut\nfor <tt class=\"docutils literal\"><span class=\"pre\">iter(d.keys())</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.describe:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an iterator over the keys of the dictionary.  This is a shortcut\nfor ",
        "iter(d.keys())",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 36691,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.clear:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">clear</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#dict.clear\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dt#dict.clear:nth-of-type(1)",
      "text": [
        "clear",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36717,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Remove all items from the dictionary.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Remove all items from the dictionary."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 36755,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.copy:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">copy</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#dict.copy\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(9) > dt#dict.copy:nth-of-type(1)",
      "text": [
        "copy",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36781,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a shallow copy of the dictionary.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a shallow copy of the dictionary."
      ]
    },
    {
      "bound": {
        "height": 24,
        "left": 295,
        "top": 36819,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.fromkeys:nth-of-type(1)",
      "html": "\n<em class=\"property\">classmethod </em><tt class=\"descname\">fromkeys</tt><big>(</big><em>seq</em><span class=\"optional\">[</span>, <em>value</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#dict.fromkeys\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.classmethod:nth-of-type(10) > dt#dict.fromkeys:nth-of-type(1)",
      "text": [
        "classmethod ",
        "fromkeys",
        "(",
        "seq",
        "[",
        ", ",
        "value",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36846,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Create a new dictionary with keys from <em>seq</em> and values set to <em>value</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.classmethod:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Create a new dictionary with keys from ",
        "seq",
        " and values set to ",
        "value",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36884,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#dict.fromkeys\" title=\"dict.fromkeys\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromkeys()</span></tt></a> is a class method that returns a new dictionary. <em>value</em>\ndefaults to <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.classmethod:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "fromkeys()",
        " is a class method that returns a new dictionary. ",
        "value",
        "\ndefaults to ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 24,
        "left": 295,
        "top": 36922,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.get:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">get</tt><big>(</big><em>key</em><span class=\"optional\">[</span>, <em>default</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#dict.get\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(11) > dt#dict.get:nth-of-type(1)",
      "text": [
        "get",
        "(",
        "key",
        "[",
        ", ",
        "default",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 36949,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the value for <em>key</em> if <em>key</em> is in the dictionary, else <em>default</em>.\nIf <em>default</em> is not given, it defaults to <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, so that this method\nnever raises a <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(11) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the value for ",
        "key",
        " if ",
        "key",
        " is in the dictionary, else ",
        "default",
        ".\nIf ",
        "default",
        " is not given, it defaults to ",
        "None",
        ", so that this method\nnever raises a ",
        "KeyError",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 36987,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.items:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">items</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#dict.items\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(12) > dt#dict.items:nth-of-type(1)",
      "text": [
        "items",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37013,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new view of the dictionary’s items (<tt class=\"docutils literal\"><span class=\"pre\">(key,</span> <span class=\"pre\">value)</span></tt> pairs).\nSee the <a class=\"reference internal\" href=\"#dict-views\"><em>documentation of view objects</em></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(12) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new view of the dictionary’s items (",
        "(key,",
        "value)",
        " pairs).\nSee the ",
        "documentation of view objects",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 37051,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.keys:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">keys</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#dict.keys\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(13) > dt#dict.keys:nth-of-type(1)",
      "text": [
        "keys",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37077,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new view of the dictionary’s keys.  See the <a class=\"reference internal\" href=\"#dict-views\"><em>documentation\nof view objects</em></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(13) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new view of the dictionary’s keys.  See the ",
        "documentation\nof view objects",
        "."
      ]
    },
    {
      "bound": {
        "height": 24,
        "left": 295,
        "top": 37115,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.pop:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">pop</tt><big>(</big><em>key</em><span class=\"optional\">[</span>, <em>default</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#dict.pop\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(14) > dt#dict.pop:nth-of-type(1)",
      "text": [
        "pop",
        "(",
        "key",
        "[",
        ", ",
        "default",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37142,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "If <em>key</em> is in the dictionary, remove it and return its value, else return\n<em>default</em>.  If <em>default</em> is not given and <em>key</em> is not in the dictionary,\na <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a> is raised.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(14) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "If ",
        "key",
        " is in the dictionary, remove it and return its value, else return\n",
        "default",
        ".  If ",
        "default",
        " is not given and ",
        "key",
        " is not in the dictionary,\na ",
        "KeyError",
        " is raised."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 37180,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.popitem:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">popitem</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#dict.popitem\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(15) > dt#dict.popitem:nth-of-type(1)",
      "text": [
        "popitem",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37206,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Remove and return an arbitrary <tt class=\"docutils literal\"><span class=\"pre\">(key,</span> <span class=\"pre\">value)</span></tt> pair from the dictionary.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(15) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Remove and return an arbitrary ",
        "(key,",
        "value)",
        " pair from the dictionary."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37244,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#dict.popitem\" title=\"dict.popitem\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">popitem()</span></tt></a> is useful to destructively iterate over a dictionary, as\noften used in set algorithms.  If the dictionary is empty, calling\n<a class=\"reference internal\" href=\"#dict.popitem\" title=\"dict.popitem\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">popitem()</span></tt></a> raises a <a class=\"reference internal\" href=\"exceptions.html#KeyError\" title=\"KeyError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(15) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "popitem()",
        " is useful to destructively iterate over a dictionary, as\noften used in set algorithms.  If the dictionary is empty, calling\n",
        "popitem()",
        " raises a ",
        "KeyError",
        "."
      ]
    },
    {
      "bound": {
        "height": 24,
        "left": 295,
        "top": 37282,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.setdefault:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">setdefault</tt><big>(</big><em>key</em><span class=\"optional\">[</span>, <em>default</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#dict.setdefault\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(16) > dt#dict.setdefault:nth-of-type(1)",
      "text": [
        "setdefault",
        "(",
        "key",
        "[",
        ", ",
        "default",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37309,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "If <em>key</em> is in the dictionary, return its value.  If not, insert <em>key</em>\nwith a value of <em>default</em> and return <em>default</em>.  <em>default</em> defaults to\n<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(16) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "If ",
        "key",
        " is in the dictionary, return its value.  If not, insert ",
        "key",
        "\nwith a value of ",
        "default",
        " and return ",
        "default",
        ".  ",
        "default",
        " defaults to\n",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 24,
        "left": 295,
        "top": 37347,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.update:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">update</tt><big>(</big><span class=\"optional\">[</span><em>other</em><span class=\"optional\">]</span><big>)</big><a class=\"headerlink\" href=\"#dict.update\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(17) > dt#dict.update:nth-of-type(1)",
      "text": [
        "update",
        "(",
        "[",
        "other",
        "]",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37374,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Update the dictionary with the key/value pairs from <em>other</em>, overwriting\nexisting keys.  Return <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(17) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Update the dictionary with the key/value pairs from ",
        "other",
        ", overwriting\nexisting keys.  Return ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 37412,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#dict.update\" title=\"dict.update\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">update()</span></tt></a> accepts either another dictionary object or an iterable of\nkey/value pairs (as tuples or other iterables of length two).  If keyword\narguments are specified, the dictionary is then updated with those\nkey/value pairs: <tt class=\"docutils literal\"><span class=\"pre\">d.update(red=1,</span> <span class=\"pre\">blue=2)</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(17) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "update()",
        " accepts either another dictionary object or an iterable of\nkey/value pairs (as tuples or other iterables of length two).  If keyword\narguments are specified, the dictionary is then updated with those\nkey/value pairs: ",
        "d.update(red=1,",
        "blue=2)",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 37472,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#dict.values:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">values</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#dict.values\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(18) > dt#dict.values:nth-of-type(1)",
      "text": [
        "values",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 37498,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a new view of the dictionary’s values.  See the\n<a class=\"reference internal\" href=\"#dict-views\"><em>documentation of view objects</em></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(18) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a new view of the dictionary’s values.  See the\n",
        "documentation of view objects",
        "."
      ]
    },
    {
      "bound": {
        "height": 38,
        "left": 265,
        "top": 37536,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\"><a class=\"reference internal\" href=\"types.html#types.MappingProxyType\" title=\"types.MappingProxyType\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">types.MappingProxyType</span></tt></a> can be used to create a read-only view\nof a <a class=\"reference internal\" href=\"#dict\" title=\"dict\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt></a>.</p>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "text": [
        "See also",
        "types.MappingProxyType",
        " can be used to create a read-only view\nof a ",
        "dict",
        "."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 37584,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.10.1. Dictionary view objects<a class=\"headerlink\" href=\"#dictionary-view-objects\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > h3:nth-of-type(1)",
      "text": [
        "4.10.1. Dictionary view objects",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 37639,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The objects returned by <a class=\"reference internal\" href=\"#dict.keys\" title=\"dict.keys\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">dict.keys()</span></tt></a>, <a class=\"reference internal\" href=\"#dict.values\" title=\"dict.values\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">dict.values()</span></tt></a> and\n<a class=\"reference internal\" href=\"#dict.items\" title=\"dict.items\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">dict.items()</span></tt></a> are <em>view objects</em>.  They provide a dynamic view on the\ndictionary’s entries, which means that when the dictionary changes, the view\nreflects these changes.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > p:nth-of-type(1)",
      "text": [
        "The objects returned by ",
        "dict.keys()",
        ", ",
        "dict.values()",
        " and\n",
        "dict.items()",
        " are ",
        "view objects",
        ".  They provide a dynamic view on the\ndictionary’s entries, which means that when the dictionary changes, the view\nreflects these changes."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 37699,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Dictionary views can be iterated over to yield their respective data, and\nsupport membership tests:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "Dictionary views can be iterated over to yield their respective data, and\nsupport membership tests:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 37737,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">len(dictview)</tt>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "len(dictview)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 37765,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return the number of entries in the dictionary.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return the number of entries in the dictionary."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 37803,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">iter(dictview)</tt>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(2) > dt:nth-of-type(1)",
      "text": [
        "iter(dictview)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 37831,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an iterator over the keys, values or items (represented as tuples of\n<tt class=\"docutils literal\"><span class=\"pre\">(key,</span> <span class=\"pre\">value)</span></tt>) in the dictionary.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an iterator over the keys, values or items (represented as tuples of\n",
        "(key,",
        "value)",
        ") in the dictionary."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 37869,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Keys and values are iterated over in an arbitrary order which is non-random,\nvaries across Python implementations, and depends on the dictionary’s history\nof insertions and deletions. If keys, values and items views are iterated\nover with no intervening modifications to the dictionary, the order of items\nwill directly correspond.  This allows the creation of <tt class=\"docutils literal\"><span class=\"pre\">(value,</span> <span class=\"pre\">key)</span></tt> pairs\nusing <a class=\"reference internal\" href=\"functions.html#zip\" title=\"zip\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">zip()</span></tt></a>: <tt class=\"docutils literal\"><span class=\"pre\">pairs</span> <span class=\"pre\">=</span> <span class=\"pre\">zip(d.values(),</span> <span class=\"pre\">d.keys())</span></tt>.  Another way to\ncreate the same list is <tt class=\"docutils literal\"><span class=\"pre\">pairs</span> <span class=\"pre\">=</span> <span class=\"pre\">[(v,</span> <span class=\"pre\">k)</span> <span class=\"pre\">for</span> <span class=\"pre\">(k,</span> <span class=\"pre\">v)</span> <span class=\"pre\">in</span> <span class=\"pre\">d.items()]</span></tt>.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Keys and values are iterated over in an arbitrary order which is non-random,\nvaries across Python implementations, and depends on the dictionary’s history\nof insertions and deletions. If keys, values and items views are iterated\nover with no intervening modifications to the dictionary, the order of items\nwill directly correspond.  This allows the creation of ",
        "(value,",
        "key)",
        " pairs\nusing ",
        "zip()",
        ": ",
        "pairs",
        "=",
        "zip(d.values(),",
        "d.keys())",
        ".  Another way to\ncreate the same list is ",
        "pairs",
        "=",
        "[(v,",
        "k)",
        "for",
        "(k,",
        "v)",
        "in",
        "d.items()]",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 37951,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Iterating views while adding or deleting entries in the dictionary may raise\na <a class=\"reference internal\" href=\"exceptions.html#RuntimeError\" title=\"RuntimeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">RuntimeError</span></tt></a> or fail to iterate over all entries.",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Iterating views while adding or deleting entries in the dictionary may raise\na ",
        "RuntimeError",
        " or fail to iterate over all entries."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 37989,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">x in dictview</tt>",
      "path": "div > div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(3) > dt:nth-of-type(1)",
      "text": [
        "x in dictview"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 38017,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> if <em>x</em> is in the underlying dictionary’s keys, values or\nitems (in the latter case, <em>x</em> should be a <tt class=\"docutils literal\"><span class=\"pre\">(key,</span> <span class=\"pre\">value)</span></tt> tuple).",
      "path": "div > div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > dl.describe:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return ",
        "True",
        " if ",
        "x",
        " is in the underlying dictionary’s keys, values or\nitems (in the latter case, ",
        "x",
        " should be a ",
        "(key,",
        "value)",
        " tuple)."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 38055,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Keys views are set-like since their entries are unique and hashable.  If all\nvalues are hashable, so that <tt class=\"docutils literal\"><span class=\"pre\">(key,</span> <span class=\"pre\">value)</span></tt> pairs are unique and hashable,\nthen the items view is also set-like.  (Values views are not treated as set-like\nsince the entries are generally not unique.)  For set-like views, all of the\noperations defined for the abstract base class <a class=\"reference internal\" href=\"collections.abc.html#collections.abc.Set\" title=\"collections.abc.Set\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">collections.abc.Set</span></tt></a> are\navailable (for example, <tt class=\"docutils literal\"><span class=\"pre\">==</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">&lt;</span></tt>, or <tt class=\"docutils literal\"><span class=\"pre\">^</span></tt>).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > p:nth-of-type(3)",
      "text": [
        "Keys views are set-like since their entries are unique and hashable.  If all\nvalues are hashable, so that ",
        "(key,",
        "value)",
        " pairs are unique and hashable,\nthen the items view is also set-like.  (Values views are not treated as set-like\nsince the entries are generally not unique.)  For set-like views, all of the\noperations defined for the abstract base class ",
        "collections.abc.Set",
        " are\navailable (for example, ",
        "==",
        ", ",
        "<",
        ", or ",
        "^",
        ")."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 38137,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "An example of dictionary view usage:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > p:nth-of-type(4)",
      "text": [
        "An example of dictionary view usage:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 38175,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 516,
        "left": 265,
        "top": 38175,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dishes</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'eggs'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s\">'sausage'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s\">'bacon'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s\">'spam'</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"n\">dishes</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"n\">dishes</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># iteration</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">n</span> <span class=\"o\">+=</span> <span class=\"n\">val</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"go\">504</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># keys and values are iterated over in the same order</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n<span class=\"go\">['eggs', 'bacon', 'sausage', 'spam']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span>\n<span class=\"go\">[2, 1, 1, 500]</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># view objects are dynamic and reflect dict changes</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">del</span> <span class=\"n\">dishes</span><span class=\"p\">[</span><span class=\"s\">'eggs'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">del</span> <span class=\"n\">dishes</span><span class=\"p\">[</span><span class=\"s\">'sausage'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">keys</span><span class=\"p\">)</span>\n<span class=\"go\">['spam', 'bacon']</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># set operations</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">keys</span> <span class=\"o\">&amp;</span> <span class=\"p\">{</span><span class=\"s\">'eggs'</span><span class=\"p\">,</span> <span class=\"s\">'bacon'</span><span class=\"p\">,</span> <span class=\"s\">'salad'</span><span class=\"p\">}</span>\n<span class=\"go\">{'bacon'}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">keys</span> <span class=\"o\">^</span> <span class=\"p\">{</span><span class=\"s\">'sausage'</span><span class=\"p\">,</span> <span class=\"s\">'juice'</span><span class=\"p\">}</span>\n<span class=\"go\">{'juice', 'sausage', 'bacon', 'spam'}</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#mapping-types-dict.section:nth-of-type(10) > div#dictionary-view-objects.section:nth-of-type(2) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "dishes",
        "=",
        "{",
        "'eggs'",
        ":",
        "2",
        ",",
        "'sausage'",
        ":",
        "1",
        ",",
        "'bacon'",
        ":",
        "1",
        ",",
        "'spam'",
        ":",
        "500",
        "}",
        ">>> ",
        "keys",
        "=",
        "dishes",
        ".",
        "keys",
        "()",
        ">>> ",
        "values",
        "=",
        "dishes",
        ".",
        "values",
        "()",
        ">>> ",
        "# iteration",
        ">>> ",
        "n",
        "=",
        "0",
        ">>> ",
        "for",
        "val",
        "in",
        "values",
        ":",
        "... ",
        "n",
        "+=",
        "val",
        ">>> ",
        "print",
        "(",
        "n",
        ")",
        "504",
        ">>> ",
        "# keys and values are iterated over in the same order",
        ">>> ",
        "list",
        "(",
        "keys",
        ")",
        "['eggs', 'bacon', 'sausage', 'spam']",
        ">>> ",
        "list",
        "(",
        "values",
        ")",
        "[2, 1, 1, 500]",
        ">>> ",
        "# view objects are dynamic and reflect dict changes",
        ">>> ",
        "del",
        "dishes",
        "[",
        "'eggs'",
        "]",
        ">>> ",
        "del",
        "dishes",
        "[",
        "'sausage'",
        "]",
        ">>> ",
        "list",
        "(",
        "keys",
        ")",
        "['spam', 'bacon']",
        ">>> ",
        "# set operations",
        ">>> ",
        "keys",
        "&",
        "{",
        "'eggs'",
        ",",
        "'bacon'",
        ",",
        "'salad'",
        "}",
        "{'bacon'}",
        ">>> ",
        "keys",
        "^",
        "{",
        "'sausage'",
        ",",
        "'juice'",
        "}",
        "{'juice', 'sausage', 'bacon', 'spam'}"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 38706,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.11. Context Manager Types<a class=\"headerlink\" href=\"#context-manager-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > h2:nth-of-type(1)",
      "text": [
        "4.11. Context Manager Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 38768,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-44:nth-of-type(1)",
      "html": "Python’s <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement supports the concept of a runtime context\ndefined by a context manager.  This is implemented using a pair of methods\nthat allow user-defined classes to define a runtime context that is entered\nbefore the statement body is executed and exited when the statement ends:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > p#index-44:nth-of-type(1)",
      "text": [
        "Python’s ",
        "with",
        " statement supports the concept of a runtime context\ndefined by a context manager.  This is implemented using a pair of methods\nthat allow user-defined classes to define a runtime context that is entered\nbefore the statement body is executed and exited when the statement ends:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 38828,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#contextmanager.__enter__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">contextmanager.</tt><tt class=\"descname\">__enter__</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#contextmanager.__enter__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(1) > dt#contextmanager.__enter__:nth-of-type(1)",
      "text": [
        "contextmanager.",
        "__enter__",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 38856,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Enter the runtime context and return either this object or another object\nrelated to the runtime context. The value returned by this method is bound to\nthe identifier in the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#as\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">as</span></tt></a> clause of <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statements using\nthis context manager.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Enter the runtime context and return either this object or another object\nrelated to the runtime context. The value returned by this method is bound to\nthe identifier in the ",
        "as",
        " clause of ",
        "with",
        " statements using\nthis context manager."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 38916,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "An example of a context manager that returns itself is a <a class=\"reference internal\" href=\"../glossary.html#term-file-object\"><em class=\"xref std std-term\">file object</em></a>.\nFile objects return themselves from __enter__() to allow <a class=\"reference internal\" href=\"functions.html#open\" title=\"open\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></tt></a> to be\nused as the context expression in a <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "An example of a context manager that returns itself is a ",
        "file object",
        ".\nFile objects return themselves from __enter__() to allow ",
        "open()",
        " to be\nused as the context expression in a ",
        "with",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 38976,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "An example of a context manager that returns a related object is the one\nreturned by <a class=\"reference internal\" href=\"decimal.html#decimal.localcontext\" title=\"decimal.localcontext\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">decimal.localcontext()</span></tt></a>. These managers set the active\ndecimal context to a copy of the original decimal context and then return the\ncopy. This allows changes to be made to the current decimal context in the body\nof the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement without affecting code outside the\n<a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "An example of a context manager that returns a related object is the one\nreturned by ",
        "decimal.localcontext()",
        ". These managers set the active\ndecimal context to a copy of the original decimal context and then return the\ncopy. This allows changes to be made to the current decimal context in the body\nof the ",
        "with",
        " statement without affecting code outside the\n",
        "with",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 39058,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#contextmanager.__exit__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">contextmanager.</tt><tt class=\"descname\">__exit__</tt><big>(</big><em>exc_type</em>, <em>exc_val</em>, <em>exc_tb</em><big>)</big><a class=\"headerlink\" href=\"#contextmanager.__exit__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(2) > dt#contextmanager.__exit__:nth-of-type(1)",
      "text": [
        "contextmanager.",
        "__exit__",
        "(",
        "exc_type",
        ", ",
        "exc_val",
        ", ",
        "exc_tb",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 39086,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Exit the runtime context and return a Boolean flag indicating if any exception\nthat occurred should be suppressed. If an exception occurred while executing the\nbody of the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement, the arguments contain the exception type,\nvalue and traceback information. Otherwise, all three arguments are <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Exit the runtime context and return a Boolean flag indicating if any exception\nthat occurred should be suppressed. If an exception occurred while executing the\nbody of the ",
        "with",
        " statement, the arguments contain the exception type,\nvalue and traceback information. Otherwise, all three arguments are ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 39146,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Returning a true value from this method will cause the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement\nto suppress the exception and continue execution with the statement immediately\nfollowing the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement. Otherwise the exception continues\npropagating after this method has finished executing. Exceptions that occur\nduring execution of this method will replace any exception that occurred in the\nbody of the <a class=\"reference internal\" href=\"../reference/compound_stmts.html#with\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">with</span></tt></a> statement.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Returning a true value from this method will cause the ",
        "with",
        " statement\nto suppress the exception and continue execution with the statement immediately\nfollowing the ",
        "with",
        " statement. Otherwise the exception continues\npropagating after this method has finished executing. Exceptions that occur\nduring execution of this method will replace any exception that occurred in the\nbody of the ",
        "with",
        " statement."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 39228,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The exception passed in should never be reraised explicitly - instead, this\nmethod should return a false value to indicate that the method completed\nsuccessfully and does not want to suppress the raised exception. This allows\ncontext management code (such as <tt class=\"docutils literal\"><span class=\"pre\">contextlib.nested</span></tt>) to easily detect whether\nor not an <a class=\"reference internal\" href=\"#contextmanager.__exit__\" title=\"contextmanager.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a> method has actually failed.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The exception passed in should never be reraised explicitly - instead, this\nmethod should return a false value to indicate that the method completed\nsuccessfully and does not want to suppress the raised exception. This allows\ncontext management code (such as ",
        "contextlib.nested",
        ") to easily detect whether\nor not an ",
        "__exit__()",
        " method has actually failed."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 39310,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Python defines several context managers to support easy thread synchronisation,\nprompt closure of files or other objects, and simpler manipulation of the active\ndecimal arithmetic context. The specific types are not treated specially beyond\ntheir implementation of the context management protocol. See the\n<a class=\"reference internal\" href=\"contextlib.html#module-contextlib\" title=\"contextlib: Utilities for with-statement contexts.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">contextlib</span></tt></a> module for some examples.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > p:nth-of-type(2)",
      "text": [
        "Python defines several context managers to support easy thread synchronisation,\nprompt closure of files or other objects, and simpler manipulation of the active\ndecimal arithmetic context. The specific types are not treated specially beyond\ntheir implementation of the context management protocol. See the\n",
        "contextlib",
        " module for some examples."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 39392,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Python’s <a class=\"reference internal\" href=\"../glossary.html#term-generator\"><em class=\"xref std std-term\">generator</em></a>s and the <a class=\"reference internal\" href=\"contextlib.html#contextlib.contextmanager\" title=\"contextlib.contextmanager\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">contextlib.contextmanager</span></tt></a> decorator\nprovide a convenient way to implement these protocols.  If a generator function is\ndecorated with the <a class=\"reference internal\" href=\"contextlib.html#contextlib.contextmanager\" title=\"contextlib.contextmanager\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">contextlib.contextmanager</span></tt></a> decorator, it will return a\ncontext manager implementing the necessary <a class=\"reference internal\" href=\"../reference/datamodel.html#object.__enter__\" title=\"object.__enter__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__enter__()</span></tt></a> and\n<a class=\"reference internal\" href=\"../reference/datamodel.html#object.__exit__\" title=\"object.__exit__\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">__exit__()</span></tt></a> methods, rather than the iterator produced by an undecorated\ngenerator function.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > p:nth-of-type(3)",
      "text": [
        "Python’s ",
        "generator",
        "s and the ",
        "contextlib.contextmanager",
        " decorator\nprovide a convenient way to implement these protocols.  If a generator function is\ndecorated with the ",
        "contextlib.contextmanager",
        " decorator, it will return a\ncontext manager implementing the necessary ",
        "__enter__()",
        " and\n",
        "__exit__()",
        " methods, rather than the iterator produced by an undecorated\ngenerator function."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 39474,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Note that there is no specific slot for any of these methods in the type\nstructure for Python objects in the Python/C API. Extension types wanting to\ndefine these methods must provide them as a normal Python accessible method.\nCompared to the overhead of setting up the runtime context, the overhead of a\nsingle class dictionary lookup is negligible.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#context-manager-types.section:nth-of-type(11) > p:nth-of-type(4)",
      "text": [
        "Note that there is no specific slot for any of these methods in the type\nstructure for Python objects in the Python/C API. Extension types wanting to\ndefine these methods must provide them as a normal Python accessible method.\nCompared to the overhead of setting up the runtime context, the overhead of a\nsingle class dictionary lookup is negligible."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 39556,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.12. Other Built-in Types<a class=\"headerlink\" href=\"#other-built-in-types\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > h2:nth-of-type(1)",
      "text": [
        "4.12. Other Built-in Types",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 39618,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The interpreter supports several other kinds of objects. Most of these support\nonly one or two operations.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > p:nth-of-type(1)",
      "text": [
        "The interpreter supports several other kinds of objects. Most of these support\nonly one or two operations."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 39656,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.1. Modules<a class=\"headerlink\" href=\"#modules\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#modules.section:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "4.12.1. Modules",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 39711,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The only special operation on a module is attribute access: <tt class=\"docutils literal\"><span class=\"pre\">m.name</span></tt>, where\n<em>m</em> is a module and <em>name</em> accesses a name defined in <em>m</em>‘s symbol table.\nModule attributes can be assigned to.  (Note that the <a class=\"reference internal\" href=\"../reference/simple_stmts.html#import\"><tt class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></tt></a>\nstatement is not, strictly speaking, an operation on a module object; <tt class=\"docutils literal\"><span class=\"pre\">import</span>\n<span class=\"pre\">foo</span></tt> does not require a module object named <em>foo</em> to exist, rather it requires\nan (external) <em>definition</em> for a module named <em>foo</em> somewhere.)",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#modules.section:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The only special operation on a module is attribute access: ",
        "m.name",
        ", where\n",
        "m",
        " is a module and ",
        "name",
        " accesses a name defined in ",
        "m",
        "‘s symbol table.\nModule attributes can be assigned to.  (Note that the ",
        "import",
        "\nstatement is not, strictly speaking, an operation on a module object; ",
        "import",
        "foo",
        " does not require a module object named ",
        "foo",
        " to exist, rather it requires\nan (external) ",
        "definition",
        " for a module named ",
        "foo",
        " somewhere.)"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 39793,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "A special attribute of every module is <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt>. This is the dictionary\ncontaining the module’s symbol table. Modifying this dictionary will actually\nchange the module’s symbol table, but direct assignment to the <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt>\nattribute is not possible (you can write <tt class=\"docutils literal\"><span class=\"pre\">m.__dict__['a']</span> <span class=\"pre\">=</span> <span class=\"pre\">1</span></tt>, which defines\n<tt class=\"docutils literal\"><span class=\"pre\">m.a</span></tt> to be <tt class=\"docutils literal\"><span class=\"pre\">1</span></tt>, but you can’t write <tt class=\"docutils literal\"><span class=\"pre\">m.__dict__</span> <span class=\"pre\">=</span> <span class=\"pre\">{}</span></tt>).  Modifying\n<tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></tt> directly is not recommended.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#modules.section:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "A special attribute of every module is ",
        "__dict__",
        ". This is the dictionary\ncontaining the module’s symbol table. Modifying this dictionary will actually\nchange the module’s symbol table, but direct assignment to the ",
        "__dict__",
        "\nattribute is not possible (you can write ",
        "m.__dict__['a']",
        "=",
        "1",
        ", which defines\n",
        "m.a",
        " to be ",
        "1",
        ", but you can’t write ",
        "m.__dict__",
        "=",
        "{}",
        ").  Modifying\n",
        "__dict__",
        " directly is not recommended."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 39875,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Modules built into the interpreter are written like this: <tt class=\"docutils literal\"><span class=\"pre\">&lt;module</span> <span class=\"pre\">'sys'</span>\n<span class=\"pre\">(built-in)&gt;</span></tt>.  If loaded from a file, they are written as <tt class=\"docutils literal\"><span class=\"pre\">&lt;module</span> <span class=\"pre\">'os'</span> <span class=\"pre\">from</span>\n<span class=\"pre\">'/usr/local/lib/pythonX.Y/os.pyc'&gt;</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#modules.section:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Modules built into the interpreter are written like this: ",
        "<module",
        "'sys'",
        "(built-in)>",
        ".  If loaded from a file, they are written as ",
        "<module",
        "'os'",
        "from",
        "'/usr/local/lib/pythonX.Y/os.pyc'>",
        "."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 39913,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.2. Classes and Class Instances<a class=\"headerlink\" href=\"#classes-and-class-instances\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#classes-and-class-instances.section:nth-of-type(2) > h3:nth-of-type(1)",
      "text": [
        "4.12.2. Classes and Class Instances",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 39968,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "See <a class=\"reference internal\" href=\"../reference/datamodel.html#objects\"><em>Objects, values and types</em></a> and <a class=\"reference internal\" href=\"../reference/compound_stmts.html#class\"><em>Class definitions</em></a> for these.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#classes-and-class-instances.section:nth-of-type(2) > p:nth-of-type(1)",
      "text": [
        "See ",
        "Objects, values and types",
        " and ",
        "Class definitions",
        " for these."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 40006,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.3. Functions<a class=\"headerlink\" href=\"#functions\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#functions.section:nth-of-type(3) > h3:nth-of-type(1)",
      "text": [
        "4.12.3. Functions",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 40061,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Function objects are created by function definitions.  The only operation on a\nfunction object is to call it: <tt class=\"docutils literal\"><span class=\"pre\">func(argument-list)</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#functions.section:nth-of-type(3) > p:nth-of-type(1)",
      "text": [
        "Function objects are created by function definitions.  The only operation on a\nfunction object is to call it: ",
        "func(argument-list)",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 40099,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "There are really two flavors of function objects: built-in functions and\nuser-defined functions.  Both support the same operation (to call the function),\nbut the implementation is different, hence the different object types.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#functions.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "There are really two flavors of function objects: built-in functions and\nuser-defined functions.  Both support the same operation (to call the function),\nbut the implementation is different, hence the different object types."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 40159,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "See <a class=\"reference internal\" href=\"../reference/compound_stmts.html#function\"><em>Function definitions</em></a> for more information.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#functions.section:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "See ",
        "Function definitions",
        " for more information."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 40197,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.4. Methods<a class=\"headerlink\" href=\"#methods\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#methods.section:nth-of-type(4) > h3:nth-of-type(1)",
      "text": [
        "4.12.4. Methods",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 40252,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-45:nth-of-type(1)",
      "html": "Methods are functions that are called using the attribute notation. There are\ntwo flavors: built-in methods (such as <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">append()</span></tt> on lists) and class\ninstance methods.  Built-in methods are described with the types that support\nthem.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#methods.section:nth-of-type(4) > p#index-45:nth-of-type(1)",
      "text": [
        "Methods are functions that are called using the attribute notation. There are\ntwo flavors: built-in methods (such as ",
        "append()",
        " on lists) and class\ninstance methods.  Built-in methods are described with the types that support\nthem."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 40312,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If you access a method (a function defined in a class namespace) through an\ninstance, you get a special object: a <em class=\"dfn\">bound method</em> (also called\n<em class=\"dfn\">instance method</em>) object. When called, it will add the <tt class=\"docutils literal\"><span class=\"pre\">self</span></tt> argument\nto the argument list.  Bound methods have two special read-only attributes:\n<tt class=\"docutils literal\"><span class=\"pre\">m.__self__</span></tt> is the object on which the method operates, and <tt class=\"docutils literal\"><span class=\"pre\">m.__func__</span></tt> is\nthe function implementing the method.  Calling <tt class=\"docutils literal\"><span class=\"pre\">m(arg-1,</span> <span class=\"pre\">arg-2,</span> <span class=\"pre\">...,</span> <span class=\"pre\">arg-n)</span></tt>\nis completely equivalent to calling <tt class=\"docutils literal\"><span class=\"pre\">m.__func__(m.__self__,</span> <span class=\"pre\">arg-1,</span> <span class=\"pre\">arg-2,</span> <span class=\"pre\">...,</span>\n<span class=\"pre\">arg-n)</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#methods.section:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "If you access a method (a function defined in a class namespace) through an\ninstance, you get a special object: a ",
        "bound method",
        " (also called\n",
        "instance method",
        ") object. When called, it will add the ",
        "self",
        " argument\nto the argument list.  Bound methods have two special read-only attributes:\n",
        "m.__self__",
        " is the object on which the method operates, and ",
        "m.__func__",
        " is\nthe function implementing the method.  Calling ",
        "m(arg-1,",
        "arg-2,",
        "...,",
        "arg-n)",
        "\nis completely equivalent to calling ",
        "m.__func__(m.__self__,",
        "arg-1,",
        "arg-2,",
        "...,",
        "arg-n)",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 40394,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Like function objects, bound method objects support getting arbitrary\nattributes.  However, since method attributes are actually stored on the\nunderlying function object (<tt class=\"docutils literal\"><span class=\"pre\">meth.__func__</span></tt>), setting method attributes on\nbound methods is disallowed.  Attempting to set an attribute on a method\nresults in an <a class=\"reference internal\" href=\"exceptions.html#AttributeError\" title=\"AttributeError\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">AttributeError</span></tt></a> being raised.  In order to set a method\nattribute, you need to explicitly set it on the underlying function object:",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#methods.section:nth-of-type(4) > p:nth-of-type(3)",
      "text": [
        "Like function objects, bound method objects support getting arbitrary\nattributes.  However, since method attributes are actually stored on the\nunderlying function object (",
        "meth.__func__",
        "), setting method attributes on\nbound methods is disallowed.  Attempting to set an attribute on a method\nresults in an ",
        "AttributeError",
        " being raised.  In order to set a method\nattribute, you need to explicitly set it on the underlying function object:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 40476,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#methods.section:nth-of-type(4) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 265,
        "top": 40476,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">pass</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">C</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"n\">whoami</span> <span class=\"o\">=</span> <span class=\"s\">'my name is method'</span>  <span class=\"c\"># can't set on the method</span>\n<span class=\"gt\">Traceback (most recent call last):</span><span>\n  File </span><span class=\"nb\">\"&lt;stdin&gt;\"</span><span>, line </span><span class=\"m\">1</span><span>, in </span><span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">AttributeError</span><span>: </span><span class=\"n\">'method' object has no attribute 'whoami'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"n\">__func__</span><span class=\"o\">.</span><span class=\"n\">whoami</span> <span class=\"o\">=</span> <span class=\"s\">'my name is method'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"n\">whoami</span>\n<span class=\"go\">'my name is method'</span>\n",
      "path": "div > div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#methods.section:nth-of-type(4) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "class",
        "C",
        ":",
        "... ",
        "def",
        "method",
        "(",
        "self",
        "):",
        "... ",
        "pass",
        "...",
        ">>> ",
        "c",
        "=",
        "C",
        "()",
        ">>> ",
        "c",
        ".",
        "method",
        ".",
        "whoami",
        "=",
        "'my name is method'",
        "# can't set on the method",
        "Traceback (most recent call last):",
        "\n  File ",
        "\"<stdin>\"",
        ", line ",
        "1",
        ", in ",
        "<module>",
        "AttributeError",
        ": ",
        "'method' object has no attribute 'whoami'",
        ">>> ",
        "c",
        ".",
        "method",
        ".",
        "__func__",
        ".",
        "whoami",
        "=",
        "'my name is method'",
        ">>> ",
        "c",
        ".",
        "method",
        ".",
        "whoami",
        "'my name is method'"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 40720,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "See <a class=\"reference internal\" href=\"../reference/datamodel.html#types\"><em>The standard type hierarchy</em></a> for more information.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#methods.section:nth-of-type(4) > p:nth-of-type(4)",
      "text": [
        "See ",
        "The standard type hierarchy",
        " for more information."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 40758,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.5. Code Objects<a class=\"headerlink\" href=\"#code-objects\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#code-objects.section:nth-of-type(5) > h3:nth-of-type(1)",
      "text": [
        "4.12.5. Code Objects",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 40813,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-47:nth-of-type(1)",
      "html": "Code objects are used by the implementation to represent “pseudo-compiled”\nexecutable Python code such as a function body. They differ from function\nobjects because they don’t contain a reference to their global execution\nenvironment.  Code objects are returned by the built-in <a class=\"reference internal\" href=\"functions.html#compile\" title=\"compile\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></tt></a> function\nand can be extracted from function objects through their <tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__code__</span></tt>\nattribute. See also the <a class=\"reference internal\" href=\"code.html#module-code\" title=\"code: Facilities to implement read-eval-print loops.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">code</span></tt></a> module.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#code-objects.section:nth-of-type(5) > p#index-47:nth-of-type(1)",
      "text": [
        "Code objects are used by the implementation to represent “pseudo-compiled”\nexecutable Python code such as a function body. They differ from function\nobjects because they don’t contain a reference to their global execution\nenvironment.  Code objects are returned by the built-in ",
        "compile()",
        " function\nand can be extracted from function objects through their ",
        "__code__",
        "\nattribute. See also the ",
        "code",
        " module."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 40895,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-48:nth-of-type(2)",
      "html": "A code object can be executed or evaluated by passing it (instead of a source\nstring) to the <a class=\"reference internal\" href=\"functions.html#exec\" title=\"exec\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></tt></a> or <a class=\"reference internal\" href=\"functions.html#eval\" title=\"eval\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></tt></a>  built-in functions.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#code-objects.section:nth-of-type(5) > p#index-48:nth-of-type(2)",
      "text": [
        "A code object can be executed or evaluated by passing it (instead of a source\nstring) to the ",
        "exec()",
        " or ",
        "eval()",
        "  built-in functions."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 40933,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "See <a class=\"reference internal\" href=\"../reference/datamodel.html#types\"><em>The standard type hierarchy</em></a> for more information.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#code-objects.section:nth-of-type(5) > p:nth-of-type(3)",
      "text": [
        "See ",
        "The standard type hierarchy",
        " for more information."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 40971,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.6. Type Objects<a class=\"headerlink\" href=\"#type-objects\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#type-objects.section:nth-of-type(6) > h3:nth-of-type(1)",
      "text": [
        "4.12.6. Type Objects",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 41026,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-49:nth-of-type(1)",
      "html": "Type objects represent the various object types.  An object’s type is accessed\nby the built-in function <a class=\"reference internal\" href=\"functions.html#type\" title=\"type\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">type()</span></tt></a>.  There are no special operations on\ntypes.  The standard module <a class=\"reference internal\" href=\"types.html#module-types\" title=\"types: Names for built-in types.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">types</span></tt></a> defines names for all standard built-in\ntypes.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#type-objects.section:nth-of-type(6) > p#index-49:nth-of-type(1)",
      "text": [
        "Type objects represent the various object types.  An object’s type is accessed\nby the built-in function ",
        "type()",
        ".  There are no special operations on\ntypes.  The standard module ",
        "types",
        " defines names for all standard built-in\ntypes."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 41086,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Types are written like this: <tt class=\"docutils literal\"><span class=\"pre\">&lt;class</span> <span class=\"pre\">'int'&gt;</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#type-objects.section:nth-of-type(6) > p:nth-of-type(2)",
      "text": [
        "Types are written like this: ",
        "<class",
        "'int'>",
        "."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 41124,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.7. The Null Object<a class=\"headerlink\" href=\"#the-null-object\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-null-object.section:nth-of-type(7) > h3:nth-of-type(1)",
      "text": [
        "4.12.7. The Null Object",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 41179,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This object is returned by functions that don’t explicitly return a value.  It\nsupports no special operations.  There is exactly one null object, named\n<tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> (a built-in name).  <tt class=\"docutils literal\"><span class=\"pre\">type(None)()</span></tt> produces the same singleton.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-null-object.section:nth-of-type(7) > p:nth-of-type(1)",
      "text": [
        "This object is returned by functions that don’t explicitly return a value.  It\nsupports no special operations.  There is exactly one null object, named\n",
        "None",
        " (a built-in name).  ",
        "type(None)()",
        " produces the same singleton."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 41239,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "It is written as <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-null-object.section:nth-of-type(7) > p:nth-of-type(2)",
      "text": [
        "It is written as ",
        "None",
        "."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 41277,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.8. The Ellipsis Object<a class=\"headerlink\" href=\"#the-ellipsis-object\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-ellipsis-object.section:nth-of-type(8) > h3:nth-of-type(1)",
      "text": [
        "4.12.8. The Ellipsis Object",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 41332,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This object is commonly used by slicing (see <a class=\"reference internal\" href=\"../reference/expressions.html#slicings\"><em>Slicings</em></a>).  It supports no\nspecial operations.  There is exactly one ellipsis object, named\n<a class=\"reference internal\" href=\"constants.html#Ellipsis\" title=\"Ellipsis\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">Ellipsis</span></tt></a> (a built-in name).  <tt class=\"docutils literal\"><span class=\"pre\">type(Ellipsis)()</span></tt> produces the\n<a class=\"reference internal\" href=\"constants.html#Ellipsis\" title=\"Ellipsis\"><tt class=\"xref py py-const docutils literal\"><span class=\"pre\">Ellipsis</span></tt></a> singleton.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-ellipsis-object.section:nth-of-type(8) > p:nth-of-type(1)",
      "text": [
        "This object is commonly used by slicing (see ",
        "Slicings",
        ").  It supports no\nspecial operations.  There is exactly one ellipsis object, named\n",
        "Ellipsis",
        " (a built-in name).  ",
        "type(Ellipsis)()",
        " produces the\n",
        "Ellipsis",
        " singleton."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 41392,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "It is written as <tt class=\"docutils literal\"><span class=\"pre\">Ellipsis</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">...</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-ellipsis-object.section:nth-of-type(8) > p:nth-of-type(2)",
      "text": [
        "It is written as ",
        "Ellipsis",
        " or ",
        "...",
        "."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 41430,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.9. The NotImplemented Object<a class=\"headerlink\" href=\"#the-notimplemented-object\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-notimplemented-object.section:nth-of-type(9) > h3:nth-of-type(1)",
      "text": [
        "4.12.9. The NotImplemented Object",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 41485,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This object is returned from comparisons and binary operations when they are\nasked to operate on types they don’t support. See <a class=\"reference internal\" href=\"../reference/expressions.html#comparisons\"><em>Comparisons</em></a> for more\ninformation.  There is exactly one <tt class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></tt> object.\n<tt class=\"docutils literal\"><span class=\"pre\">type(NotImplemented)()</span></tt> produces the singleton instance.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-notimplemented-object.section:nth-of-type(9) > p:nth-of-type(1)",
      "text": [
        "This object is returned from comparisons and binary operations when they are\nasked to operate on types they don’t support. See ",
        "Comparisons",
        " for more\ninformation.  There is exactly one ",
        "NotImplemented",
        " object.\n",
        "type(NotImplemented)()",
        " produces the singleton instance."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 41545,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "It is written as <tt class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></tt>.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#the-notimplemented-object.section:nth-of-type(9) > p:nth-of-type(2)",
      "text": [
        "It is written as ",
        "NotImplemented",
        "."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 41583,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.10. Boolean Values<a class=\"headerlink\" href=\"#boolean-values\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#boolean-values.section:nth-of-type(10) > h3:nth-of-type(1)",
      "text": [
        "4.12.10. Boolean Values",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 41638,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Boolean values are the two constant objects <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> and <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>.  They are\nused to represent truth values (although other values can also be considered\nfalse or true).  In numeric contexts (for example when used as the argument to\nan arithmetic operator), they behave like the integers 0 and 1, respectively.\nThe built-in function <a class=\"reference internal\" href=\"functions.html#bool\" title=\"bool\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">bool()</span></tt></a> can be used to convert any value to a\nBoolean, if the value can be interpreted as a truth value (see section\n<a class=\"reference internal\" href=\"#truth\"><em>Truth Value Testing</em></a> above).",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#boolean-values.section:nth-of-type(10) > p:nth-of-type(1)",
      "text": [
        "Boolean values are the two constant objects ",
        "False",
        " and ",
        "True",
        ".  They are\nused to represent truth values (although other values can also be considered\nfalse or true).  In numeric contexts (for example when used as the argument to\nan arithmetic operator), they behave like the integers 0 and 1, respectively.\nThe built-in function ",
        "bool()",
        " can be used to convert any value to a\nBoolean, if the value can be interpreted as a truth value (see section\n",
        "Truth Value Testing",
        " above)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 41720,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p#index-50:nth-of-type(2)",
      "html": "They are written as <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> and <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt>, respectively.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#boolean-values.section:nth-of-type(10) > p#index-50:nth-of-type(2)",
      "text": [
        "They are written as ",
        "False",
        " and ",
        "True",
        ", respectively."
      ]
    },
    {
      "bound": {
        "height": 39,
        "left": 265,
        "top": 41758,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "22px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "6px",
        "padding-top": "6px"
      },
      "element": "h3:nth-of-type(1)",
      "html": "4.12.11. Internal Objects<a class=\"headerlink\" href=\"#internal-objects\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#internal-objects.section:nth-of-type(11) > h3:nth-of-type(1)",
      "text": [
        "4.12.11. Internal Objects",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 41813,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "See <a class=\"reference internal\" href=\"../reference/datamodel.html#types\"><em>The standard type hierarchy</em></a> for this information.  It describes stack frame objects,\ntraceback objects, and slice objects.",
      "path": "div > div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#other-built-in-types.section:nth-of-type(12) > div#internal-objects.section:nth-of-type(11) > p:nth-of-type(1)",
      "text": [
        "See ",
        "The standard type hierarchy",
        " for this information.  It describes stack frame objects,\ntraceback objects, and slice objects."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 41851,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "4.13. Special Attributes<a class=\"headerlink\" href=\"#special-attributes\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > h2:nth-of-type(1)",
      "text": [
        "4.13. Special Attributes",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 41913,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The implementation adds a few special read-only attributes to several object\ntypes, where they are relevant.  Some of these are not reported by the\n<a class=\"reference internal\" href=\"functions.html#dir\" title=\"dir\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">dir()</span></tt></a> built-in function.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > p:nth-of-type(1)",
      "text": [
        "The implementation adds a few special read-only attributes to several object\ntypes, where they are relevant.  Some of these are not reported by the\n",
        "dir()",
        " built-in function."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 41951,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#object.__dict__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">object.</tt><tt class=\"descname\">__dict__</tt><a class=\"headerlink\" href=\"#object.__dict__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(1) > dt#object.__dict__:nth-of-type(1)",
      "text": [
        "object.",
        "__dict__",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 41979,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "A dictionary or other mapping object used to store an object’s (writable)\nattributes.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "A dictionary or other mapping object used to store an object’s (writable)\nattributes."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 42017,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#instance.__class__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">instance.</tt><tt class=\"descname\">__class__</tt><a class=\"headerlink\" href=\"#instance.__class__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(2) > dt#instance.__class__:nth-of-type(1)",
      "text": [
        "instance.",
        "__class__",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 42045,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The class to which a class instance belongs.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The class to which a class instance belongs."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 42083,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#class.__bases__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">class.</tt><tt class=\"descname\">__bases__</tt><a class=\"headerlink\" href=\"#class.__bases__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(3) > dt#class.__bases__:nth-of-type(1)",
      "text": [
        "class.",
        "__bases__",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 42111,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The tuple of base classes of a class object.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The tuple of base classes of a class object."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 42149,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#class.__name__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">class.</tt><tt class=\"descname\">__name__</tt><a class=\"headerlink\" href=\"#class.__name__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(4) > dt#class.__name__:nth-of-type(1)",
      "text": [
        "class.",
        "__name__",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 42177,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The name of the class or type.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The name of the class or type."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 42215,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#class.__qualname__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">class.</tt><tt class=\"descname\">__qualname__</tt><a class=\"headerlink\" href=\"#class.__qualname__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(5) > dt#class.__qualname__:nth-of-type(1)",
      "text": [
        "class.",
        "__qualname__",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 42243,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"../glossary.html#term-qualified-name\"><em class=\"xref std std-term\">qualified name</em></a> of the class or type.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "The ",
        "qualified name",
        " of the class or type."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 42281,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(2)",
      "html": "\n<span class=\"versionmodified\">New in version 3.3.</span> ",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(5) > dd:nth-of-type(1) > p.versionadded:nth-of-type(2)",
      "text": [
        "New in version 3.3."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 42319,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#class.__mro__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">class.</tt><tt class=\"descname\">__mro__</tt><a class=\"headerlink\" href=\"#class.__mro__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(6) > dt#class.__mro__:nth-of-type(1)",
      "text": [
        "class.",
        "__mro__",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 42347,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This attribute is a tuple of classes that are considered when looking for\nbase classes during method resolution.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.attribute:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This attribute is a tuple of classes that are considered when looking for\nbase classes during method resolution."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 42385,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#class.mro:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">class.</tt><tt class=\"descname\">mro</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#class.mro\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.method:nth-of-type(7) > dt#class.mro:nth-of-type(1)",
      "text": [
        "class.",
        "mro",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 42413,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This method can be overridden by a metaclass to customize the method\nresolution order for its instances.  It is called at class instantiation, and\nits result is stored in <a class=\"reference internal\" href=\"#class.__mro__\" title=\"class.__mro__\"><tt class=\"xref py py-attr docutils literal\"><span class=\"pre\">__mro__</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This method can be overridden by a metaclass to customize the method\nresolution order for its instances.  It is called at class instantiation, and\nits result is stored in ",
        "__mro__",
        "."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 42473,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#class.__subclasses__:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">class.</tt><tt class=\"descname\">__subclasses__</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#class.__subclasses__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.method:nth-of-type(8) > dt#class.__subclasses__:nth-of-type(1)",
      "text": [
        "class.",
        "__subclasses__",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 42501,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Each class keeps a list of weak references to its immediate subclasses.  This\nmethod returns a list of all those references still alive.\nExample:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Each class keeps a list of weak references to its immediate subclasses.  This\nmethod returns a list of all those references still alive.\nExample:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 42539,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 295,
        "top": 42539,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">int</span><span class=\"o\">.</span><span class=\"n\">__subclasses__</span><span class=\"p\">()</span>\n<span class=\"go\">[&lt;class 'bool'&gt;]</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "int",
        ".",
        "__subclasses__",
        "()",
        "[<class 'bool'>]"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 42617,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "30px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.rubric:nth-of-type(2)",
      "html": "Footnotes",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > p.rubric:nth-of-type(2)",
      "text": [
        "Footnotes"
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 265,
        "top": 42655,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id1\">[1]</a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id10.docutils.footnote:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[1]"
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 300,
        "top": 42655,
        "width": 892
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "Additional information on these special methods may be found in the Python\nReference Manual (<a class=\"reference internal\" href=\"../reference/datamodel.html#customization\"><em>Basic customization</em></a>).",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id10.docutils.footnote:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "Additional information on these special methods may be found in the Python\nReference Manual (",
        "Basic customization",
        ")."
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 265,
        "top": 42692,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id2\">[2]</a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id11.docutils.footnote:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[2]"
      ]
    },
    {
      "bound": {
        "height": 28,
        "left": 300,
        "top": 42692,
        "width": 662
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "As a consequence, the list <tt class=\"docutils literal\"><span class=\"pre\">[1,</span> <span class=\"pre\">2]</span></tt> is considered equal to <tt class=\"docutils literal\"><span class=\"pre\">[1.0,</span> <span class=\"pre\">2.0]</span></tt>, and\nsimilarly for tuples.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id11.docutils.footnote:nth-of-type(2) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "As a consequence, the list ",
        "[1,",
        "2]",
        " is considered equal to ",
        "[1.0,",
        "2.0]",
        ", and\nsimilarly for tuples."
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 265,
        "top": 42730,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "[3]",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id12.docutils.footnote:nth-of-type(3) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[3]"
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 300,
        "top": 42730,
        "width": 527
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "They must have since the parser can’t tell the type of the operands.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id12.docutils.footnote:nth-of-type(3) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "They must have since the parser can’t tell the type of the operands."
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 265,
        "top": 42767,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "[4]",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id13.docutils.footnote:nth-of-type(4) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[4]"
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 300,
        "top": 42767,
        "width": 1200
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<em>(<a class=\"fn-backref\" href=\"#id5\">1</a>, <a class=\"fn-backref\" href=\"#id6\">2</a>, <a class=\"fn-backref\" href=\"#id7\">3</a>, <a class=\"fn-backref\" href=\"#id8\">4</a>)</em> Cased characters are those with general category property being one of\n“Lu” (Letter, uppercase), “Ll” (Letter, lowercase), or “Lt” (Letter, titlecase).",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id13.docutils.footnote:nth-of-type(4) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "(",
        "1",
        ", ",
        "2",
        ", ",
        "3",
        ", ",
        "4",
        ")",
        " Cased characters are those with general category property being one of\n“Lu” (Letter, uppercase), “Ll” (Letter, lowercase), or “Lt” (Letter, titlecase)."
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 265,
        "top": 42804,
        "width": 35
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td.label:nth-of-type(1)",
      "html": "<a class=\"fn-backref\" href=\"#id9\">[5]</a>",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id14.docutils.footnote:nth-of-type(5) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td.label:nth-of-type(1)",
      "text": [
        "[5]"
      ]
    },
    {
      "bound": {
        "height": 27,
        "left": 300,
        "top": 42804,
        "width": 903
      },
      "computed": {
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "To format only a tuple you should therefore provide a singleton tuple whose only\nelement is the tuple to be formatted.",
      "path": "div > div > div > div > div > div > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#built-in-types.section:nth-of-type(1) > div#special-attributes.section:nth-of-type(13) > table#id14.docutils.footnote:nth-of-type(5) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "To format only a tuple you should therefore provide a singleton tuple whose only\nelement is the tuple to be formatted."
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 82,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "<a href=\"../contents.html\">Table Of Contents</a>",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Table Of Contents"
      ]
    },
    {
      "bound": {
        "height": 1308,
        "left": 36,
        "top": 108,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#\">4. Built-in Types</a><ul>\n<li><a class=\"reference internal\" href=\"#truth-value-testing\">4.1. Truth Value Testing</a></li>\n<li><a class=\"reference internal\" href=\"#boolean-operations-and-or-not\">4.2. Boolean Operations — <tt class=\"docutils literal\"><span class=\"pre\">and</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">or</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">not</span></tt></a></li>\n<li><a class=\"reference internal\" href=\"#comparisons\">4.3. Comparisons</a></li>\n<li><a class=\"reference internal\" href=\"#numeric-types-int-float-complex\">4.4. Numeric Types — <tt class=\"docutils literal\"><span class=\"pre\">int</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">float</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">complex</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#bitwise-operations-on-integer-types\">4.4.1. Bitwise Operations on Integer Types</a></li>\n<li><a class=\"reference internal\" href=\"#additional-methods-on-integer-types\">4.4.2. Additional Methods on Integer Types</a></li>\n<li><a class=\"reference internal\" href=\"#additional-methods-on-float\">4.4.3. Additional Methods on Float</a></li>\n<li><a class=\"reference internal\" href=\"#hashing-of-numeric-types\">4.4.4. Hashing of numeric types</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#iterator-types\">4.5. Iterator Types</a><ul>\n<li><a class=\"reference internal\" href=\"#generator-types\">4.5.1. Generator Types</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#sequence-types-list-tuple-range\">4.6. Sequence Types — <tt class=\"docutils literal\"><span class=\"pre\">list</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">tuple</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">range</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#common-sequence-operations\">4.6.1. Common Sequence Operations</a></li>\n<li><a class=\"reference internal\" href=\"#immutable-sequence-types\">4.6.2. Immutable Sequence Types</a></li>\n<li><a class=\"reference internal\" href=\"#mutable-sequence-types\">4.6.3. Mutable Sequence Types</a></li>\n<li><a class=\"reference internal\" href=\"#lists\">4.6.4. Lists</a></li>\n<li><a class=\"reference internal\" href=\"#tuples\">4.6.5. Tuples</a></li>\n<li><a class=\"reference internal\" href=\"#ranges\">4.6.6. Ranges</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#text-sequence-type-str\">4.7. Text Sequence Type — <tt class=\"docutils literal\"><span class=\"pre\">str</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#string-methods\">4.7.1. String Methods</a></li>\n<li><a class=\"reference internal\" href=\"#printf-style-string-formatting\">4.7.2. <tt class=\"docutils literal\"><span class=\"pre\">printf</span></tt>-style String Formatting</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#binary-sequence-types-bytes-bytearray-memoryview\">4.8. Binary Sequence Types — <tt class=\"docutils literal\"><span class=\"pre\">bytes</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">bytearray</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">memoryview</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#bytes\">4.8.1. Bytes</a></li>\n<li><a class=\"reference internal\" href=\"#bytearray-objects\">4.8.2. Bytearray Objects</a></li>\n<li><a class=\"reference internal\" href=\"#bytes-and-bytearray-operations\">4.8.3. Bytes and Bytearray Operations</a></li>\n<li><a class=\"reference internal\" href=\"#memory-views\">4.8.4. Memory Views</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#set-types-set-frozenset\">4.9. Set Types — <tt class=\"docutils literal\"><span class=\"pre\">set</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">frozenset</span></tt></a></li>\n<li><a class=\"reference internal\" href=\"#mapping-types-dict\">4.10. Mapping Types — <tt class=\"docutils literal\"><span class=\"pre\">dict</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#dictionary-view-objects\">4.10.1. Dictionary view objects</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#context-manager-types\">4.11. Context Manager Types</a></li>\n<li><a class=\"reference internal\" href=\"#other-built-in-types\">4.12. Other Built-in Types</a><ul>\n<li><a class=\"reference internal\" href=\"#modules\">4.12.1. Modules</a></li>\n<li><a class=\"reference internal\" href=\"#classes-and-class-instances\">4.12.2. Classes and Class Instances</a></li>\n<li><a class=\"reference internal\" href=\"#functions\">4.12.3. Functions</a></li>\n<li><a class=\"reference internal\" href=\"#methods\">4.12.4. Methods</a></li>\n<li><a class=\"reference internal\" href=\"#code-objects\">4.12.5. Code Objects</a></li>\n<li><a class=\"reference internal\" href=\"#type-objects\">4.12.6. Type Objects</a></li>\n<li><a class=\"reference internal\" href=\"#the-null-object\">4.12.7. The Null Object</a></li>\n<li><a class=\"reference internal\" href=\"#the-ellipsis-object\">4.12.8. The Ellipsis Object</a></li>\n<li><a class=\"reference internal\" href=\"#the-notimplemented-object\">4.12.9. The NotImplemented Object</a></li>\n<li><a class=\"reference internal\" href=\"#boolean-values\">4.12.10. Boolean Values</a></li>\n<li><a class=\"reference internal\" href=\"#internal-objects\">4.12.11. Internal Objects</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#special-attributes\">4.13. Special Attributes</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4. Built-in Types"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 124,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#truth-value-testing\">4.1. Truth Value Testing</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.1. Truth Value Testing"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 145,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#boolean-operations-and-or-not\">4.2. Boolean Operations — <tt class=\"docutils literal\"><span class=\"pre\">and</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">or</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">not</span></tt></a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "4.2. Boolean Operations — ",
        "and",
        ", ",
        "or",
        ", ",
        "not"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 182,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#comparisons\">4.3. Comparisons</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "4.3. Comparisons"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 56,
        "top": 203,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#numeric-types-int-float-complex\">4.4. Numeric Types — <tt class=\"docutils literal\"><span class=\"pre\">int</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">float</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">complex</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#bitwise-operations-on-integer-types\">4.4.1. Bitwise Operations on Integer Types</a></li>\n<li><a class=\"reference internal\" href=\"#additional-methods-on-integer-types\">4.4.2. Additional Methods on Integer Types</a></li>\n<li><a class=\"reference internal\" href=\"#additional-methods-on-float\">4.4.3. Additional Methods on Float</a></li>\n<li><a class=\"reference internal\" href=\"#hashing-of-numeric-types\">4.4.4. Hashing of numeric types</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "4.4. Numeric Types — ",
        "int",
        ", ",
        "float",
        ", ",
        "complex"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 76,
        "top": 235,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#bitwise-operations-on-integer-types\">4.4.1. Bitwise Operations on Integer Types</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.4.1. Bitwise Operations on Integer Types"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 76,
        "top": 283,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#additional-methods-on-integer-types\">4.4.2. Additional Methods on Integer Types</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "4.4.2. Additional Methods on Integer Types"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 331,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#additional-methods-on-float\">4.4.3. Additional Methods on Float</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "4.4.3. Additional Methods on Float"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 363,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#hashing-of-numeric-types\">4.4.4. Hashing of numeric types</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "4.4.4. Hashing of numeric types"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 56,
        "top": 400,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#iterator-types\">4.5. Iterator Types</a><ul>\n<li><a class=\"reference internal\" href=\"#generator-types\">4.5.1. Generator Types</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "4.5. Iterator Types"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 416,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#generator-types\">4.5.1. Generator Types</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.5.1. Generator Types"
      ]
    },
    {
      "bound": {
        "height": 192,
        "left": 56,
        "top": 453,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(6)",
      "html": "<a class=\"reference internal\" href=\"#sequence-types-list-tuple-range\">4.6. Sequence Types — <tt class=\"docutils literal\"><span class=\"pre\">list</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">tuple</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">range</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#common-sequence-operations\">4.6.1. Common Sequence Operations</a></li>\n<li><a class=\"reference internal\" href=\"#immutable-sequence-types\">4.6.2. Immutable Sequence Types</a></li>\n<li><a class=\"reference internal\" href=\"#mutable-sequence-types\">4.6.3. Mutable Sequence Types</a></li>\n<li><a class=\"reference internal\" href=\"#lists\">4.6.4. Lists</a></li>\n<li><a class=\"reference internal\" href=\"#tuples\">4.6.5. Tuples</a></li>\n<li><a class=\"reference internal\" href=\"#ranges\">4.6.6. Ranges</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6)",
      "text": [
        "4.6. Sequence Types — ",
        "list",
        ", ",
        "tuple",
        ", ",
        "range"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 76,
        "top": 485,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#common-sequence-operations\">4.6.1. Common Sequence Operations</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.6.1. Common Sequence Operations"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 533,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#immutable-sequence-types\">4.6.2. Immutable Sequence Types</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "4.6.2. Immutable Sequence Types"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 565,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#mutable-sequence-types\">4.6.3. Mutable Sequence Types</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "4.6.3. Mutable Sequence Types"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 597,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#lists\">4.6.4. Lists</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "4.6.4. Lists"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 613,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#tuples\">4.6.5. Tuples</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6) > ul:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "4.6.5. Tuples"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 629,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(6)",
      "html": "<a class=\"reference internal\" href=\"#ranges\">4.6.6. Ranges</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(6) > ul:nth-of-type(1) > li:nth-of-type(6)",
      "text": [
        "4.6.6. Ranges"
      ]
    },
    {
      "bound": {
        "height": 96,
        "left": 56,
        "top": 650,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(7)",
      "html": "<a class=\"reference internal\" href=\"#text-sequence-type-str\">4.7. Text Sequence Type — <tt class=\"docutils literal\"><span class=\"pre\">str</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#string-methods\">4.7.1. String Methods</a></li>\n<li><a class=\"reference internal\" href=\"#printf-style-string-formatting\">4.7.2. <tt class=\"docutils literal\"><span class=\"pre\">printf</span></tt>-style String Formatting</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(7)",
      "text": [
        "4.7. Text Sequence Type — ",
        "str"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 682,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#string-methods\">4.7.1. String Methods</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(7) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.7.1. String Methods"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 714,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#printf-style-string-formatting\">4.7.2. <tt class=\"docutils literal\"><span class=\"pre\">printf</span></tt>-style String Formatting</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(7) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "4.7.2. ",
        "printf",
        "-style String Formatting"
      ]
    },
    {
      "bound": {
        "height": 176,
        "left": 56,
        "top": 751,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(8)",
      "html": "<a class=\"reference internal\" href=\"#binary-sequence-types-bytes-bytearray-memoryview\">4.8. Binary Sequence Types — <tt class=\"docutils literal\"><span class=\"pre\">bytes</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">bytearray</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">memoryview</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#bytes\">4.8.1. Bytes</a></li>\n<li><a class=\"reference internal\" href=\"#bytearray-objects\">4.8.2. Bytearray Objects</a></li>\n<li><a class=\"reference internal\" href=\"#bytes-and-bytearray-operations\">4.8.3. Bytes and Bytearray Operations</a></li>\n<li><a class=\"reference internal\" href=\"#memory-views\">4.8.4. Memory Views</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(8)",
      "text": [
        "4.8. Binary Sequence Types — ",
        "bytes",
        ", ",
        "bytearray",
        ", ",
        "memoryview"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 799,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#bytes\">4.8.1. Bytes</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(8) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.8.1. Bytes"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 815,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#bytearray-objects\">4.8.2. Bytearray Objects</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(8) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "4.8.2. Bytearray Objects"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 76,
        "top": 847,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#bytes-and-bytearray-operations\">4.8.3. Bytes and Bytearray Operations</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(8) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "4.8.3. Bytes and Bytearray Operations"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 895,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#memory-views\">4.8.4. Memory Views</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(8) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "4.8.4. Memory Views"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 932,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(9)",
      "html": "<a class=\"reference internal\" href=\"#set-types-set-frozenset\">4.9. Set Types — <tt class=\"docutils literal\"><span class=\"pre\">set</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">frozenset</span></tt></a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(9)",
      "text": [
        "4.9. Set Types — ",
        "set",
        ", ",
        "frozenset"
      ]
    },
    {
      "bound": {
        "height": 64,
        "left": 56,
        "top": 969,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(10)",
      "html": "<a class=\"reference internal\" href=\"#mapping-types-dict\">4.10. Mapping Types — <tt class=\"docutils literal\"><span class=\"pre\">dict</span></tt></a><ul>\n<li><a class=\"reference internal\" href=\"#dictionary-view-objects\">4.10.1. Dictionary view objects</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(10)",
      "text": [
        "4.10. Mapping Types — ",
        "dict"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 1001,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#dictionary-view-objects\">4.10.1. Dictionary view objects</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(10) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.10.1. Dictionary view objects"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 1038,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(11)",
      "html": "<a class=\"reference internal\" href=\"#context-manager-types\">4.11. Context Manager Types</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(11)",
      "text": [
        "4.11. Context Manager Types"
      ]
    },
    {
      "bound": {
        "height": 320,
        "left": 56,
        "top": 1075,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(12)",
      "html": "<a class=\"reference internal\" href=\"#other-built-in-types\">4.12. Other Built-in Types</a><ul>\n<li><a class=\"reference internal\" href=\"#modules\">4.12.1. Modules</a></li>\n<li><a class=\"reference internal\" href=\"#classes-and-class-instances\">4.12.2. Classes and Class Instances</a></li>\n<li><a class=\"reference internal\" href=\"#functions\">4.12.3. Functions</a></li>\n<li><a class=\"reference internal\" href=\"#methods\">4.12.4. Methods</a></li>\n<li><a class=\"reference internal\" href=\"#code-objects\">4.12.5. Code Objects</a></li>\n<li><a class=\"reference internal\" href=\"#type-objects\">4.12.6. Type Objects</a></li>\n<li><a class=\"reference internal\" href=\"#the-null-object\">4.12.7. The Null Object</a></li>\n<li><a class=\"reference internal\" href=\"#the-ellipsis-object\">4.12.8. The Ellipsis Object</a></li>\n<li><a class=\"reference internal\" href=\"#the-notimplemented-object\">4.12.9. The NotImplemented Object</a></li>\n<li><a class=\"reference internal\" href=\"#boolean-values\">4.12.10. Boolean Values</a></li>\n<li><a class=\"reference internal\" href=\"#internal-objects\">4.12.11. Internal Objects</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12)",
      "text": [
        "4.12. Other Built-in Types"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 1091,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#modules\">4.12.1. Modules</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "4.12.1. Modules"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 1107,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#classes-and-class-instances\">4.12.2. Classes and Class Instances</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "4.12.2. Classes and Class Instances"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 1139,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#functions\">4.12.3. Functions</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "4.12.3. Functions"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 1155,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#methods\">4.12.4. Methods</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "4.12.4. Methods"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 1171,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#code-objects\">4.12.5. Code Objects</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "4.12.5. Code Objects"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 76,
        "top": 1203,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(6)",
      "html": "<a class=\"reference internal\" href=\"#type-objects\">4.12.6. Type Objects</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(6)",
      "text": [
        "4.12.6. Type Objects"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 1219,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(7)",
      "html": "<a class=\"reference internal\" href=\"#the-null-object\">4.12.7. The Null Object</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(7)",
      "text": [
        "4.12.7. The Null Object"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 1251,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(8)",
      "html": "<a class=\"reference internal\" href=\"#the-ellipsis-object\">4.12.8. The Ellipsis Object</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(8)",
      "text": [
        "4.12.8. The Ellipsis Object"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 76,
        "top": 1283,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(9)",
      "html": "<a class=\"reference internal\" href=\"#the-notimplemented-object\">4.12.9. The NotImplemented Object</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(9)",
      "text": [
        "4.12.9. The NotImplemented Object"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 1331,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(10)",
      "html": "<a class=\"reference internal\" href=\"#boolean-values\">4.12.10. Boolean Values</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(10)",
      "text": [
        "4.12.10. Boolean Values"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 76,
        "top": 1363,
        "width": 122
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(11)",
      "html": "<a class=\"reference internal\" href=\"#internal-objects\">4.12.11. Internal Objects</a>",
      "path": "div > div > div > ul > li > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(12) > ul:nth-of-type(1) > li:nth-of-type(11)",
      "text": [
        "4.12.11. Internal Objects"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 1400,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(13)",
      "html": "<a class=\"reference internal\" href=\"#special-attributes\">4.13. Special Attributes</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(13)",
      "text": [
        "4.13. Special Attributes"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 1442,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(1)",
      "html": "Previous topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(1)",
      "text": [
        "Previous topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 1463,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(1)",
      "html": "<a href=\"constants.html\" title=\"previous chapter\">3. Built-in Constants</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(1)",
      "text": [
        "3. Built-in Constants"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 1505,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(2)",
      "html": "Next topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(2)",
      "text": [
        "Next topic"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 1526,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(2)",
      "html": "<a href=\"exceptions.html\" title=\"next chapter\">5. Built-in Exceptions</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(2)",
      "text": [
        "5. Built-in Exceptions"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 1570,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(2)",
      "html": "This Page",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(2)",
      "text": [
        "This Page"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 1596,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a href=\"../bugs.html\">Report a Bug</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "Report a Bug"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 1612,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a href=\"../_sources/library/stdtypes.txt\" rel=\"nofollow\">Show Source</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "Show Source"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 1656,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "Quick search",
      "path": "div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Quick search"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 26,
        "top": 1719,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "12px",
        "line-height": "16px",
        "margin-bottom": "12px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "12px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.searchtip:nth-of-type(1)",
      "html": "\n    Enter search terms or a module, class or function name.\n    ",
      "path": "div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > p.searchtip:nth-of-type(1)",
      "text": [
        "\n    Enter search terms or a module, class or function name.\n    "
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 235,
        "top": 1990,
        "width": 9
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "cursor": "pointer",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "position": "fixed"
      },
      "element": "span:nth-of-type(1)",
      "html": "«",
      "path": "div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div#sidebarbutton:nth-of-type(2) > span:nth-of-type(1)",
      "text": [
        "«"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 42856,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 42856,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 42856,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"exceptions.html\" title=\"5. Built-in Exceptions\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 42856,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"constants.html\" title=\"3. Built-in Constants\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 42856,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"exceptions.html\" title=\"5. Built-in Exceptions\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"constants.html\" title=\"3. Built-in Constants\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Standard Library</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »"
      ]
    },
    {
      "bound": {
        "height": 90,
        "left": 16,
        "top": 42886,
        "width": 1558
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(85, 85, 85)",
        "border-left-color": "rgb(85, 85, 85)",
        "border-right-color": "rgb(85, 85, 85)",
        "border-top-color": "rgb(85, 85, 85)",
        "color": "rgb(85, 85, 85)",
        "font-size": "12px",
        "line-height": "18px",
        "margin-left": "0px",
        "margin-right": "10px",
        "margin-top": "-24px",
        "outline-color": "rgb(85, 85, 85)",
        "padding-bottom": "9px",
        "padding-top": "9px",
        "text-align": "right"
      },
      "element": "div.footer:nth-of-type(4)",
      "html": "\n    © <a href=\"../copyright.html\">Copyright</a> 1990-2013, Python Software Foundation.\n    <br>\n    The Python Software Foundation is a non-profit corporation.\n    <a href=\"http://www.python.org/psf/donations/\">Please donate.</a>\n    <br>\n    Last updated on Aug 14, 2013.\n    <a href=\"../bugs.html\">Found a bug</a>?\n    <br>\n    Created using <a href=\"http://sphinx.pocoo.org/\">Sphinx</a> 1.0.7.\n    ",
      "path": "div",
      "selector": "div.footer:nth-of-type(4)",
      "text": [
        "\n    © ",
        "Copyright",
        " 1990-2013, Python Software Foundation.\n    ",
        "\n    The Python Software Foundation is a non-profit corporation.\n    ",
        "Please donate.",
        "\n    Last updated on Aug 14, 2013.\n    ",
        "Found a bug",
        "?\n    ",
        "\n    Created using ",
        "Sphinx",
        " 1.0.7.\n    "
      ]
    }
  ],
  "images": [
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 21,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 42863,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    }
  ]
}
{
  "body": {
    "bound": {
      "height": 11013,
      "left": 16,
      "top": 7,
      "width": 1568
    },
    "computed": {
      "alignment-baseline": "auto",
      "background-attachment": "scroll",
      "background-clip": "border-box",
      "background-color": "rgb(255, 255, 255)",
      "background-image": "none",
      "background-origin": "padding-box",
      "background-position": "0% 0%",
      "background-repeat": "repeat",
      "background-size": "auto auto",
      "baseline-shift": "baseline",
      "border-bottom-color": "rgb(0, 0, 0)",
      "border-bottom-left-radius": "0px",
      "border-bottom-right-radius": "0px",
      "border-bottom-style": "none",
      "border-bottom-width": "0px",
      "border-collapse": "separate",
      "border-left-color": "rgb(0, 0, 0)",
      "border-left-style": "none",
      "border-left-width": "0px",
      "border-right-color": "rgb(0, 0, 0)",
      "border-right-style": "none",
      "border-right-width": "0px",
      "border-top-color": "rgb(0, 0, 0)",
      "border-top-left-radius": "0px",
      "border-top-right-radius": "0px",
      "border-top-style": "none",
      "border-top-width": "0px",
      "bottom": "auto",
      "box-shadow": "none",
      "box-sizing": "content-box",
      "caption-side": "top",
      "clear": "none",
      "clip": "auto",
      "clip-path": "none",
      "clip-rule": "nonzero",
      "color": "rgb(0, 0, 0)",
      "color-interpolation": "srgb",
      "color-interpolation-filters": "linearrgb",
      "color-rendering": "auto",
      "cursor": "auto",
      "direction": "ltr",
      "display": "block",
      "dominant-baseline": "auto",
      "empty-cells": "show",
      "fill": "#000000",
      "fill-opacity": "1",
      "fill-rule": "nonzero",
      "filter": "none",
      "float": "none",
      "flood-color": "rgb(0, 0, 0)",
      "flood-opacity": "1",
      "font-family": "'Lucida Grande', Arial, sans-serif",
      "font-size": "16px",
      "font-style": "normal",
      "font-variant": "normal",
      "font-weight": "normal",
      "glyph-orientation-horizontal": "0deg",
      "glyph-orientation-vertical": "auto",
      "height": "11013px",
      "image-rendering": "auto",
      "kerning": "0",
      "left": "auto",
      "letter-spacing": "normal",
      "lighting-color": "rgb(255, 255, 255)",
      "line-height": "normal",
      "list-style-image": "none",
      "list-style-position": "outside",
      "list-style-type": "disc",
      "margin-bottom": "0px",
      "margin-left": "16px",
      "margin-right": "16px",
      "margin-top": "0px",
      "marker-end": "none",
      "marker-mid": "none",
      "marker-start": "none",
      "mask": "none",
      "max-height": "none",
      "max-width": "none",
      "min-height": "0px",
      "min-width": "0px",
      "opacity": "1",
      "orphans": "2",
      "outline-color": "rgb(0, 0, 0)",
      "outline-style": "none",
      "outline-width": "0px",
      "overflow-x": "visible",
      "overflow-y": "visible",
      "padding-bottom": "0px",
      "padding-left": "0px",
      "padding-right": "0px",
      "padding-top": "0px",
      "page-break-after": "auto",
      "page-break-before": "auto",
      "page-break-inside": "auto",
      "pointer-events": "auto",
      "position": "static",
      "resize": "none",
      "right": "auto",
      "shape-rendering": "auto",
      "speak": "normal",
      "stop-color": "rgb(0, 0, 0)",
      "stop-opacity": "1",
      "stroke": "none",
      "stroke-dasharray": "none",
      "stroke-dashoffset": "0",
      "stroke-linecap": "butt",
      "stroke-linejoin": "miter",
      "stroke-miterlimit": "4",
      "stroke-opacity": "1",
      "stroke-width": "1",
      "table-layout": "auto",
      "text-align": "-webkit-auto",
      "text-anchor": "start",
      "text-decoration": "none",
      "text-indent": "0px",
      "text-overflow": "clip",
      "text-rendering": "auto",
      "text-shadow": "none",
      "text-transform": "none",
      "top": "auto",
      "unicode-bidi": "normal",
      "vector-effect": "none",
      "vertical-align": "baseline",
      "visibility": "visible",
      "white-space": "normal",
      "widows": "2",
      "width": "1568px",
      "word-break": "normal",
      "word-spacing": "0px",
      "word-wrap": "normal",
      "writing-mode": "lr-tb",
      "z-index": "auto",
      "zoom": "1"
    },
    "scroll": {
      "left": 0,
      "top": 0
    }
  },
  "descriptions": [],
  "titles": [
    "6.3. difflib — Helpers for computing deltas — Python v3.3.2 documentation"
  ],
  "url": "http://docs.python.org/3.3/library/difflib.html",
  "links": [
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/textwrap.html",
    "http://docs.python.org/3.3/library/re.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/library/text.html",
    "http://docs.python.org/3.3/library/difflib.html#module-difflib",
    "http://docs.python.org/3.3/library/difflib.html#module-difflib",
    "http://docs.python.org/3.3/library/filecmp.html#module-filecmp",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/library/difflib.html#difflib.HtmlDiff",
    "http://docs.python.org/3.3/library/difflib.html#difflib.HtmlDiff.__init__",
    "http://docs.python.org/3.3/library/difflib.html#difflib.HtmlDiff",
    "http://docs.python.org/3.3/library/difflib.html#difflib.HtmlDiff",
    "http://docs.python.org/3.3/library/difflib.html#difflib.HtmlDiff.make_file",
    "http://docs.python.org/3.3/library/difflib.html#difflib.HtmlDiff.make_table",
    "http://docs.python.org/3.3/library/difflib.html#difflib.HtmlDiff.make_file",
    "http://docs.python.org/3.3/library/difflib.html#difflib.context_diff",
    "http://docs.python.org/3.3/glossary.html#term-generator",
    "http://docs.python.org/3.3/library/difflib.html#difflib-interface",
    "http://docs.python.org/3.3/library/difflib.html#difflib.get_close_matches",
    "http://docs.python.org/3.3/library/difflib.html#difflib.ndiff",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/glossary.html#term-generator",
    "http://docs.python.org/3.3/library/difflib.html#difflib.IS_LINE_JUNK",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#difflib.IS_CHARACTER_JUNK",
    "http://docs.python.org/3.3/library/difflib.html#difflib.restore",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ.compare",
    "http://docs.python.org/3.3/library/difflib.html#difflib.ndiff",
    "http://docs.python.org/3.3/library/difflib.html#difflib.unified_diff",
    "http://docs.python.org/3.3/glossary.html#term-generator",
    "http://docs.python.org/3.3/library/difflib.html#difflib-interface",
    "http://docs.python.org/3.3/library/difflib.html#difflib.IS_LINE_JUNK",
    "http://docs.python.org/3.3/library/difflib.html#difflib.ndiff",
    "http://docs.python.org/3.3/library/difflib.html#difflib.IS_CHARACTER_JUNK",
    "http://docs.python.org/3.3/library/difflib.html#difflib.ndiff",
    "http://www.ddj.com/184407970?pgno=5",
    "http://www.ddj.com/",
    "http://docs.python.org/3.3/library/difflib.html#sequencematcher-objects",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/glossary.html#term-hashable",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.set_seqs",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.set_seq2",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.set_seqs",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.set_seq2",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.set_seq1",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.set_seq1",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.set_seq2",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.find_longest_match",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.find_longest_match",
    "http://docs.python.org/3.3/glossary.html#term-named-tuple",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.get_matching_blocks",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.get_opcodes",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.get_grouped_opcodes",
    "http://docs.python.org/3.3/glossary.html#term-generator",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.get_opcodes",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.get_opcodes",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.ratio",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.get_matching_blocks",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.get_opcodes",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.quick_ratio",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.real_quick_ratio",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.quick_ratio",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.ratio",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.real_quick_ratio",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher.ratio",
    "http://docs.python.org/3.3/library/difflib.html#sequencematcher-examples",
    "http://docs.python.org/3.3/library/difflib.html#difflib.get_close_matches",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://code.activestate.com/recipes/576729/",
    "http://docs.python.org/3.3/library/difflib.html#difflib.SequenceMatcher",
    "http://docs.python.org/3.3/library/difflib.html#differ-objects",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ.compare",
    "http://docs.python.org/3.3/library/difflib.html#differ-example",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/library/difflib.html#difflib.Differ",
    "http://docs.python.org/3.3/library/difflib.html#a-command-line-interface-to-difflib",
    "http://docs.python.org/3.3/contents.html",
    "http://docs.python.org/3.3/library/difflib.html#",
    "http://docs.python.org/3.3/library/difflib.html#sequencematcher-objects",
    "http://docs.python.org/3.3/library/difflib.html#sequencematcher-examples",
    "http://docs.python.org/3.3/library/difflib.html#differ-objects",
    "http://docs.python.org/3.3/library/difflib.html#differ-example",
    "http://docs.python.org/3.3/library/difflib.html#a-command-line-interface-to-difflib",
    "http://docs.python.org/3.3/library/re.html",
    "http://docs.python.org/3.3/library/textwrap.html",
    "http://docs.python.org/3.3/bugs.html",
    "http://docs.python.org/3.3/_sources/library/difflib.txt",
    "http://docs.python.org/3.3/genindex.html",
    "http://docs.python.org/3.3/py-modindex.html",
    "http://docs.python.org/3.3/library/textwrap.html",
    "http://docs.python.org/3.3/library/re.html",
    "http://www.python.org/",
    "http://docs.python.org/3.3/index.html",
    "http://docs.python.org/3.3/library/index.html",
    "http://docs.python.org/3.3/library/text.html",
    "http://docs.python.org/3.3/copyright.html",
    "http://www.python.org/psf/donations/",
    "http://docs.python.org/3.3/bugs.html",
    "http://sphinx.pocoo.org/"
  ],
  "texts": [
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 14,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 14,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 14,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"textwrap.html\" title=\"6.4. textwrap — Text wrapping and filling\" accesskey=\"N\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 14,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\" accesskey=\"P\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 14,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\" accesskey=\"I\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"textwrap.html\" title=\"6.4. textwrap — Text wrapping and filling\" accesskey=\"N\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\" accesskey=\"P\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Standard Library</a> »</li>\n          <li><a href=\"text.html\" accesskey=\"U\">6. Text Processing Services</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »",
        "6. Text Processing Services",
        " »"
      ]
    },
    {
      "bound": {
        "height": 57,
        "left": 265,
        "top": 69,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "32px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "9px",
        "padding-top": "9px"
      },
      "element": "h1:nth-of-type(1)",
      "html": "6.3. <a class=\"reference internal\" href=\"#module-difflib\" title=\"difflib: Helpers for computing differences between objects.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">difflib</span></tt></a> — Helpers for computing deltas<a class=\"headerlink\" href=\"#module-difflib\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > h1",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > h1:nth-of-type(1)",
      "text": [
        "6.3. ",
        "difflib",
        " — Helpers for computing deltas",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 142,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This module provides classes and functions for comparing sequences. It\ncan be used for example, for comparing files, and can produce difference\ninformation in various formats, including HTML and context and unified\ndiffs. For comparing directories and files, see also, the <a class=\"reference internal\" href=\"filecmp.html#module-filecmp\" title=\"filecmp: Compare files efficiently.\"><tt class=\"xref py py-mod docutils literal\"><span class=\"pre\">filecmp</span></tt></a> module.",
      "path": "div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This module provides classes and functions for comparing sequences. It\ncan be used for example, for comparing files, and can produce difference\ninformation in various formats, including HTML and context and unified\ndiffs. For comparing directories and files, see also, the ",
        "filecmp",
        " module."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 202,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.SequenceMatcher:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">SequenceMatcher</tt><a class=\"headerlink\" href=\"#difflib.SequenceMatcher\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(1) > dt#difflib.SequenceMatcher:nth-of-type(1)",
      "text": [
        "class ",
        "difflib.",
        "SequenceMatcher",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 110,
        "left": 295,
        "top": 230,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This is a flexible class for comparing pairs of sequences of any type, so long\nas the sequence elements are <a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a>.  The basic algorithm predates, and is a\nlittle fancier than, an algorithm published in the late 1980’s by Ratcliff and\nObershelp under the hyperbolic name “gestalt pattern matching.”  The idea is to\nfind the longest contiguous matching subsequence that contains no “junk”\nelements (the Ratcliff and Obershelp algorithm doesn’t address junk).  The same\nidea is then applied recursively to the pieces of the sequences to the left and\nto the right of the matching subsequence.  This does not yield minimal edit\nsequences, but does tend to yield matches that “look right” to people.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This is a flexible class for comparing pairs of sequences of any type, so long\nas the sequence elements are ",
        "hashable",
        ".  The basic algorithm predates, and is a\nlittle fancier than, an algorithm published in the late 1980’s by Ratcliff and\nObershelp under the hyperbolic name “gestalt pattern matching.”  The idea is to\nfind the longest contiguous matching subsequence that contains no “junk”\nelements (the Ratcliff and Obershelp algorithm doesn’t address junk).  The same\nidea is then applied recursively to the pieces of the sequences to the left and\nto the right of the matching subsequence.  This does not yield minimal edit\nsequences, but does tend to yield matches that “look right” to people."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 356,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<strong>Timing:</strong> The basic Ratcliff-Obershelp algorithm is cubic time in the worst\ncase and quadratic time in the expected case. <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> is\nquadratic time for the worst case and has expected-case behavior dependent in a\ncomplicated way on how many elements the sequences have in common; best case\ntime is linear.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Timing:",
        " The basic Ratcliff-Obershelp algorithm is cubic time in the worst\ncase and quadratic time in the expected case. ",
        "SequenceMatcher",
        " is\nquadratic time for the worst case and has expected-case behavior dependent in a\ncomplicated way on how many elements the sequences have in common; best case\ntime is linear."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 295,
        "top": 416,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<strong>Automatic junk heuristic:</strong> <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> supports a heuristic that\nautomatically treats certain sequence items as junk. The heuristic counts how many\ntimes each individual item appears in the sequence. If an item’s duplicates (after\nthe first one) account for more than 1% of the sequence and the sequence is at least\n200 items long, this item is marked as “popular” and is treated as junk for\nthe purpose of sequence matching. This heuristic can be turned off by setting\nthe <tt class=\"docutils literal\"><span class=\"pre\">autojunk</span></tt> argument to <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> when creating the <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Automatic junk heuristic:",
        "SequenceMatcher",
        " supports a heuristic that\nautomatically treats certain sequence items as junk. The heuristic counts how many\ntimes each individual item appears in the sequence. If an item’s duplicates (after\nthe first one) account for more than 1% of the sequence and the sequence is at least\n200 items long, this item is marked as “popular” and is treated as junk for\nthe purpose of sequence matching. This heuristic can be turned off by setting\nthe ",
        "autojunk",
        " argument to ",
        "False",
        " when creating the ",
        "SequenceMatcher",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 520,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(4)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2:</span> The <em>autojunk</em> parameter.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p.versionadded:nth-of-type(4)",
      "text": [
        "New in version 3.2:",
        " The ",
        "autojunk",
        " parameter."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 558,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.Differ:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">Differ</tt><a class=\"headerlink\" href=\"#difflib.Differ\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dt#difflib.Differ:nth-of-type(1)",
      "text": [
        "class ",
        "difflib.",
        "Differ",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 586,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This is a class for comparing sequences of lines of text, and producing\nhuman-readable differences or deltas.  Differ uses <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a>\nboth to compare sequences of lines, and to compare sequences of characters\nwithin similar (near-matching) lines.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This is a class for comparing sequences of lines of text, and producing\nhuman-readable differences or deltas.  Differ uses ",
        "SequenceMatcher",
        "\nboth to compare sequences of lines, and to compare sequences of characters\nwithin similar (near-matching) lines."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 646,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Each line of a <a class=\"reference internal\" href=\"#difflib.Differ\" title=\"difflib.Differ\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Differ</span></tt></a> delta begins with a two-letter code:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Each line of a ",
        "Differ",
        " delta begins with a two-letter code:"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 684,
        "width": 76
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Code",
      "path": "div > div > div > div > div > dl > dd > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Code"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 371,
        "top": 684,
        "width": 319
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > dl > dd > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 713,
        "width": 76
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'-</span> <span class=\"pre\">'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'-",
        "'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 371,
        "top": 713,
        "width": 319
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "line unique to sequence 1",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "line unique to sequence 1"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 742,
        "width": 76
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'+</span> <span class=\"pre\">'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'+",
        "'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 371,
        "top": 742,
        "width": 319
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "line unique to sequence 2",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "line unique to sequence 2"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 295,
        "top": 771,
        "width": 76
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'</span>&nbsp; <span class=\"pre\">'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'",
        "'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 371,
        "top": 771,
        "width": 319
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "line common to both sequences",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "line common to both sequences"
      ]
    },
    {
      "bound": {
        "height": 49,
        "left": 295,
        "top": 800,
        "width": 76
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'?</span> <span class=\"pre\">'</span></tt>",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'?",
        "'"
      ]
    },
    {
      "bound": {
        "height": 49,
        "left": 371,
        "top": 800,
        "width": 319
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "line not present in either input sequence",
      "path": "div > div > div > div > div > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "line not present in either input sequence"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 860,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Lines beginning with ‘<tt class=\"docutils literal\"><span class=\"pre\">?</span></tt>‘ attempt to guide the eye to intraline differences,\nand were not present in either input sequence. These lines can be confusing if\nthe sequences contain tab characters.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Lines beginning with ‘",
        "?",
        "‘ attempt to guide the eye to intraline differences,\nand were not present in either input sequence. These lines can be confusing if\nthe sequences contain tab characters."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 920,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.HtmlDiff:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">HtmlDiff</tt><a class=\"headerlink\" href=\"#difflib.HtmlDiff\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dt#difflib.HtmlDiff:nth-of-type(1)",
      "text": [
        "class ",
        "difflib.",
        "HtmlDiff",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 948,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This class can be used to create an HTML table (or a complete HTML file\ncontaining the table) showing a side by side, line by line comparison of text\nwith inter-line and intra-line change highlights.  The table can be generated in\neither full or contextual difference mode.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "This class can be used to create an HTML table (or a complete HTML file\ncontaining the table) showing a side by side, line by line comparison of text\nwith inter-line and intra-line change highlights.  The table can be generated in\neither full or contextual difference mode."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1008,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The constructor for this class is:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The constructor for this class is:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1046,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.HtmlDiff.__init__:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">__init__</tt><big>(</big><em>tabsize=8</em>, <em>wrapcolumn=None</em>, <em>linejunk=None</em>, <em>charjunk=IS_CHARACTER_JUNK</em><big>)</big><a class=\"headerlink\" href=\"#difflib.HtmlDiff.__init__\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dt#difflib.HtmlDiff.__init__:nth-of-type(1)",
      "text": [
        "__init__",
        "(",
        "tabsize=8",
        ", ",
        "wrapcolumn=None",
        ", ",
        "linejunk=None",
        ", ",
        "charjunk=IS_CHARACTER_JUNK",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1072,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Initializes instance of <a class=\"reference internal\" href=\"#difflib.HtmlDiff\" title=\"difflib.HtmlDiff\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">HtmlDiff</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Initializes instance of ",
        "HtmlDiff",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1110,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<em>tabsize</em> is an optional keyword argument to specify tab stop spacing and\ndefaults to <tt class=\"docutils literal\"><span class=\"pre\">8</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "tabsize",
        " is an optional keyword argument to specify tab stop spacing and\ndefaults to ",
        "8",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1148,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<em>wrapcolumn</em> is an optional keyword to specify column number where lines are\nbroken and wrapped, defaults to <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> where lines are not wrapped.",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "wrapcolumn",
        " is an optional keyword to specify column number where lines are\nbroken and wrapped, defaults to ",
        "None",
        " where lines are not wrapped."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 1186,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "<em>linejunk</em> and <em>charjunk</em> are optional keyword arguments passed into <tt class=\"docutils literal\"><span class=\"pre\">ndiff()</span></tt>\n(used by <a class=\"reference internal\" href=\"#difflib.HtmlDiff\" title=\"difflib.HtmlDiff\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">HtmlDiff</span></tt></a> to generate the side by side HTML differences).  See\n<tt class=\"docutils literal\"><span class=\"pre\">ndiff()</span></tt> documentation for argument default values and descriptions.",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "linejunk",
        " and ",
        "charjunk",
        " are optional keyword arguments passed into ",
        "ndiff()",
        "\n(used by ",
        "HtmlDiff",
        " to generate the side by side HTML differences).  See\n",
        "ndiff()",
        " documentation for argument default values and descriptions."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1246,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The following methods are public:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The following methods are public:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1284,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.HtmlDiff.make_file:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">make_file</tt><big>(</big><em>fromlines</em>, <em>tolines</em>, <em>fromdesc=''</em>, <em>todesc=''</em>, <em>context=False</em>, <em>numlines=5</em><big>)</big><a class=\"headerlink\" href=\"#difflib.HtmlDiff.make_file\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dt#difflib.HtmlDiff.make_file:nth-of-type(1)",
      "text": [
        "make_file",
        "(",
        "fromlines",
        ", ",
        "tolines",
        ", ",
        "fromdesc=''",
        ", ",
        "todesc=''",
        ", ",
        "context=False",
        ", ",
        "numlines=5",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 1310,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Compares <em>fromlines</em> and <em>tolines</em> (lists of strings) and returns a string which\nis a complete HTML file containing a table showing line by line differences with\ninter-line and intra-line changes highlighted.",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Compares ",
        "fromlines",
        " and ",
        "tolines",
        " (lists of strings) and returns a string which\nis a complete HTML file containing a table showing line by line differences with\ninter-line and intra-line changes highlighted."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1370,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<em>fromdesc</em> and <em>todesc</em> are optional keyword arguments to specify from/to file\ncolumn header strings (both default to an empty string).",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "fromdesc",
        " and ",
        "todesc",
        " are optional keyword arguments to specify from/to file\ncolumn header strings (both default to an empty string)."
      ]
    },
    {
      "bound": {
        "height": 88,
        "left": 325,
        "top": 1408,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<em>context</em> and <em>numlines</em> are both optional keyword arguments. Set <em>context</em> to\n<tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> when contextual differences are to be shown, else the default is\n<tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> to show the full files. <em>numlines</em> defaults to <tt class=\"docutils literal\"><span class=\"pre\">5</span></tt>.  When <em>context</em>\nis <tt class=\"xref docutils literal\"><span class=\"pre\">True</span></tt> <em>numlines</em> controls the number of context lines which surround the\ndifference highlights.  When <em>context</em> is <tt class=\"xref docutils literal\"><span class=\"pre\">False</span></tt> <em>numlines</em> controls the\nnumber of lines which are shown before a difference highlight when using the\n“next” hyperlinks (setting to zero would cause the “next” hyperlinks to place\nthe next difference highlight at the top of the browser without any leading\ncontext).",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "context",
        " and ",
        "numlines",
        " are both optional keyword arguments. Set ",
        "context",
        " to\n",
        "True",
        " when contextual differences are to be shown, else the default is\n",
        "False",
        " to show the full files. ",
        "numlines",
        " defaults to ",
        "5",
        ".  When ",
        "context",
        "\nis ",
        "True",
        "numlines",
        " controls the number of context lines which surround the\ndifference highlights.  When ",
        "context",
        " is ",
        "False",
        "numlines",
        " controls the\nnumber of lines which are shown before a difference highlight when using the\n“next” hyperlinks (setting to zero would cause the “next” hyperlinks to place\nthe next difference highlight at the top of the browser without any leading\ncontext)."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 1512,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.HtmlDiff.make_table:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">make_table</tt><big>(</big><em>fromlines</em>, <em>tolines</em>, <em>fromdesc=''</em>, <em>todesc=''</em>, <em>context=False</em>, <em>numlines=5</em><big>)</big><a class=\"headerlink\" href=\"#difflib.HtmlDiff.make_table\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dt#difflib.HtmlDiff.make_table:nth-of-type(1)",
      "text": [
        "make_table",
        "(",
        "fromlines",
        ", ",
        "tolines",
        ", ",
        "fromdesc=''",
        ", ",
        "todesc=''",
        ", ",
        "context=False",
        ", ",
        "numlines=5",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 1538,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Compares <em>fromlines</em> and <em>tolines</em> (lists of strings) and returns a string which\nis a complete HTML table showing line by line differences with inter-line and\nintra-line changes highlighted.",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Compares ",
        "fromlines",
        " and ",
        "tolines",
        " (lists of strings) and returns a string which\nis a complete HTML table showing line by line differences with inter-line and\nintra-line changes highlighted."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 1598,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The arguments for this method are the same as those for the <a class=\"reference internal\" href=\"#difflib.HtmlDiff.make_file\" title=\"difflib.HtmlDiff.make_file\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">make_file()</span></tt></a>\nmethod.",
      "path": "div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The arguments for this method are the same as those for the ",
        "make_file()",
        "\nmethod."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1636,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "<tt class=\"file docutils literal\"><span class=\"pre\">Tools/scripts/diff.py</span></tt> is a command-line front-end to this class and\ncontains a good example of its use.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.class:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Tools/scripts/diff.py",
        " is a command-line front-end to this class and\ncontains a good example of its use."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 1674,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.context_diff:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">context_diff</tt><big>(</big><em>a</em>, <em>b</em>, <em>fromfile=''</em>, <em>tofile=''</em>, <em>fromfiledate=''</em>, <em>tofiledate=''</em>, <em>n=3</em>, <em>lineterm='\\n'</em><big>)</big><a class=\"headerlink\" href=\"#difflib.context_diff\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dt#difflib.context_diff:nth-of-type(1)",
      "text": [
        "difflib.",
        "context_diff",
        "(",
        "a",
        ", ",
        "b",
        ", ",
        "fromfile=''",
        ", ",
        "tofile=''",
        ", ",
        "fromfiledate=''",
        ", ",
        "tofiledate=''",
        ", ",
        "n=3",
        ", ",
        "lineterm='\\n'",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1702,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Compare <em>a</em> and <em>b</em> (lists of strings); return a delta (a <a class=\"reference internal\" href=\"../glossary.html#term-generator\"><em class=\"xref std std-term\">generator</em></a>\ngenerating the delta lines) in context diff format.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Compare ",
        "a",
        " and ",
        "b",
        " (lists of strings); return a delta (a ",
        "generator",
        "\ngenerating the delta lines) in context diff format."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1740,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Context diffs are a compact way of showing just the lines that have changed plus\na few lines of context.  The changes are shown in a before/after style.  The\nnumber of context lines is set by <em>n</em> which defaults to three.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Context diffs are a compact way of showing just the lines that have changed plus\na few lines of context.  The changes are shown in a before/after style.  The\nnumber of context lines is set by ",
        "n",
        " which defaults to three."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1800,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "By default, the diff control lines (those with <tt class=\"docutils literal\"><span class=\"pre\">***</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">---</span></tt>) are created\nwith a trailing newline.  This is helpful so that inputs created from\n<tt class=\"xref py py-func docutils literal\"><span class=\"pre\">file.readlines()</span></tt> result in diffs that are suitable for use with\n<tt class=\"xref py py-func docutils literal\"><span class=\"pre\">file.writelines()</span></tt> since both the inputs and outputs have trailing\nnewlines.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "By default, the diff control lines (those with ",
        "***",
        " or ",
        "---",
        ") are created\nwith a trailing newline.  This is helpful so that inputs created from\n",
        "file.readlines()",
        " result in diffs that are suitable for use with\n",
        "file.writelines()",
        " since both the inputs and outputs have trailing\nnewlines."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 1860,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "For inputs that do not have trailing newlines, set the <em>lineterm</em> argument to\n<tt class=\"docutils literal\"><span class=\"pre\">\"\"</span></tt> so that the output will be uniformly newline free.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "For inputs that do not have trailing newlines, set the ",
        "lineterm",
        " argument to\n",
        "\"\"",
        " so that the output will be uniformly newline free."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 1898,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "The context diff format normally has a header for filenames and modification\ntimes.  Any or all of these may be specified using strings for <em>fromfile</em>,\n<em>tofile</em>, <em>fromfiledate</em>, and <em>tofiledate</em>.  The modification times are normally\nexpressed in the ISO 8601 format. If not specified, the\nstrings default to blanks.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "The context diff format normally has a header for filenames and modification\ntimes.  Any or all of these may be specified using strings for ",
        "fromfile",
        ",\n",
        "tofile",
        ", ",
        "fromfiledate",
        ", and ",
        "tofiledate",
        ".  The modification times are normally\nexpressed in the ISO 8601 format. If not specified, the\nstrings default to blanks."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 1958,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 318,
        "left": 295,
        "top": 1958,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'bacon</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'eggs</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'ham</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'guido</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'python</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'eggy</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'hamster</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'guido</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">context_diff</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">,</span> <span class=\"n\">s2</span><span class=\"p\">,</span> <span class=\"n\">fromfile</span><span class=\"o\">=</span><span class=\"s\">'before.py'</span><span class=\"p\">,</span> <span class=\"n\">tofile</span><span class=\"o\">=</span><span class=\"s\">'after.py'</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>  \n<span class=\"go\">*** before.py</span>\n<span class=\"go\">--- after.py</span>\n<span class=\"go\">***************</span>\n<span class=\"go\">*** 1,4 ****</span>\n<span class=\"go\">! bacon</span>\n<span class=\"go\">! eggs</span>\n<span class=\"go\">! ham</span>\n<span class=\"go\">  guido</span>\n<span class=\"go\">--- 1,4 ----</span>\n<span class=\"go\">! python</span>\n<span class=\"go\">! eggy</span>\n<span class=\"go\">! hamster</span>\n<span class=\"go\">  guido</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s1",
        "=",
        "[",
        "'bacon",
        "\\n",
        "'",
        ",",
        "'eggs",
        "\\n",
        "'",
        ",",
        "'ham",
        "\\n",
        "'",
        ",",
        "'guido",
        "\\n",
        "'",
        "]",
        ">>> ",
        "s2",
        "=",
        "[",
        "'python",
        "\\n",
        "'",
        ",",
        "'eggy",
        "\\n",
        "'",
        ",",
        "'hamster",
        "\\n",
        "'",
        ",",
        "'guido",
        "\\n",
        "'",
        "]",
        ">>> ",
        "for",
        "line",
        "in",
        "context_diff",
        "(",
        "s1",
        ",",
        "s2",
        ",",
        "fromfile",
        "=",
        "'before.py'",
        ",",
        "tofile",
        "=",
        "'after.py'",
        "):",
        "... ",
        "sys",
        ".",
        "stdout",
        ".",
        "write",
        "(",
        "line",
        ")",
        "*** before.py",
        "--- after.py",
        "***************",
        "*** 1,4 ****",
        "! bacon",
        "! eggs",
        "! ham",
        "  guido",
        "--- 1,4 ----",
        "! python",
        "! eggy",
        "! hamster",
        "  guido"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2291,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "See <a class=\"reference internal\" href=\"#difflib-interface\"><em>A command-line interface to difflib</em></a> for a more detailed example.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "See ",
        "A command-line interface to difflib",
        " for a more detailed example."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 2329,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.get_close_matches:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">get_close_matches</tt><big>(</big><em>word</em>, <em>possibilities</em>, <em>n=3</em>, <em>cutoff=0.6</em><big>)</big><a class=\"headerlink\" href=\"#difflib.get_close_matches\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(5) > dt#difflib.get_close_matches:nth-of-type(1)",
      "text": [
        "difflib.",
        "get_close_matches",
        "(",
        "word",
        ", ",
        "possibilities",
        ", ",
        "n=3",
        ", ",
        "cutoff=0.6",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 2357,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a list of the best “good enough” matches.  <em>word</em> is a sequence for which\nclose matches are desired (typically a string), and <em>possibilities</em> is a list of\nsequences against which to match <em>word</em> (typically a list of strings).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a list of the best “good enough” matches.  ",
        "word",
        " is a sequence for which\nclose matches are desired (typically a string), and ",
        "possibilities",
        " is a list of\nsequences against which to match ",
        "word",
        " (typically a list of strings)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2417,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Optional argument <em>n</em> (default <tt class=\"docutils literal\"><span class=\"pre\">3</span></tt>) is the maximum number of close matches to\nreturn; <em>n</em> must be greater than <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Optional argument ",
        "n",
        " (default ",
        "3",
        ") is the maximum number of close matches to\nreturn; ",
        "n",
        " must be greater than ",
        "0",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2455,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Optional argument <em>cutoff</em> (default <tt class=\"docutils literal\"><span class=\"pre\">0.6</span></tt>) is a float in the range [0, 1].\nPossibilities that don’t score at least that similar to <em>word</em> are ignored.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Optional argument ",
        "cutoff",
        " (default ",
        "0.6",
        ") is a float in the range [0, 1].\nPossibilities that don’t score at least that similar to ",
        "word",
        " are ignored."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2493,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The best (no more than <em>n</em>) matches among the possibilities are returned in a\nlist, sorted by similarity score, most similar first.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "The best (no more than ",
        "n",
        ") matches among the possibilities are returned in a\nlist, sorted by similarity score, most similar first."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 2531,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 174,
        "left": 295,
        "top": 2531,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_close_matches</span><span class=\"p\">(</span><span class=\"s\">'appel'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s\">'ape'</span><span class=\"p\">,</span> <span class=\"s\">'apple'</span><span class=\"p\">,</span> <span class=\"s\">'peach'</span><span class=\"p\">,</span> <span class=\"s\">'puppy'</span><span class=\"p\">])</span>\n<span class=\"go\">['apple', 'ape']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">keyword</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_close_matches</span><span class=\"p\">(</span><span class=\"s\">'wheel'</span><span class=\"p\">,</span> <span class=\"n\">keyword</span><span class=\"o\">.</span><span class=\"n\">kwlist</span><span class=\"p\">)</span>\n<span class=\"go\">['while']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_close_matches</span><span class=\"p\">(</span><span class=\"s\">'apple'</span><span class=\"p\">,</span> <span class=\"n\">keyword</span><span class=\"o\">.</span><span class=\"n\">kwlist</span><span class=\"p\">)</span>\n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get_close_matches</span><span class=\"p\">(</span><span class=\"s\">'accept'</span><span class=\"p\">,</span> <span class=\"n\">keyword</span><span class=\"o\">.</span><span class=\"n\">kwlist</span><span class=\"p\">)</span>\n<span class=\"go\">['except']</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "get_close_matches",
        "(",
        "'appel'",
        ",",
        "[",
        "'ape'",
        ",",
        "'apple'",
        ",",
        "'peach'",
        ",",
        "'puppy'",
        "])",
        "['apple', 'ape']",
        ">>> ",
        "import",
        "keyword",
        ">>> ",
        "get_close_matches",
        "(",
        "'wheel'",
        ",",
        "keyword",
        ".",
        "kwlist",
        ")",
        "['while']",
        ">>> ",
        "get_close_matches",
        "(",
        "'apple'",
        ",",
        "keyword",
        ".",
        "kwlist",
        ")",
        "[]",
        ">>> ",
        "get_close_matches",
        "(",
        "'accept'",
        ",",
        "keyword",
        ".",
        "kwlist",
        ")",
        "['except']"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 2721,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.ndiff:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">ndiff</tt><big>(</big><em>a</em>, <em>b</em>, <em>linejunk=None</em>, <em>charjunk=IS_CHARACTER_JUNK</em><big>)</big><a class=\"headerlink\" href=\"#difflib.ndiff\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dt#difflib.ndiff:nth-of-type(1)",
      "text": [
        "difflib.",
        "ndiff",
        "(",
        "a",
        ", ",
        "b",
        ", ",
        "linejunk=None",
        ", ",
        "charjunk=IS_CHARACTER_JUNK",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2749,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Compare <em>a</em> and <em>b</em> (lists of strings); return a <a class=\"reference internal\" href=\"#difflib.Differ\" title=\"difflib.Differ\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Differ</span></tt></a>-style\ndelta (a <a class=\"reference internal\" href=\"../glossary.html#term-generator\"><em class=\"xref std std-term\">generator</em></a> generating the delta lines).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Compare ",
        "a",
        " and ",
        "b",
        " (lists of strings); return a ",
        "Differ",
        "-style\ndelta (a ",
        "generator",
        " generating the delta lines)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2787,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Optional keyword parameters <em>linejunk</em> and <em>charjunk</em> are for filter functions\n(or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>):",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Optional keyword parameters ",
        "linejunk",
        " and ",
        "charjunk",
        " are for filter functions\n(or ",
        "None",
        "):"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 2825,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<em>linejunk</em>: A function that accepts a single string argument, and returns\ntrue if the string is junk, or false if not. The default is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>. There\nis also a module-level function <a class=\"reference internal\" href=\"#difflib.IS_LINE_JUNK\" title=\"difflib.IS_LINE_JUNK\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">IS_LINE_JUNK()</span></tt></a>, which filters out lines\nwithout visible characters, except for at most one pound character (<tt class=\"docutils literal\"><span class=\"pre\">'#'</span></tt>)\n– however the underlying <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> class does a dynamic\nanalysis of which lines are so frequent as to constitute noise, and this\nusually works better than using this function.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "linejunk",
        ": A function that accepts a single string argument, and returns\ntrue if the string is junk, or false if not. The default is ",
        "None",
        ". There\nis also a module-level function ",
        "IS_LINE_JUNK()",
        ", which filters out lines\nwithout visible characters, except for at most one pound character (",
        "'#'",
        ")\n– however the underlying ",
        "SequenceMatcher",
        " class does a dynamic\nanalysis of which lines are so frequent as to constitute noise, and this\nusually works better than using this function."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 2907,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "<em>charjunk</em>: A function that accepts a character (a string of length 1), and\nreturns if the character is junk, or false if not. The default is module-level\nfunction <a class=\"reference internal\" href=\"#difflib.IS_CHARACTER_JUNK\" title=\"difflib.IS_CHARACTER_JUNK\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">IS_CHARACTER_JUNK()</span></tt></a>, which filters out whitespace characters (a\nblank or tab; note: bad idea to include newline in this!).",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "charjunk",
        ": A function that accepts a character (a string of length 1), and\nreturns if the character is junk, or false if not. The default is module-level\nfunction ",
        "IS_CHARACTER_JUNK()",
        ", which filters out whitespace characters (a\nblank or tab; note: bad idea to include newline in this!)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 2967,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "<tt class=\"file docutils literal\"><span class=\"pre\">Tools/scripts/ndiff.py</span></tt> is a command-line front-end to this function.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "Tools/scripts/ndiff.py",
        " is a command-line front-end to this function."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 3005,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 295,
        "top": 3005,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">ndiff</span><span class=\"p\">(</span><span class=\"s\">'one</span><span class=\"se\">\\n</span><span class=\"s\">two</span><span class=\"se\">\\n</span><span class=\"s\">three</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>             <span class=\"s\">'ore</span><span class=\"se\">\\n</span><span class=\"s\">tree</span><span class=\"se\">\\n</span><span class=\"s\">emu</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"p\">),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"p\">)</span>\n<span class=\"go\">- one</span>\n<span class=\"go\">?  ^</span>\n<span class=\"go\">+ ore</span>\n<span class=\"go\">?  ^</span>\n<span class=\"go\">- two</span>\n<span class=\"go\">- three</span>\n<span class=\"go\">?  -</span>\n<span class=\"go\">+ tree</span>\n<span class=\"go\">+ emu</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(6) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "diff",
        "=",
        "ndiff",
        "(",
        "'one",
        "\\n",
        "two",
        "\\n",
        "three",
        "\\n",
        "'",
        ".",
        "splitlines",
        "(",
        "1",
        "),",
        "... ",
        "'ore",
        "\\n",
        "tree",
        "\\n",
        "emu",
        "\\n",
        "'",
        ".",
        "splitlines",
        "(",
        "1",
        "))",
        ">>> ",
        "print",
        "(",
        "''",
        ".",
        "join",
        "(",
        "diff",
        "),",
        "end",
        "=",
        "\"\"",
        ")",
        "- one",
        "?  ^",
        "+ ore",
        "?  ^",
        "- two",
        "- three",
        "?  -",
        "+ tree",
        "+ emu"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 3249,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.restore:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">restore</tt><big>(</big><em>sequence</em>, <em>which</em><big>)</big><a class=\"headerlink\" href=\"#difflib.restore\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(7) > dt#difflib.restore:nth-of-type(1)",
      "text": [
        "difflib.",
        "restore",
        "(",
        "sequence",
        ", ",
        "which",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3277,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return one of the two sequences that generated a delta.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return one of the two sequences that generated a delta."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3315,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Given a <em>sequence</em> produced by <a class=\"reference internal\" href=\"#difflib.Differ.compare\" title=\"difflib.Differ.compare\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">Differ.compare()</span></tt></a> or <a class=\"reference internal\" href=\"#difflib.ndiff\" title=\"difflib.ndiff\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ndiff()</span></tt></a>, extract\nlines originating from file 1 or 2 (parameter <em>which</em>), stripping off line\nprefixes.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Given a ",
        "sequence",
        " produced by ",
        "Differ.compare()",
        " or ",
        "ndiff()",
        ", extract\nlines originating from file 1 or 2 (parameter ",
        "which",
        "), stripping off line\nprefixes."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3353,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Example:",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "Example:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 3391,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 210,
        "left": 295,
        "top": 3391,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">ndiff</span><span class=\"p\">(</span><span class=\"s\">'one</span><span class=\"se\">\\n</span><span class=\"s\">two</span><span class=\"se\">\\n</span><span class=\"s\">three</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>             <span class=\"s\">'ore</span><span class=\"se\">\\n</span><span class=\"s\">tree</span><span class=\"se\">\\n</span><span class=\"s\">emu</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"p\">)</span> <span class=\"c\"># materialize the generated delta into a list</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">restore</span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"p\">)</span>\n<span class=\"go\">one</span>\n<span class=\"go\">two</span>\n<span class=\"go\">three</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">''</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">restore</span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)),</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s\">\"\"</span><span class=\"p\">)</span>\n<span class=\"go\">ore</span>\n<span class=\"go\">tree</span>\n<span class=\"go\">emu</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(7) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "diff",
        "=",
        "ndiff",
        "(",
        "'one",
        "\\n",
        "two",
        "\\n",
        "three",
        "\\n",
        "'",
        ".",
        "splitlines",
        "(",
        "1",
        "),",
        "... ",
        "'ore",
        "\\n",
        "tree",
        "\\n",
        "emu",
        "\\n",
        "'",
        ".",
        "splitlines",
        "(",
        "1",
        "))",
        ">>> ",
        "diff",
        "=",
        "list",
        "(",
        "diff",
        ")",
        "# materialize the generated delta into a list",
        ">>> ",
        "print",
        "(",
        "''",
        ".",
        "join",
        "(",
        "restore",
        "(",
        "diff",
        ",",
        "1",
        ")),",
        "end",
        "=",
        "\"\"",
        ")",
        "one",
        "two",
        "three",
        ">>> ",
        "print",
        "(",
        "''",
        ".",
        "join",
        "(",
        "restore",
        "(",
        "diff",
        ",",
        "2",
        ")),",
        "end",
        "=",
        "\"\"",
        ")",
        "ore",
        "tree",
        "emu"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 3617,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.unified_diff:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">unified_diff</tt><big>(</big><em>a</em>, <em>b</em>, <em>fromfile=''</em>, <em>tofile=''</em>, <em>fromfiledate=''</em>, <em>tofiledate=''</em>, <em>n=3</em>, <em>lineterm='\\n'</em><big>)</big><a class=\"headerlink\" href=\"#difflib.unified_diff\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dt#difflib.unified_diff:nth-of-type(1)",
      "text": [
        "difflib.",
        "unified_diff",
        "(",
        "a",
        ", ",
        "b",
        ", ",
        "fromfile=''",
        ", ",
        "tofile=''",
        ", ",
        "fromfiledate=''",
        ", ",
        "tofiledate=''",
        ", ",
        "n=3",
        ", ",
        "lineterm='\\n'",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3645,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Compare <em>a</em> and <em>b</em> (lists of strings); return a delta (a <a class=\"reference internal\" href=\"../glossary.html#term-generator\"><em class=\"xref std std-term\">generator</em></a>\ngenerating the delta lines) in unified diff format.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Compare ",
        "a",
        " and ",
        "b",
        " (lists of strings); return a delta (a ",
        "generator",
        "\ngenerating the delta lines) in unified diff format."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 3683,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Unified diffs are a compact way of showing just the lines that have changed plus\na few lines of context.  The changes are shown in a inline style (instead of\nseparate before/after blocks).  The number of context lines is set by <em>n</em> which\ndefaults to three.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Unified diffs are a compact way of showing just the lines that have changed plus\na few lines of context.  The changes are shown in a inline style (instead of\nseparate before/after blocks).  The number of context lines is set by ",
        "n",
        " which\ndefaults to three."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 3743,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "By default, the diff control lines (those with <tt class=\"docutils literal\"><span class=\"pre\">---</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">+++</span></tt>, or <tt class=\"docutils literal\"><span class=\"pre\">@@</span></tt>) are\ncreated with a trailing newline.  This is helpful so that inputs created from\n<tt class=\"xref py py-func docutils literal\"><span class=\"pre\">file.readlines()</span></tt> result in diffs that are suitable for use with\n<tt class=\"xref py py-func docutils literal\"><span class=\"pre\">file.writelines()</span></tt> since both the inputs and outputs have trailing\nnewlines.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "By default, the diff control lines (those with ",
        "---",
        ", ",
        "+++",
        ", or ",
        "@@",
        ") are\ncreated with a trailing newline.  This is helpful so that inputs created from\n",
        "file.readlines()",
        " result in diffs that are suitable for use with\n",
        "file.writelines()",
        " since both the inputs and outputs have trailing\nnewlines."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 3803,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "For inputs that do not have trailing newlines, set the <em>lineterm</em> argument to\n<tt class=\"docutils literal\"><span class=\"pre\">\"\"</span></tt> so that the output will be uniformly newline free.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "For inputs that do not have trailing newlines, set the ",
        "lineterm",
        " argument to\n",
        "\"\"",
        " so that the output will be uniformly newline free."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 3841,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "The context diff format normally has a header for filenames and modification\ntimes.  Any or all of these may be specified using strings for <em>fromfile</em>,\n<em>tofile</em>, <em>fromfiledate</em>, and <em>tofiledate</em>.  The modification times are normally\nexpressed in the ISO 8601 format. If not specified, the\nstrings default to blanks.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "The context diff format normally has a header for filenames and modification\ntimes.  Any or all of these may be specified using strings for ",
        "fromfile",
        ",\n",
        "tofile",
        ", ",
        "fromfiledate",
        ", and ",
        "tofiledate",
        ".  The modification times are normally\nexpressed in the ISO 8601 format. If not specified, the\nstrings default to blanks."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 3901,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 295,
        "top": 3901,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'bacon</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'eggs</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'ham</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'guido</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'python</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'eggy</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'hamster</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">,</span> <span class=\"s\">'guido</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">unified_diff</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">,</span> <span class=\"n\">s2</span><span class=\"p\">,</span> <span class=\"n\">fromfile</span><span class=\"o\">=</span><span class=\"s\">'before.py'</span><span class=\"p\">,</span> <span class=\"n\">tofile</span><span class=\"o\">=</span><span class=\"s\">'after.py'</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>   \n<span class=\"go\">--- before.py</span>\n<span class=\"go\">+++ after.py</span>\n<span class=\"go\">@@ -1,4 +1,4 @@</span>\n<span class=\"go\">-bacon</span>\n<span class=\"go\">-eggs</span>\n<span class=\"go\">-ham</span>\n<span class=\"go\">+python</span>\n<span class=\"go\">+eggy</span>\n<span class=\"go\">+hamster</span>\n<span class=\"go\"> guido</span>\n",
      "path": "div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s1",
        "=",
        "[",
        "'bacon",
        "\\n",
        "'",
        ",",
        "'eggs",
        "\\n",
        "'",
        ",",
        "'ham",
        "\\n",
        "'",
        ",",
        "'guido",
        "\\n",
        "'",
        "]",
        ">>> ",
        "s2",
        "=",
        "[",
        "'python",
        "\\n",
        "'",
        ",",
        "'eggy",
        "\\n",
        "'",
        ",",
        "'hamster",
        "\\n",
        "'",
        ",",
        "'guido",
        "\\n",
        "'",
        "]",
        ">>> ",
        "for",
        "line",
        "in",
        "unified_diff",
        "(",
        "s1",
        ",",
        "s2",
        ",",
        "fromfile",
        "=",
        "'before.py'",
        ",",
        "tofile",
        "=",
        "'after.py'",
        "):",
        "... ",
        "sys",
        ".",
        "stdout",
        ".",
        "write",
        "(",
        "line",
        ")",
        "--- before.py",
        "+++ after.py",
        "@@ -1,4 +1,4 @@",
        "-bacon",
        "-eggs",
        "-ham",
        "+python",
        "+eggy",
        "+hamster",
        " guido"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4180,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "See <a class=\"reference internal\" href=\"#difflib-interface\"><em>A command-line interface to difflib</em></a> for a more detailed example.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "See ",
        "A command-line interface to difflib",
        " for a more detailed example."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4218,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.IS_LINE_JUNK:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">IS_LINE_JUNK</tt><big>(</big><em>line</em><big>)</big><a class=\"headerlink\" href=\"#difflib.IS_LINE_JUNK\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(9) > dt#difflib.IS_LINE_JUNK:nth-of-type(1)",
      "text": [
        "difflib.",
        "IS_LINE_JUNK",
        "(",
        "line",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4246,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true for ignorable lines.  The line <em>line</em> is ignorable if <em>line</em> is\nblank or contains a single <tt class=\"docutils literal\"><span class=\"pre\">'#'</span></tt>, otherwise it is not ignorable.  Used as a\ndefault for parameter <em>linejunk</em> in <a class=\"reference internal\" href=\"#difflib.ndiff\" title=\"difflib.ndiff\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ndiff()</span></tt></a> in older versions.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true for ignorable lines.  The line ",
        "line",
        " is ignorable if ",
        "line",
        " is\nblank or contains a single ",
        "'#'",
        ", otherwise it is not ignorable.  Used as a\ndefault for parameter ",
        "linejunk",
        " in ",
        "ndiff()",
        " in older versions."
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4306,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt#difflib.IS_CHARACTER_JUNK:nth-of-type(1)",
      "html": "\n<tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">IS_CHARACTER_JUNK</tt><big>(</big><em>ch</em><big>)</big><a class=\"headerlink\" href=\"#difflib.IS_CHARACTER_JUNK\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(10) > dt#difflib.IS_CHARACTER_JUNK:nth-of-type(1)",
      "text": [
        "difflib.",
        "IS_CHARACTER_JUNK",
        "(",
        "ch",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4334,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return true for ignorable characters.  The character <em>ch</em> is ignorable if <em>ch</em>\nis a space or tab, otherwise it is not ignorable.  Used as a default for\nparameter <em>charjunk</em> in <a class=\"reference internal\" href=\"#difflib.ndiff\" title=\"difflib.ndiff\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">ndiff()</span></tt></a>.",
      "path": "div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > dl.function:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return true for ignorable characters.  The character ",
        "ch",
        " is ignorable if ",
        "ch",
        "\nis a space or tab, otherwise it is not ignorable.  Used as a default for\nparameter ",
        "charjunk",
        " in ",
        "ndiff()",
        "."
      ]
    },
    {
      "bound": {
        "height": 106,
        "left": 265,
        "top": 4372,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><a class=\"reference external\" href=\"http://www.ddj.com/184407970?pgno=5\">Pattern Matching: The Gestalt Approach</a></dt>\n<dd>Discussion of a similar algorithm by John W. Ratcliff and D. E. Metzener. This\nwas published in <a class=\"reference external\" href=\"http://www.ddj.com/\">Dr. Dobb’s Journal</a> in July, 1988.</dd>\n</dl>\n",
      "path": "div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div.admonition.admonition-see-also.seealso:nth-of-type(1)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 273,
        "top": 4418,
        "width": 1303
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "font-weight": "bold",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "<a class=\"reference external\" href=\"http://www.ddj.com/184407970?pgno=5\">Pattern Matching: The Gestalt Approach</a>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "Pattern Matching: The Gestalt Approach"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 303,
        "top": 4440,
        "width": 1273
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-bottom": "10px",
        "margin-left": "30px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dd:nth-of-type(1)",
      "html": "Discussion of a similar algorithm by John W. Ratcliff and D. E. Metzener. This\nwas published in <a class=\"reference external\" href=\"http://www.ddj.com/\">Dr. Dobb’s Journal</a> in July, 1988.",
      "path": "div > div > div > div > div > div > dl > dd",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div.admonition.admonition-see-also.seealso:nth-of-type(1) > dl.docutils.last:nth-of-type(1) > dd:nth-of-type(1)",
      "text": [
        "Discussion of a similar algorithm by John W. Ratcliff and D. E. Metzener. This\nwas published in ",
        "Dr. Dobb’s Journal",
        " in July, 1988."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 4488,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.3.1. SequenceMatcher Objects<a class=\"headerlink\" href=\"#sequencematcher-objects\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > h2:nth-of-type(1)",
      "text": [
        "6.3.1. SequenceMatcher Objects",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 4550,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> class has this constructor:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > p:nth-of-type(1)",
      "text": [
        "The ",
        "SequenceMatcher",
        " class has this constructor:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 4588,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">SequenceMatcher</tt><big>(</big><em>isjunk=None</em>, <em>a=''</em>, <em>b=''</em>, <em>autojunk=True</em><big>)</big>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "class ",
        "difflib.",
        "SequenceMatcher",
        "(",
        "isjunk=None",
        ", ",
        "a=''",
        ", ",
        "b=''",
        ", ",
        "autojunk=True",
        ")"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 4616,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Optional argument <em>isjunk</em> must be <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> (the default) or a one-argument\nfunction that takes a sequence element and returns true if and only if the\nelement is “junk” and should be ignored. Passing <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt> for <em>isjunk</em> is\nequivalent to passing <tt class=\"docutils literal\"><span class=\"pre\">lambda</span> <span class=\"pre\">x:</span> <span class=\"pre\">0</span></tt>; in other words, no elements are ignored.\nFor example, pass:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Optional argument ",
        "isjunk",
        " must be ",
        "None",
        " (the default) or a one-argument\nfunction that takes a sequence element and returns true if and only if the\nelement is “junk” and should be ignored. Passing ",
        "None",
        " for ",
        "isjunk",
        " is\nequivalent to passing ",
        "lambda",
        "x:",
        "0",
        "; in other words, no elements are ignored.\nFor example, pass:"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 295,
        "top": 4676,
        "width": 1289
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"s\">\" </span><span class=\"se\">\\t</span><span class=\"s\">\"</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "lambda",
        "x",
        ":",
        "x",
        "in",
        "\" ",
        "\\t",
        "\""
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4721,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "if you’re comparing lines as sequences of characters, and don’t want to synch up\non blanks or hard tabs.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "if you’re comparing lines as sequences of characters, and don’t want to synch up\non blanks or hard tabs."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4759,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The optional arguments <em>a</em> and <em>b</em> are sequences to be compared; both default to\nempty strings.  The elements of both sequences must be <a class=\"reference internal\" href=\"../glossary.html#term-hashable\"><em class=\"xref std std-term\">hashable</em></a>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The optional arguments ",
        "a",
        " and ",
        "b",
        " are sequences to be compared; both default to\nempty strings.  The elements of both sequences must be ",
        "hashable",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4797,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "The optional argument <em>autojunk</em> can be used to disable the automatic junk\nheuristic.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "The optional argument ",
        "autojunk",
        " can be used to disable the automatic junk\nheuristic."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4835,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(5)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2:</span> The <em>autojunk</em> parameter.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p.versionadded:nth-of-type(5)",
      "text": [
        "New in version 3.2:",
        " The ",
        "autojunk",
        " parameter."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 295,
        "top": 4873,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "SequenceMatcher objects get three data attributes: <em>bjunk</em> is the\nset of elements of <em>b</em> for which <em>isjunk</em> is True; <em>bpopular</em> is the set of\nnon-junk elements considered popular by the heuristic (if it is not\ndisabled); <em>b2j</em> is a dict mapping the remaining elements of <em>b</em> to a list\nof positions where they occur. All three are reset whenever <em>b</em> is reset\nwith <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.set_seqs\" title=\"difflib.SequenceMatcher.set_seqs\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">set_seqs()</span></tt></a> or <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.set_seq2\" title=\"difflib.SequenceMatcher.set_seq2\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">set_seq2()</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "SequenceMatcher objects get three data attributes: ",
        "bjunk",
        " is the\nset of elements of ",
        "b",
        " for which ",
        "isjunk",
        " is True; ",
        "bpopular",
        " is the set of\nnon-junk elements considered popular by the heuristic (if it is not\ndisabled); ",
        "b2j",
        " is a dict mapping the remaining elements of ",
        "b",
        " to a list\nof positions where they occur. All three are reset whenever ",
        "b",
        " is reset\nwith ",
        "set_seqs()",
        " or ",
        "set_seq2()",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4955,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p.versionadded:nth-of-type(7)",
      "html": "\n<span class=\"versionmodified\">New in version 3.2:</span> The <em>bjunk</em> and <em>bpopular</em> attributes.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p.versionadded:nth-of-type(7)",
      "text": [
        "New in version 3.2:",
        " The ",
        "bjunk",
        " and ",
        "bpopular",
        " attributes."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 4993,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(8)",
      "html": "<a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> objects have the following methods:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(8)",
      "text": [
        "SequenceMatcher",
        " objects have the following methods:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 5031,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.set_seqs:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">set_seqs</tt><big>(</big><em>a</em>, <em>b</em><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.set_seqs\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dt#difflib.SequenceMatcher.set_seqs:nth-of-type(1)",
      "text": [
        "set_seqs",
        "(",
        "a",
        ", ",
        "b",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 5057,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Set the two sequences to be compared.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Set the two sequences to be compared."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 5095,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(9)",
      "html": "<a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> computes and caches detailed information about the\nsecond sequence, so if you want to compare one sequence against many\nsequences, use <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.set_seq2\" title=\"difflib.SequenceMatcher.set_seq2\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">set_seq2()</span></tt></a> to set the commonly used sequence once and\ncall <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.set_seq1\" title=\"difflib.SequenceMatcher.set_seq1\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">set_seq1()</span></tt></a> repeatedly, once for each of the other sequences.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(9)",
      "text": [
        "SequenceMatcher",
        " computes and caches detailed information about the\nsecond sequence, so if you want to compare one sequence against many\nsequences, use ",
        "set_seq2()",
        " to set the commonly used sequence once and\ncall ",
        "set_seq1()",
        " repeatedly, once for each of the other sequences."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 5155,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.set_seq1:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">set_seq1</tt><big>(</big><em>a</em><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.set_seq1\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dt#difflib.SequenceMatcher.set_seq1:nth-of-type(1)",
      "text": [
        "set_seq1",
        "(",
        "a",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 5181,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Set the first sequence to be compared.  The second sequence to be compared\nis not changed.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(2) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Set the first sequence to be compared.  The second sequence to be compared\nis not changed."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 5219,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.set_seq2:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">set_seq2</tt><big>(</big><em>b</em><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.set_seq2\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dt#difflib.SequenceMatcher.set_seq2:nth-of-type(1)",
      "text": [
        "set_seq2",
        "(",
        "b",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 5245,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Set the second sequence to be compared.  The first sequence to be compared\nis not changed.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(3) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Set the second sequence to be compared.  The first sequence to be compared\nis not changed."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 5283,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.find_longest_match:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">find_longest_match</tt><big>(</big><em>alo</em>, <em>ahi</em>, <em>blo</em>, <em>bhi</em><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.find_longest_match\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dt#difflib.SequenceMatcher.find_longest_match:nth-of-type(1)",
      "text": [
        "find_longest_match",
        "(",
        "alo",
        ", ",
        "ahi",
        ", ",
        "blo",
        ", ",
        "bhi",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 5309,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Find longest matching block in <tt class=\"docutils literal\"><span class=\"pre\">a[alo:ahi]</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">b[blo:bhi]</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Find longest matching block in ",
        "a[alo:ahi]",
        " and ",
        "b[blo:bhi]",
        "."
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 5347,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "If <em>isjunk</em> was omitted or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.find_longest_match\" title=\"difflib.SequenceMatcher.find_longest_match\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">find_longest_match()</span></tt></a> returns\n<tt class=\"docutils literal\"><span class=\"pre\">(i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">k)</span></tt> such that <tt class=\"docutils literal\"><span class=\"pre\">a[i:i+k]</span></tt> is equal to <tt class=\"docutils literal\"><span class=\"pre\">b[j:j+k]</span></tt>, where <tt class=\"docutils literal\"><span class=\"pre\">alo</span>\n<span class=\"pre\">&lt;=</span> <span class=\"pre\">i</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">i+k</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">ahi</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">blo</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">j</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">j+k</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">bhi</span></tt>. For all <tt class=\"docutils literal\"><span class=\"pre\">(i',</span> <span class=\"pre\">j',</span>\n<span class=\"pre\">k')</span></tt> meeting those conditions, the additional conditions <tt class=\"docutils literal\"><span class=\"pre\">k</span> <span class=\"pre\">&gt;=</span> <span class=\"pre\">k'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">i</span>\n<span class=\"pre\">&lt;=</span> <span class=\"pre\">i'</span></tt>, and if <tt class=\"docutils literal\"><span class=\"pre\">i</span> <span class=\"pre\">==</span> <span class=\"pre\">i'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">j</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">j'</span></tt> are also met. In other words, of\nall maximal matching blocks, return one that starts earliest in <em>a</em>, and\nof all those maximal matching blocks that start earliest in <em>a</em>, return\nthe one that starts earliest in <em>b</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "If ",
        "isjunk",
        " was omitted or ",
        "None",
        ", ",
        "find_longest_match()",
        " returns\n",
        "(i,",
        "j,",
        "k)",
        " such that ",
        "a[i:i+k]",
        " is equal to ",
        "b[j:j+k]",
        ", where ",
        "alo",
        "<=",
        "i",
        "<=",
        "i+k",
        "<=",
        "ahi",
        " and ",
        "blo",
        "<=",
        "j",
        "<=",
        "j+k",
        "<=",
        "bhi",
        ". For all ",
        "(i',",
        "j',",
        "k')",
        " meeting those conditions, the additional conditions ",
        "k",
        ">=",
        "k'",
        ", ",
        "i",
        "<=",
        "i'",
        ", and if ",
        "i",
        "==",
        "i'",
        ", ",
        "j",
        "<=",
        "j'",
        " are also met. In other words, of\nall maximal matching blocks, return one that starts earliest in ",
        "a",
        ", and\nof all those maximal matching blocks that start earliest in ",
        "a",
        ", return\nthe one that starts earliest in ",
        "b",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 5429,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 5429,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SequenceMatcher</span><span class=\"p\">(</span><span class=\"k\">None</span><span class=\"p\">,</span> <span class=\"s\">\" abcd\"</span><span class=\"p\">,</span> <span class=\"s\">\"abcd abcd\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">find_longest_match</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"go\">Match(a=0, b=4, size=5)</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s",
        "=",
        "SequenceMatcher",
        "(",
        "None",
        ",",
        "\" abcd\"",
        ",",
        "\"abcd abcd\"",
        ")",
        ">>> ",
        "s",
        ".",
        "find_longest_match",
        "(",
        "0",
        ",",
        "5",
        ",",
        "0",
        ",",
        "9",
        ")",
        "Match(a=0, b=4, size=5)"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 5510,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If <em>isjunk</em> was provided, first the longest matching block is determined\nas above, but with the additional restriction that no junk element appears\nin the block.  Then that block is extended as far as possible by matching\n(only) junk elements on both sides. So the resulting block never matches\non junk except as identical junk happens to be adjacent to an interesting\nmatch.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "If ",
        "isjunk",
        " was provided, first the longest matching block is determined\nas above, but with the additional restriction that no junk element appears\nin the block.  Then that block is extended as far as possible by matching\n(only) junk elements on both sides. So the resulting block never matches\non junk except as identical junk happens to be adjacent to an interesting\nmatch."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 5592,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Here’s the same example as before, but considering blanks to be junk. That\nprevents <tt class=\"docutils literal\"><span class=\"pre\">'</span> <span class=\"pre\">abcd'</span></tt> from matching the <tt class=\"docutils literal\"><span class=\"pre\">'</span> <span class=\"pre\">abcd'</span></tt> at the tail end of the\nsecond sequence directly.  Instead only the <tt class=\"docutils literal\"><span class=\"pre\">'abcd'</span></tt> can match, and\nmatches the leftmost <tt class=\"docutils literal\"><span class=\"pre\">'abcd'</span></tt> in the second sequence:",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Here’s the same example as before, but considering blanks to be junk. That\nprevents ",
        "'",
        "abcd'",
        " from matching the ",
        "'",
        "abcd'",
        " at the tail end of the\nsecond sequence directly.  Instead only the ",
        "'abcd'",
        " can match, and\nmatches the leftmost ",
        "'abcd'",
        " in the second sequence:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 5652,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 5652,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SequenceMatcher</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">==</span><span class=\"s\">\" \"</span><span class=\"p\">,</span> <span class=\"s\">\" abcd\"</span><span class=\"p\">,</span> <span class=\"s\">\"abcd abcd\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">find_longest_match</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"go\">Match(a=1, b=0, size=4)</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s",
        "=",
        "SequenceMatcher",
        "(",
        "lambda",
        "x",
        ":",
        "x",
        "==",
        "\" \"",
        ",",
        "\" abcd\"",
        ",",
        "\"abcd abcd\"",
        ")",
        ">>> ",
        "s",
        ".",
        "find_longest_match",
        "(",
        "0",
        ",",
        "5",
        ",",
        "0",
        ",",
        "9",
        ")",
        "Match(a=1, b=0, size=4)"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 5733,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "If no blocks match, this returns <tt class=\"docutils literal\"><span class=\"pre\">(alo,</span> <span class=\"pre\">blo,</span> <span class=\"pre\">0)</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(5)",
      "text": [
        "If no blocks match, this returns ",
        "(alo,",
        "blo,",
        "0)",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 5771,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "This method returns a <a class=\"reference internal\" href=\"../glossary.html#term-named-tuple\"><em class=\"xref std std-term\">named tuple</em></a> <tt class=\"docutils literal\"><span class=\"pre\">Match(a,</span> <span class=\"pre\">b,</span> <span class=\"pre\">size)</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(4) > dd:nth-of-type(1) > p:nth-of-type(6)",
      "text": [
        "This method returns a ",
        "named tuple",
        "Match(a,",
        "b,",
        "size)",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 5809,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.get_matching_blocks:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">get_matching_blocks</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.get_matching_blocks\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dt#difflib.SequenceMatcher.get_matching_blocks:nth-of-type(1)",
      "text": [
        "get_matching_blocks",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 5835,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return list of triples describing matching subsequences. Each triple is of\nthe form <tt class=\"docutils literal\"><span class=\"pre\">(i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">n)</span></tt>, and means that <tt class=\"docutils literal\"><span class=\"pre\">a[i:i+n]</span> <span class=\"pre\">==</span> <span class=\"pre\">b[j:j+n]</span></tt>.  The\ntriples are monotonically increasing in <em>i</em> and <em>j</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return list of triples describing matching subsequences. Each triple is of\nthe form ",
        "(i,",
        "j,",
        "n)",
        ", and means that ",
        "a[i:i+n]",
        "==",
        "b[j:j+n]",
        ".  The\ntriples are monotonically increasing in ",
        "i",
        " and ",
        "j",
        "."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 5895,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The last triple is a dummy, and has the value <tt class=\"docutils literal\"><span class=\"pre\">(len(a),</span> <span class=\"pre\">len(b),</span> <span class=\"pre\">0)</span></tt>.  It\nis the only triple with <tt class=\"docutils literal\"><span class=\"pre\">n</span> <span class=\"pre\">==</span> <span class=\"pre\">0</span></tt>.  If <tt class=\"docutils literal\"><span class=\"pre\">(i,</span> <span class=\"pre\">j,</span> <span class=\"pre\">n)</span></tt> and <tt class=\"docutils literal\"><span class=\"pre\">(i',</span> <span class=\"pre\">j',</span> <span class=\"pre\">n')</span></tt>\nare adjacent triples in the list, and the second is not the last triple in\nthe list, then <tt class=\"docutils literal\"><span class=\"pre\">i+n</span> <span class=\"pre\">!=</span> <span class=\"pre\">i'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">j+n</span> <span class=\"pre\">!=</span> <span class=\"pre\">j'</span></tt>; in other words, adjacent\ntriples always describe non-adjacent equal blocks.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The last triple is a dummy, and has the value ",
        "(len(a),",
        "len(b),",
        "0)",
        ".  It\nis the only triple with ",
        "n",
        "==",
        "0",
        ".  If ",
        "(i,",
        "j,",
        "n)",
        " and ",
        "(i',",
        "j',",
        "n')",
        "\nare adjacent triples in the list, and the second is not the last triple in\nthe list, then ",
        "i+n",
        "!=",
        "i'",
        " or ",
        "j+n",
        "!=",
        "j'",
        "; in other words, adjacent\ntriples always describe non-adjacent equal blocks."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1554,
        "top": 5955,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 325,
        "top": 5955,
        "width": 1259
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SequenceMatcher</span><span class=\"p\">(</span><span class=\"k\">None</span><span class=\"p\">,</span> <span class=\"s\">\"abxcd\"</span><span class=\"p\">,</span> <span class=\"s\">\"abcd\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_matching_blocks</span><span class=\"p\">()</span>\n<span class=\"go\">[Match(a=0, b=0, size=2), Match(a=3, b=2, size=2), Match(a=5, b=4, size=0)]</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(5) > dd:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s",
        "=",
        "SequenceMatcher",
        "(",
        "None",
        ",",
        "\"abxcd\"",
        ",",
        "\"abcd\"",
        ")",
        ">>> ",
        "s",
        ".",
        "get_matching_blocks",
        "()",
        "[Match(a=0, b=0, size=2), Match(a=3, b=2, size=2), Match(a=5, b=4, size=0)]"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 6037,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.get_opcodes:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">get_opcodes</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.get_opcodes\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dt#difflib.SequenceMatcher.get_opcodes:nth-of-type(1)",
      "text": [
        "get_opcodes",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 6063,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return list of 5-tuples describing how to turn <em>a</em> into <em>b</em>. Each tuple is\nof the form <tt class=\"docutils literal\"><span class=\"pre\">(tag,</span> <span class=\"pre\">i1,</span> <span class=\"pre\">i2,</span> <span class=\"pre\">j1,</span> <span class=\"pre\">j2)</span></tt>.  The first tuple has <tt class=\"docutils literal\"><span class=\"pre\">i1</span> <span class=\"pre\">==</span> <span class=\"pre\">j1</span> <span class=\"pre\">==</span>\n<span class=\"pre\">0</span></tt>, and remaining tuples have <em>i1</em> equal to the <em>i2</em> from the preceding\ntuple, and, likewise, <em>j1</em> equal to the previous <em>j2</em>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return list of 5-tuples describing how to turn ",
        "a",
        " into ",
        "b",
        ". Each tuple is\nof the form ",
        "(tag,",
        "i1,",
        "i2,",
        "j1,",
        "j2)",
        ".  The first tuple has ",
        "i1",
        "==",
        "j1",
        "==",
        "0",
        ", and remaining tuples have ",
        "i1",
        " equal to the ",
        "i2",
        " from the preceding\ntuple, and, likewise, ",
        "j1",
        " equal to the previous ",
        "j2",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6123,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <em>tag</em> values are strings, with these meanings:",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "The ",
        "tag",
        " values are strings, with these meanings:"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 325,
        "top": 6161,
        "width": 168
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(1)",
      "html": "Value",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(1)",
      "text": [
        "Value"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 493,
        "top": 6161,
        "width": 502
      },
      "computed": {
        "background-color": "rgb(238, 238, 238)",
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "font-weight": "bold",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "center",
        "vertical-align": "bottom"
      },
      "element": "th.head:nth-of-type(2)",
      "html": "Meaning",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > thead > tr > th",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > thead:nth-of-type(1) > tr:nth-of-type(1) > th.head:nth-of-type(2)",
      "text": [
        "Meaning"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 325,
        "top": 6190,
        "width": 168
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'replace'</span></tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(1)",
      "text": [
        "'replace'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 493,
        "top": 6190,
        "width": 502
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">a[i1:i2]</span></tt> should be replaced by\n<tt class=\"docutils literal\"><span class=\"pre\">b[j1:j2]</span></tt>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(1) > td:nth-of-type(2)",
      "text": [
        "a[i1:i2]",
        " should be replaced by\n",
        "b[j1:j2]",
        "."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 325,
        "top": 6219,
        "width": 168
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'delete'</span></tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(1)",
      "text": [
        "'delete'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 493,
        "top": 6219,
        "width": 502
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">a[i1:i2]</span></tt> should be deleted.  Note that\n<tt class=\"docutils literal\"><span class=\"pre\">j1</span> <span class=\"pre\">==</span> <span class=\"pre\">j2</span></tt> in this case.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(2) > td:nth-of-type(2)",
      "text": [
        "a[i1:i2]",
        " should be deleted.  Note that\n",
        "j1",
        "==",
        "j2",
        " in this case."
      ]
    },
    {
      "bound": {
        "height": 49,
        "left": 325,
        "top": 6248,
        "width": 168
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'insert'</span></tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(1)",
      "text": [
        "'insert'"
      ]
    },
    {
      "bound": {
        "height": 49,
        "left": 493,
        "top": 6248,
        "width": 502
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">b[j1:j2]</span></tt> should be inserted at\n<tt class=\"docutils literal\"><span class=\"pre\">a[i1:i1]</span></tt>. Note that <tt class=\"docutils literal\"><span class=\"pre\">i1</span> <span class=\"pre\">==</span> <span class=\"pre\">i2</span></tt> in\nthis case.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(3) > td:nth-of-type(2)",
      "text": [
        "b[j1:j2]",
        " should be inserted at\n",
        "a[i1:i1]",
        ". Note that ",
        "i1",
        "==",
        "i2",
        " in\nthis case."
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 325,
        "top": 6297,
        "width": 168
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(1)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">'equal'</span></tt>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(1)",
      "text": [
        "'equal'"
      ]
    },
    {
      "bound": {
        "height": 29,
        "left": 493,
        "top": 6297,
        "width": 502
      },
      "computed": {
        "border-bottom-color": "rgb(221, 221, 221)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-collapse": "collapse",
        "border-left-color": "rgb(221, 221, 221)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 221)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 221)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "display": "table-cell",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "4px",
        "padding-left": "8px",
        "padding-right": "8px",
        "padding-top": "4px",
        "text-align": "left",
        "vertical-align": "top"
      },
      "element": "td:nth-of-type(2)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">a[i1:i2]</span> <span class=\"pre\">==</span> <span class=\"pre\">b[j1:j2]</span></tt> (the sub-sequences\nare equal).",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > table > tbody > tr > td",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > table.docutils:nth-of-type(1) > tbody:nth-of-type(1) > tr:nth-of-type(4) > td:nth-of-type(2)",
      "text": [
        "a[i1:i2]",
        "==",
        "b[j1:j2]",
        " (the sub-sequences\nare equal)."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6337,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "For example:",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "For example:"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 1514,
        "top": 6375,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute",
        "text-align": "justify"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > blockquote > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > blockquote:nth-of-type(1) > div:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 120,
        "left": 365,
        "top": 6375,
        "width": 1179
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "text-align": "justify",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"s\">\"qabxcd\"</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"s\">\"abycdf\"</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SequenceMatcher</span><span class=\"p\">(</span><span class=\"k\">None</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">tag</span><span class=\"p\">,</span> <span class=\"n\">i1</span><span class=\"p\">,</span> <span class=\"n\">i2</span><span class=\"p\">,</span> <span class=\"n\">j1</span><span class=\"p\">,</span> <span class=\"n\">j2</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_opcodes</span><span class=\"p\">():</span>\n<span class=\"go\">    print('{:7}   a[{}:{}] --&gt; b[{}:{}] {!r:&gt;8} --&gt; {!r}'.format(</span>\n<span class=\"go\">        tag, i1, i2, j1, j2, a[i1:i2], b[j1:j2]))</span>\n",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > blockquote > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > blockquote:nth-of-type(1) > div:nth-of-type(1) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "a",
        "=",
        "\"qabxcd\"",
        ">>> ",
        "b",
        "=",
        "\"abycdf\"",
        ">>> ",
        "s",
        "=",
        "SequenceMatcher",
        "(",
        "None",
        ",",
        "a",
        ",",
        "b",
        ")",
        ">>> ",
        "for",
        "tag",
        ",",
        "i1",
        ",",
        "i2",
        ",",
        "j1",
        ",",
        "j2",
        "in",
        "s",
        ".",
        "get_opcodes",
        "():",
        "    print('{:7}   a[{}:{}] --> b[{}:{}] {!r:>8} --> {!r}'.format(",
        "        tag, i1, i2, j1, j2, a[i1:i2], b[j1:j2]))"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 365,
        "top": 6510,
        "width": 1179
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "delete    a[0:1] –&gt; b[0:0]      ‘q’ –&gt; ‘’\nequal     a[1:3] –&gt; b[0:2]     ‘ab’ –&gt; ‘ab’\nreplace   a[3:4] –&gt; b[2:3]      ‘x’ –&gt; ‘y’\nequal     a[4:6] –&gt; b[3:5]     ‘cd’ –&gt; ‘cd’\ninsert    a[6:6] –&gt; b[5:6]       ‘’ –&gt; ‘f’",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > blockquote > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(6) > dd:nth-of-type(1) > blockquote:nth-of-type(1) > div:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "delete    a[0:1] –> b[0:0]      ‘q’ –> ‘’\nequal     a[1:3] –> b[0:2]     ‘ab’ –> ‘ab’\nreplace   a[3:4] –> b[2:3]      ‘x’ –> ‘y’\nequal     a[4:6] –> b[3:5]     ‘cd’ –> ‘cd’\ninsert    a[6:6] –> b[5:6]       ‘’ –> ‘f’"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 6570,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.get_grouped_opcodes:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">get_grouped_opcodes</tt><big>(</big><em>n=3</em><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.get_grouped_opcodes\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dt#difflib.SequenceMatcher.get_grouped_opcodes:nth-of-type(1)",
      "text": [
        "get_grouped_opcodes",
        "(",
        "n=3",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6596,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a <a class=\"reference internal\" href=\"../glossary.html#term-generator\"><em class=\"xref std std-term\">generator</em></a> of groups with up to <em>n</em> lines of context.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a ",
        "generator",
        " of groups with up to ",
        "n",
        " lines of context."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6634,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Starting with the groups returned by <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.get_opcodes\" title=\"difflib.SequenceMatcher.get_opcodes\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_opcodes()</span></tt></a>, this method\nsplits out smaller change clusters and eliminates intervening ranges which\nhave no changes.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Starting with the groups returned by ",
        "get_opcodes()",
        ", this method\nsplits out smaller change clusters and eliminates intervening ranges which\nhave no changes."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6672,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "The groups are returned in the same format as <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.get_opcodes\" title=\"difflib.SequenceMatcher.get_opcodes\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_opcodes()</span></tt></a>.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(7) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "The groups are returned in the same format as ",
        "get_opcodes()",
        "."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 6710,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.ratio:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">ratio</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.ratio\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dt#difflib.SequenceMatcher.ratio:nth-of-type(1)",
      "text": [
        "ratio",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6736,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return a measure of the sequences’ similarity as a float in the range [0,\n1].",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return a measure of the sequences’ similarity as a float in the range [0,\n1]."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 6774,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Where T is the total number of elements in both sequences, and M is the\nnumber of matches, this is 2.0*M / T. Note that this is <tt class=\"docutils literal\"><span class=\"pre\">1.0</span></tt> if the\nsequences are identical, and <tt class=\"docutils literal\"><span class=\"pre\">0.0</span></tt> if they have nothing in common.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Where T is the total number of elements in both sequences, and M is the\nnumber of matches, this is 2.0*M / T. Note that this is ",
        "1.0",
        " if the\nsequences are identical, and ",
        "0.0",
        " if they have nothing in common."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 6834,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "This is expensive to compute if <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.get_matching_blocks\" title=\"difflib.SequenceMatcher.get_matching_blocks\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_matching_blocks()</span></tt></a> or\n<a class=\"reference internal\" href=\"#difflib.SequenceMatcher.get_opcodes\" title=\"difflib.SequenceMatcher.get_opcodes\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_opcodes()</span></tt></a> hasn’t already been called, in which case you may want\nto try <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.quick_ratio\" title=\"difflib.SequenceMatcher.quick_ratio\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">quick_ratio()</span></tt></a> or <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.real_quick_ratio\" title=\"difflib.SequenceMatcher.real_quick_ratio\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">real_quick_ratio()</span></tt></a> first to get an\nupper bound.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(8) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "This is expensive to compute if ",
        "get_matching_blocks()",
        " or\n",
        "get_opcodes()",
        " hasn’t already been called, in which case you may want\nto try ",
        "quick_ratio()",
        " or ",
        "real_quick_ratio()",
        " first to get an\nupper bound."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 6894,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.quick_ratio:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">quick_ratio</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.quick_ratio\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(9) > dt#difflib.SequenceMatcher.quick_ratio:nth-of-type(1)",
      "text": [
        "quick_ratio",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6920,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an upper bound on <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.ratio\" title=\"difflib.SequenceMatcher.ratio\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">ratio()</span></tt></a> relatively quickly.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(9) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an upper bound on ",
        "ratio()",
        " relatively quickly."
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 6958,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.SequenceMatcher.real_quick_ratio:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">real_quick_ratio</tt><big>(</big><big>)</big><a class=\"headerlink\" href=\"#difflib.SequenceMatcher.real_quick_ratio\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(10) > dt#difflib.SequenceMatcher.real_quick_ratio:nth-of-type(1)",
      "text": [
        "real_quick_ratio",
        "(",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 6984,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Return an upper bound on <a class=\"reference internal\" href=\"#difflib.SequenceMatcher.ratio\" title=\"difflib.SequenceMatcher.ratio\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">ratio()</span></tt></a> very quickly.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(10) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Return an upper bound on ",
        "ratio()",
        " very quickly."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 7022,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The three methods that return the ratio of matching to total characters can give\ndifferent results due to differing levels of approximation, although\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">quick_ratio()</span></tt> and <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">real_quick_ratio()</span></tt> are always at least as large as\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">ratio()</span></tt>:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > p:nth-of-type(2)",
      "text": [
        "The three methods that return the ratio of matching to total characters can give\ndifferent results due to differing levels of approximation, although\n",
        "quick_ratio()",
        " and ",
        "real_quick_ratio()",
        " are always at least as large as\n",
        "ratio()",
        ":"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7082,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 138,
        "left": 265,
        "top": 7082,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SequenceMatcher</span><span class=\"p\">(</span><span class=\"k\">None</span><span class=\"p\">,</span> <span class=\"s\">\"abcd\"</span><span class=\"p\">,</span> <span class=\"s\">\"bcde\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">ratio</span><span class=\"p\">()</span>\n<span class=\"go\">0.75</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">quick_ratio</span><span class=\"p\">()</span>\n<span class=\"go\">0.75</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">real_quick_ratio</span><span class=\"p\">()</span>\n<span class=\"go\">1.0</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-objects.section:nth-of-type(2) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s",
        "=",
        "SequenceMatcher",
        "(",
        "None",
        ",",
        "\"abcd\"",
        ",",
        "\"bcde\"",
        ")",
        ">>> ",
        "s",
        ".",
        "ratio",
        "()",
        "0.75",
        ">>> ",
        "s",
        ".",
        "quick_ratio",
        "()",
        "0.75",
        ">>> ",
        "s",
        ".",
        "real_quick_ratio",
        "()",
        "1.0"
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 7235,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.3.2. SequenceMatcher Examples<a class=\"headerlink\" href=\"#sequencematcher-examples\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > h2:nth-of-type(1)",
      "text": [
        "6.3.2. SequenceMatcher Examples",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7297,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This example compares two strings, considering blanks to be “junk”:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > p:nth-of-type(1)",
      "text": [
        "This example compares two strings, considering blanks to be “junk”:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7335,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 7335,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SequenceMatcher</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">==</span> <span class=\"s\">\" \"</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                    <span class=\"s\">\"private Thread currentThread;\"</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                    <span class=\"s\">\"private volatile Thread currentThread;\"</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "s",
        "=",
        "SequenceMatcher",
        "(",
        "lambda",
        "x",
        ":",
        "x",
        "==",
        "\" \"",
        ",",
        "... ",
        "\"private Thread currentThread;\"",
        ",",
        "... ",
        "\"private volatile Thread currentThread;\"",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7417,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">ratio()</span></tt> returns a float in [0, 1], measuring the similarity of the\nsequences.  As a rule of thumb, a <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">ratio()</span></tt> value over 0.6 means the\nsequences are close matches:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > p:nth-of-type(2)",
      "text": [
        "ratio()",
        " returns a float in [0, 1], measuring the similarity of the\nsequences.  As a rule of thumb, a ",
        "ratio()",
        " value over 0.6 means the\nsequences are close matches:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7455,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 48,
        "left": 265,
        "top": 7455,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">ratio</span><span class=\"p\">(),</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"go\">0.866</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "print",
        "(",
        "round",
        "(",
        "s",
        ".",
        "ratio",
        "(),",
        "3",
        "))",
        "0.866"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7519,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "If you’re only interested in where the sequences match,\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_matching_blocks()</span></tt> is handy:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > p:nth-of-type(3)",
      "text": [
        "If you’re only interested in where the sequences match,\n",
        "get_matching_blocks()",
        " is handy:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7557,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 265,
        "top": 7557,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_matching_blocks</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">\"a[%d] and b[%d] match for %d elements\"</span> <span class=\"o\">%</span> <span class=\"n\">block</span><span class=\"p\">)</span>\n<span class=\"go\">a[0] and b[0] match for 8 elements</span>\n<span class=\"go\">a[8] and b[17] match for 21 elements</span>\n<span class=\"go\">a[29] and b[38] match for 0 elements</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "for",
        "block",
        "in",
        "s",
        ".",
        "get_matching_blocks",
        "():",
        "... ",
        "print",
        "(",
        "\"a[%d] and b[%d] match for %d elements\"",
        "%",
        "block",
        ")",
        "a[0] and b[0] match for 8 elements",
        "a[8] and b[17] match for 21 elements",
        "a[29] and b[38] match for 0 elements"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 7675,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Note that the last tuple returned by <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_matching_blocks()</span></tt> is always a\ndummy, <tt class=\"docutils literal\"><span class=\"pre\">(len(a),</span> <span class=\"pre\">len(b),</span> <span class=\"pre\">0)</span></tt>, and this is the only case in which the last\ntuple element (number of elements matched) is <tt class=\"docutils literal\"><span class=\"pre\">0</span></tt>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > p:nth-of-type(4)",
      "text": [
        "Note that the last tuple returned by ",
        "get_matching_blocks()",
        " is always a\ndummy, ",
        "(len(a),",
        "len(b),",
        "0)",
        ", and this is the only case in which the last\ntuple element (number of elements matched) is ",
        "0",
        "."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 7735,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "If you want to know how to change the first sequence into the second, use\n<tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get_opcodes()</span></tt>:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > p:nth-of-type(5)",
      "text": [
        "If you want to know how to change the first sequence into the second, use\n",
        "get_opcodes()",
        ":"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 7773,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 102,
        "left": 265,
        "top": 7773,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">opcode</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_opcodes</span><span class=\"p\">():</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s\">\"%6s a[%d:%d] b[%d:%d]\"</span> <span class=\"o\">%</span> <span class=\"n\">opcode</span><span class=\"p\">)</span>\n<span class=\"go\"> equal a[0:8] b[0:8]</span>\n<span class=\"go\">insert a[8:8] b[8:17]</span>\n<span class=\"go\"> equal a[8:29] b[17:38]</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "for",
        "opcode",
        "in",
        "s",
        ".",
        "get_opcodes",
        "():",
        "... ",
        "print",
        "(",
        "\"%6s a[%d:%d] b[%d:%d]\"",
        "%",
        "opcode",
        ")",
        " equal a[0:8] b[0:8]",
        "insert a[8:8] b[8:17]",
        " equal a[8:29] b[17:38]"
      ]
    },
    {
      "bound": {
        "height": 99,
        "left": 265,
        "top": 7890,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(255, 255, 204)",
        "border-bottom-color": "rgb(221, 221, 102)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(221, 221, 102)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(221, 221, 102)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(221, 221, 102)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(34, 34, 34)",
        "margin-bottom": "10px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "10px",
        "outline-color": "rgb(34, 34, 34)",
        "padding-bottom": "7px",
        "padding-left": "7px",
        "padding-right": "7px",
        "padding-top": "7px"
      },
      "element": "div.admonition.admonition-see-also.seealso:nth-of-type(5)",
      "html": "\n<p class=\"first admonition-title\">See also</p>\n<ul class=\"last simple\">\n<li>The <a class=\"reference internal\" href=\"#difflib.get_close_matches\" title=\"difflib.get_close_matches\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">get_close_matches()</span></tt></a> function in this module which shows how\nsimple code building on <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> can be used to do useful\nwork.</li>\n<li><a class=\"reference external\" href=\"http://code.activestate.com/recipes/576729/\">Simple version control recipe</a> for a small application\nbuilt with <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a>.</li>\n</ul>\n",
      "path": "div > div > div > div > div > div > div",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.admonition.admonition-see-also.seealso:nth-of-type(5)",
      "text": [
        "See also"
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 313,
        "top": 7936,
        "width": 1263
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(1)",
      "html": "The <a class=\"reference internal\" href=\"#difflib.get_close_matches\" title=\"difflib.get_close_matches\"><tt class=\"xref py py-func docutils literal\"><span class=\"pre\">get_close_matches()</span></tt></a> function in this module which shows how\nsimple code building on <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a> can be used to do useful\nwork.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.admonition.admonition-see-also.seealso:nth-of-type(5) > ul.last.simple:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "The ",
        "get_close_matches()",
        " function in this module which shows how\nsimple code building on ",
        "SequenceMatcher",
        " can be used to do useful\nwork."
      ]
    },
    {
      "bound": {
        "height": 20,
        "left": 313,
        "top": 7956,
        "width": 1263
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "display": "list-item",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference external\" href=\"http://code.activestate.com/recipes/576729/\">Simple version control recipe</a> for a small application\nbuilt with <a class=\"reference internal\" href=\"#difflib.SequenceMatcher\" title=\"difflib.SequenceMatcher\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">SequenceMatcher</span></tt></a>.",
      "path": "div > div > div > div > div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#sequencematcher-examples.section:nth-of-type(3) > div.admonition.admonition-see-also.seealso:nth-of-type(5) > ul.last.simple:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "Simple version control recipe",
        " for a small application\nbuilt with ",
        "SequenceMatcher",
        "."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 7999,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.3.3. Differ Objects<a class=\"headerlink\" href=\"#differ-objects\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > h2:nth-of-type(1)",
      "text": [
        "6.3.3. Differ Objects",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 66,
        "left": 265,
        "top": 8061,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Note that <a class=\"reference internal\" href=\"#difflib.Differ\" title=\"difflib.Differ\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Differ</span></tt></a>-generated deltas make no claim to be <strong>minimal</strong>\ndiffs. To the contrary, minimal diffs are often counter-intuitive, because they\nsynch up anywhere possible, sometimes accidental matches 100 pages apart.\nRestricting synch points to contiguous matches preserves some notion of\nlocality, at the occasional cost of producing a longer diff.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > p:nth-of-type(1)",
      "text": [
        "Note that ",
        "Differ",
        "-generated deltas make no claim to be ",
        "minimal",
        "\ndiffs. To the contrary, minimal diffs are often counter-intuitive, because they\nsynch up anywhere possible, sometimes accidental matches 100 pages apart.\nRestricting synch points to contiguous matches preserves some notion of\nlocality, at the occasional cost of producing a longer diff."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8143,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "The <a class=\"reference internal\" href=\"#difflib.Differ\" title=\"difflib.Differ\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Differ</span></tt></a> class has this constructor:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > p:nth-of-type(2)",
      "text": [
        "The ",
        "Differ",
        " class has this constructor:"
      ]
    },
    {
      "bound": {
        "height": 25,
        "left": 265,
        "top": 8181,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)"
      },
      "element": "dt:nth-of-type(1)",
      "html": "\n<em class=\"property\">class </em><tt class=\"descclassname\">difflib.</tt><tt class=\"descname\">Differ</tt><big>(</big><em>linejunk=None</em>, <em>charjunk=None</em><big>)</big>",
      "path": "div > div > div > div > div > div > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dt:nth-of-type(1)",
      "text": [
        "class ",
        "difflib.",
        "Differ",
        "(",
        "linejunk=None",
        ", ",
        "charjunk=None",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8209,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Optional keyword parameters <em>linejunk</em> and <em>charjunk</em> are for filter functions\n(or <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>):",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Optional keyword parameters ",
        "linejunk",
        " and ",
        "charjunk",
        " are for filter functions\n(or ",
        "None",
        "):"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8247,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "<em>linejunk</em>: A function that accepts a single string argument, and returns true\nif the string is junk.  The default is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>, meaning that no line is\nconsidered junk.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "linejunk",
        ": A function that accepts a single string argument, and returns true\nif the string is junk.  The default is ",
        "None",
        ", meaning that no line is\nconsidered junk."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 295,
        "top": 8285,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "<em>charjunk</em>: A function that accepts a single character argument (a string of\nlength 1), and returns true if the character is junk. The default is <tt class=\"xref docutils literal\"><span class=\"pre\">None</span></tt>,\nmeaning that no character is considered junk.",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(3)",
      "text": [
        "charjunk",
        ": A function that accepts a single character argument (a string of\nlength 1), and returns true if the character is junk. The default is ",
        "None",
        ",\nmeaning that no character is considered junk."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 295,
        "top": 8345,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#difflib.Differ\" title=\"difflib.Differ\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Differ</span></tt></a> objects are used (deltas generated) via a single method:",
      "path": "div > div > div > div > div > div > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(4)",
      "text": [
        "Differ",
        " objects are used (deltas generated) via a single method:"
      ]
    },
    {
      "bound": {
        "height": 23,
        "left": 295,
        "top": 8383,
        "width": 1289
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "20px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "dt#difflib.Differ.compare:nth-of-type(1)",
      "html": "\n<tt class=\"descname\">compare</tt><big>(</big><em>a</em>, <em>b</em><big>)</big><a class=\"headerlink\" href=\"#difflib.Differ.compare\" title=\"Permalink to this definition\">¶</a>",
      "path": "div > div > div > div > div > div > dl > dd > dl > dt",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dt#difflib.Differ.compare:nth-of-type(1)",
      "text": [
        "compare",
        "(",
        "a",
        ", ",
        "b",
        ")",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 325,
        "top": 8409,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "Compare two sequences of lines, and generate the delta (a sequence of lines).",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(1)",
      "text": [
        "Compare two sequences of lines, and generate the delta (a sequence of lines)."
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 325,
        "top": 8447,
        "width": 1259
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Each sequence must contain individual single-line strings ending with newlines.\nSuch sequences can be obtained from the <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">readlines()</span></tt> method of file-like\nobjects.  The delta generated also consists of newline-terminated strings, ready\nto be printed as-is via the <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">writelines()</span></tt> method of a file-like object.",
      "path": "div > div > div > div > div > div > dl > dd > dl > dd > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-objects.section:nth-of-type(4) > dl.class:nth-of-type(1) > dd:nth-of-type(1) > dl.method:nth-of-type(1) > dd:nth-of-type(1) > p:nth-of-type(2)",
      "text": [
        "Each sequence must contain individual single-line strings ending with newlines.\nSuch sequences can be obtained from the ",
        "readlines()",
        " method of file-like\nobjects.  The delta generated also consists of newline-terminated strings, ready\nto be printed as-is via the ",
        "writelines()",
        " method of a file-like object."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 8507,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.3.4. Differ Example<a class=\"headerlink\" href=\"#differ-example\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > h2:nth-of-type(1)",
      "text": [
        "6.3.4. Differ Example",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 44,
        "left": 265,
        "top": 8569,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This example compares two texts. First we set up the texts, sequences of\nindividual single-line strings ending with newlines (such sequences can also be\nobtained from the <tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">readlines()</span></tt> method of file-like objects):",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > p:nth-of-type(1)",
      "text": [
        "This example compares two texts. First we set up the texts, sequences of\nindividual single-line strings ending with newlines (such sequences can also be\nobtained from the ",
        "readlines()",
        " method of file-like objects):"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 8629,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 264,
        "left": 265,
        "top": 8629,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">text1</span> <span class=\"o\">=</span> <span class=\"s\">'''  1. Beautiful is better than ugly.</span>\n<span class=\"gp\">... </span><span class=\"s\">  2. Explicit is better than implicit.</span>\n<span class=\"gp\">... </span><span class=\"s\">  3. Simple is better than complex.</span>\n<span class=\"gp\">... </span><span class=\"s\">  4. Complex is better than complicated.</span>\n<span class=\"gp\">... </span><span class=\"s\">'''</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">)</span>\n<span class=\"go\">4</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">text1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"go\">'\\n'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">text2</span> <span class=\"o\">=</span> <span class=\"s\">'''  1. Beautiful is better than ugly.</span>\n<span class=\"gp\">... </span><span class=\"s\">  3.   Simple is better than complex.</span>\n<span class=\"gp\">... </span><span class=\"s\">  4. Complicated is better than complex.</span>\n<span class=\"gp\">... </span><span class=\"s\">  5. Flat is better than nested.</span>\n<span class=\"gp\">... </span><span class=\"s\">'''</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "text1",
        "=",
        "'''  1. Beautiful is better than ugly.",
        "... ",
        "  2. Explicit is better than implicit.",
        "... ",
        "  3. Simple is better than complex.",
        "... ",
        "  4. Complex is better than complicated.",
        "... ",
        "'''",
        ".",
        "splitlines",
        "(",
        "1",
        ")",
        ">>> ",
        "len",
        "(",
        "text1",
        ")",
        "4",
        ">>> ",
        "text1",
        "[",
        "0",
        "][",
        "-",
        "1",
        "]",
        "'\\n'",
        ">>> ",
        "text2",
        "=",
        "'''  1. Beautiful is better than ugly.",
        "... ",
        "  3.   Simple is better than complex.",
        "... ",
        "  4. Complicated is better than complex.",
        "... ",
        "  5. Flat is better than nested.",
        "... ",
        "'''",
        ".",
        "splitlines",
        "(",
        "1",
        ")"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8909,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(2)",
      "html": "Next we instantiate a Differ object:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > p:nth-of-type(2)",
      "text": [
        "Next we instantiate a Differ object:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 8947,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 8947,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">Differ</span><span class=\"p\">()</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(2) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "d",
        "=",
        "Differ",
        "()"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 8993,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(3)",
      "html": "Note that when instantiating a <a class=\"reference internal\" href=\"#difflib.Differ\" title=\"difflib.Differ\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Differ</span></tt></a> object we may pass functions to\nfilter out line and character “junk.”  See the <a class=\"reference internal\" href=\"#difflib.Differ\" title=\"difflib.Differ\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">Differ()</span></tt></a> constructor for\ndetails.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > p:nth-of-type(3)",
      "text": [
        "Note that when instantiating a ",
        "Differ",
        " object we may pass functions to\nfilter out line and character “junk.”  See the ",
        "Differ()",
        " constructor for\ndetails."
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9031,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(4)",
      "html": "Finally, we compare the two:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > p:nth-of-type(4)",
      "text": [
        "Finally, we compare the two:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 9069,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 265,
        "top": 9069,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">,</span> <span class=\"n\">text2</span><span class=\"p\">))</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(3) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "result",
        "=",
        "list",
        "(",
        "d",
        ".",
        "compare",
        "(",
        "text1",
        ",",
        "text2",
        "))"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9115,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(5)",
      "html": "<tt class=\"docutils literal\"><span class=\"pre\">result</span></tt> is a list of strings, so let’s pretty-print it:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > p:nth-of-type(5)",
      "text": [
        "result",
        " is a list of strings, so let’s pretty-print it:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 9153,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 265,
        "top": 9153,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"k\">import</span> <span class=\"n\">pprint</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">['    1. Beautiful is better than ugly.\\n',</span>\n<span class=\"go\"> '-   2. Explicit is better than implicit.\\n',</span>\n<span class=\"go\"> '-   3. Simple is better than complex.\\n',</span>\n<span class=\"go\"> '+   3.   Simple is better than complex.\\n',</span>\n<span class=\"go\"> '?     ++\\n',</span>\n<span class=\"go\"> '-   4. Complex is better than complicated.\\n',</span>\n<span class=\"go\"> '?            ^                     ---- ^\\n',</span>\n<span class=\"go\"> '+   4. Complicated is better than complex.\\n',</span>\n<span class=\"go\"> '?           ++++ ^                      ^\\n',</span>\n<span class=\"go\"> '+   5. Flat is better than nested.\\n']</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(4) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "from",
        "pprint",
        "import",
        "pprint",
        ">>> ",
        "pprint",
        "(",
        "result",
        ")",
        "['    1. Beautiful is better than ugly.\\n',",
        " '-   2. Explicit is better than implicit.\\n',",
        " '-   3. Simple is better than complex.\\n',",
        " '+   3.   Simple is better than complex.\\n',",
        " '?     ++\\n',",
        " '-   4. Complex is better than complicated.\\n',",
        " '?            ^                     ---- ^\\n',",
        " '+   4. Complicated is better than complex.\\n',",
        " '?           ++++ ^                      ^\\n',",
        " '+   5. Flat is better than nested.\\n']"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9397,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(6)",
      "html": "As a single multi-line string it looks like this:",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > p:nth-of-type(6)",
      "text": [
        "As a single multi-line string it looks like this:"
      ]
    },
    {
      "bound": {
        "height": 19,
        "left": 1554,
        "top": 9435,
        "width": 30
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(170, 204, 153)",
        "cursor": "pointer",
        "font-family": "monospace",
        "font-size": "13px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(170, 204, 153)",
        "padding-left": "2px",
        "padding-right": "2px",
        "position": "absolute"
      },
      "element": "span.copybutton:nth-of-type(1)",
      "html": "&gt;&gt;&gt;",
      "path": "div > div > div > div > div > div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(5) > div.highlight:nth-of-type(1) > span.copybutton:nth-of-type(1)",
      "text": [
        ">>>"
      ]
    },
    {
      "bound": {
        "height": 228,
        "left": 265,
        "top": 9435,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">writelines</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"go\">    1. Beautiful is better than ugly.</span>\n<span class=\"go\">-   2. Explicit is better than implicit.</span>\n<span class=\"go\">-   3. Simple is better than complex.</span>\n<span class=\"go\">+   3.   Simple is better than complex.</span>\n<span class=\"go\">?     ++</span>\n<span class=\"go\">-   4. Complex is better than complicated.</span>\n<span class=\"go\">?            ^                     ---- ^</span>\n<span class=\"go\">+   4. Complicated is better than complex.</span>\n<span class=\"go\">?           ++++ ^                      ^</span>\n<span class=\"go\">+   5. Flat is better than nested.</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#differ-example.section:nth-of-type(5) > div.highlight-python3:nth-of-type(5) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        ">>> ",
        "import",
        "sys",
        ">>> ",
        "sys",
        ".",
        "stdout",
        ".",
        "writelines",
        "(",
        "result",
        ")",
        "    1. Beautiful is better than ugly.",
        "-   2. Explicit is better than implicit.",
        "-   3. Simple is better than complex.",
        "+   3.   Simple is better than complex.",
        "?     ++",
        "-   4. Complex is better than complicated.",
        "?            ^                     ---- ^",
        "+   4. Complicated is better than complex.",
        "?           ++++ ^                      ^",
        "+   5. Flat is better than nested."
      ]
    },
    {
      "bound": {
        "height": 46,
        "left": 265,
        "top": 9678,
        "width": 1319
      },
      "computed": {
        "border-bottom-color": "rgb(26, 26, 26)",
        "border-left-color": "rgb(26, 26, 26)",
        "border-right-color": "rgb(26, 26, 26)",
        "border-top-color": "rgb(26, 26, 26)",
        "color": "rgb(26, 26, 26)",
        "font-size": "26px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(26, 26, 26)",
        "padding-bottom": "7px",
        "padding-top": "7px"
      },
      "element": "h2:nth-of-type(1)",
      "html": "6.3.5. A command-line interface to difflib<a class=\"headerlink\" href=\"#a-command-line-interface-to-difflib\" title=\"Permalink to this headline\">¶</a>",
      "path": "div > div > div > div > div > div > h2",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#a-command-line-interface-to-difflib.section:nth-of-type(6) > h2:nth-of-type(1)",
      "text": [
        "6.3.5. A command-line interface to difflib",
        "¶"
      ]
    },
    {
      "bound": {
        "height": 22,
        "left": 265,
        "top": 9740,
        "width": 1319
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(34, 34, 34)",
        "border-left-color": "rgb(34, 34, 34)",
        "border-right-color": "rgb(34, 34, 34)",
        "border-top-color": "rgb(34, 34, 34)",
        "color": "rgb(34, 34, 34)",
        "line-height": "22px",
        "margin-bottom": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "16px",
        "outline-color": "rgb(34, 34, 34)",
        "text-align": "justify"
      },
      "element": "p:nth-of-type(1)",
      "html": "This example shows how to use difflib to create a <tt class=\"docutils literal\"><span class=\"pre\">diff</span></tt>-like utility.\nIt is also contained in the Python source distribution, as\n<tt class=\"file docutils literal\"><span class=\"pre\">Tools/scripts/diff.py</span></tt>.",
      "path": "div > div > div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#a-command-line-interface-to-difflib.section:nth-of-type(6) > p:nth-of-type(1)",
      "text": [
        "This example shows how to use difflib to create a ",
        "diff",
        "-like utility.\nIt is also contained in the Python source distribution, as\n",
        "Tools/scripts/diff.py",
        "."
      ]
    },
    {
      "bound": {
        "height": 1092,
        "left": 265,
        "top": 9778,
        "width": 1319
      },
      "computed": {
        "background-color": "rgb(238, 255, 204)",
        "border-bottom-color": "rgb(170, 204, 153)",
        "border-bottom-left-radius": "3px",
        "border-bottom-right-radius": "3px",
        "border-bottom-style": "solid",
        "border-bottom-width": "1px",
        "border-left-color": "rgb(170, 204, 153)",
        "border-left-style": "solid",
        "border-left-width": "1px",
        "border-right-color": "rgb(170, 204, 153)",
        "border-right-style": "solid",
        "border-right-width": "1px",
        "border-top-color": "rgb(170, 204, 153)",
        "border-top-left-radius": "3px",
        "border-top-right-radius": "3px",
        "border-top-style": "solid",
        "border-top-width": "1px",
        "color": "rgb(51, 51, 51)",
        "font-family": "monospace, sans-serif",
        "font-size": "15px",
        "line-height": "18px",
        "margin-bottom": "15px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "15px",
        "outline-color": "rgb(51, 51, 51)",
        "overflow-x": "auto",
        "overflow-y": "hidden",
        "padding-bottom": "5px",
        "padding-left": "5px",
        "padding-right": "5px",
        "padding-top": "5px",
        "white-space": "pre"
      },
      "element": "pre:nth-of-type(1)",
      "html": "<span class=\"sd\">\"\"\" Command line interface to difflib.py providing diffs in four formats:</span>\n\n<span class=\"sd\">* ndiff:    lists every line and highlights interline changes.</span>\n<span class=\"sd\">* context:  highlights clusters of changes in a before/after format.</span>\n<span class=\"sd\">* unified:  highlights clusters of changes in an inline format.</span>\n<span class=\"sd\">* html:     generates side by side comparison with change highlights.</span>\n\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span><span class=\"o\">,</span> <span class=\"nn\">os</span><span class=\"o\">,</span> <span class=\"nn\">time</span><span class=\"o\">,</span> <span class=\"nn\">difflib</span><span class=\"o\">,</span> <span class=\"nn\">optparse</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n     <span class=\"c\"># Configure the option parser</span>\n    <span class=\"n\">usage</span> <span class=\"o\">=</span> <span class=\"s\">\"usage: %prog [options] fromfile tofile\"</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">optparse</span><span class=\"o\">.</span><span class=\"n\">OptionParser</span><span class=\"p\">(</span><span class=\"n\">usage</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span><span class=\"s\">\"-c\"</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s\">\"store_true\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"k\">False</span><span class=\"p\">,</span>\n                      <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s\">'Produce a context format diff (default)'</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span><span class=\"s\">\"-u\"</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s\">\"store_true\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"k\">False</span><span class=\"p\">,</span>\n                      <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s\">'Produce a unified format diff'</span><span class=\"p\">)</span>\n    <span class=\"n\">hlp</span> <span class=\"o\">=</span> <span class=\"s\">'Produce HTML side by side diff (can use -c and -l in conjunction)'</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span><span class=\"s\">\"-m\"</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s\">\"store_true\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"k\">False</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"n\">hlp</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span><span class=\"s\">\"-n\"</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"o\">=</span><span class=\"s\">\"store_true\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"k\">False</span><span class=\"p\">,</span>\n                      <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s\">'Produce a ndiff format diff'</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_option</span><span class=\"p\">(</span><span class=\"s\">\"-l\"</span><span class=\"p\">,</span> <span class=\"s\">\"--lines\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s\">\"int\"</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                      <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s\">'Set number of context lines (default 3)'</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"n\">options</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">print_help</span><span class=\"p\">()</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s\">\"need to specify both a fromfile and tofile\"</span><span class=\"p\">)</span>\n\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">lines</span>\n    <span class=\"n\">fromfile</span><span class=\"p\">,</span> <span class=\"n\">tofile</span> <span class=\"o\">=</span> <span class=\"n\">args</span> <span class=\"c\"># as specified in the usage string</span>\n\n    <span class=\"c\"># we're passing these as arguments to the diff function</span>\n    <span class=\"n\">fromdate</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">fromfile</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">st_mtime</span><span class=\"p\">)</span>\n    <span class=\"n\">todate</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">tofile</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">st_mtime</span><span class=\"p\">)</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">fromfile</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fromf</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">tofile</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">tof</span><span class=\"p\">:</span>\n        <span class=\"n\">fromlines</span><span class=\"p\">,</span> <span class=\"n\">tolines</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">fromf</span><span class=\"p\">),</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tof</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">u</span><span class=\"p\">:</span>\n        <span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">difflib</span><span class=\"o\">.</span><span class=\"n\">unified_diff</span><span class=\"p\">(</span><span class=\"n\">fromlines</span><span class=\"p\">,</span> <span class=\"n\">tolines</span><span class=\"p\">,</span> <span class=\"n\">fromfile</span><span class=\"p\">,</span> <span class=\"n\">tofile</span><span class=\"p\">,</span>\n                                    <span class=\"n\">fromdate</span><span class=\"p\">,</span> <span class=\"n\">todate</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">n</span><span class=\"p\">:</span>\n        <span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">difflib</span><span class=\"o\">.</span><span class=\"n\">ndiff</span><span class=\"p\">(</span><span class=\"n\">fromlines</span><span class=\"p\">,</span> <span class=\"n\">tolines</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">m</span><span class=\"p\">:</span>\n        <span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">difflib</span><span class=\"o\">.</span><span class=\"n\">HtmlDiff</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">make_file</span><span class=\"p\">(</span><span class=\"n\">fromlines</span><span class=\"p\">,</span> <span class=\"n\">tolines</span><span class=\"p\">,</span> <span class=\"n\">fromfile</span><span class=\"p\">,</span>\n                                            <span class=\"n\">tofile</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">c</span><span class=\"p\">,</span>\n                                            <span class=\"n\">numlines</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">difflib</span><span class=\"o\">.</span><span class=\"n\">context_diff</span><span class=\"p\">(</span><span class=\"n\">fromlines</span><span class=\"p\">,</span> <span class=\"n\">tolines</span><span class=\"p\">,</span> <span class=\"n\">fromfile</span><span class=\"p\">,</span> <span class=\"n\">tofile</span><span class=\"p\">,</span>\n                                    <span class=\"n\">fromdate</span><span class=\"p\">,</span> <span class=\"n\">todate</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n    <span class=\"c\"># we're using writelines because diff is a generator</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">writelines</span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n",
      "path": "div > div > div > div > div > div > div > div > pre",
      "selector": "div.document:nth-of-type(2) > div.documentwrapper:nth-of-type(1) > div.bodywrapper:nth-of-type(1) > div.body:nth-of-type(1) > div#module-difflib.section:nth-of-type(1) > div#a-command-line-interface-to-difflib.section:nth-of-type(6) > div.highlight-python3:nth-of-type(1) > div.highlight:nth-of-type(1) > pre:nth-of-type(1)",
      "text": [
        "\"\"\" Command line interface to difflib.py providing diffs in four formats:",
        "* ndiff:    lists every line and highlights interline changes.",
        "* context:  highlights clusters of changes in a before/after format.",
        "* unified:  highlights clusters of changes in an inline format.",
        "* html:     generates side by side comparison with change highlights.",
        "\"\"\"",
        "import",
        "sys",
        ",",
        "os",
        ",",
        "time",
        ",",
        "difflib",
        ",",
        "optparse",
        "def",
        "main",
        "():",
        "# Configure the option parser",
        "usage",
        "=",
        "\"usage: %prog [options] fromfile tofile\"",
        "parser",
        "=",
        "optparse",
        ".",
        "OptionParser",
        "(",
        "usage",
        ")",
        "parser",
        ".",
        "add_option",
        "(",
        "\"-c\"",
        ",",
        "action",
        "=",
        "\"store_true\"",
        ",",
        "default",
        "=",
        "False",
        ",",
        "help",
        "=",
        "'Produce a context format diff (default)'",
        ")",
        "parser",
        ".",
        "add_option",
        "(",
        "\"-u\"",
        ",",
        "action",
        "=",
        "\"store_true\"",
        ",",
        "default",
        "=",
        "False",
        ",",
        "help",
        "=",
        "'Produce a unified format diff'",
        ")",
        "hlp",
        "=",
        "'Produce HTML side by side diff (can use -c and -l in conjunction)'",
        "parser",
        ".",
        "add_option",
        "(",
        "\"-m\"",
        ",",
        "action",
        "=",
        "\"store_true\"",
        ",",
        "default",
        "=",
        "False",
        ",",
        "help",
        "=",
        "hlp",
        ")",
        "parser",
        ".",
        "add_option",
        "(",
        "\"-n\"",
        ",",
        "action",
        "=",
        "\"store_true\"",
        ",",
        "default",
        "=",
        "False",
        ",",
        "help",
        "=",
        "'Produce a ndiff format diff'",
        ")",
        "parser",
        ".",
        "add_option",
        "(",
        "\"-l\"",
        ",",
        "\"--lines\"",
        ",",
        "type",
        "=",
        "\"int\"",
        ",",
        "default",
        "=",
        "3",
        ",",
        "help",
        "=",
        "'Set number of context lines (default 3)'",
        ")",
        "(",
        "options",
        ",",
        "args",
        ")",
        "=",
        "parser",
        ".",
        "parse_args",
        "()",
        "if",
        "len",
        "(",
        "args",
        ")",
        "==",
        "0",
        ":",
        "parser",
        ".",
        "print_help",
        "()",
        "sys",
        ".",
        "exit",
        "(",
        "1",
        ")",
        "if",
        "len",
        "(",
        "args",
        ")",
        "!=",
        "2",
        ":",
        "parser",
        ".",
        "error",
        "(",
        "\"need to specify both a fromfile and tofile\"",
        ")",
        "n",
        "=",
        "options",
        ".",
        "lines",
        "fromfile",
        ",",
        "tofile",
        "=",
        "args",
        "# as specified in the usage string",
        "# we're passing these as arguments to the diff function",
        "fromdate",
        "=",
        "time",
        ".",
        "ctime",
        "(",
        "os",
        ".",
        "stat",
        "(",
        "fromfile",
        ")",
        ".",
        "st_mtime",
        ")",
        "todate",
        "=",
        "time",
        ".",
        "ctime",
        "(",
        "os",
        ".",
        "stat",
        "(",
        "tofile",
        ")",
        ".",
        "st_mtime",
        ")",
        "with",
        "open",
        "(",
        "fromfile",
        ")",
        "as",
        "fromf",
        ",",
        "open",
        "(",
        "tofile",
        ")",
        "as",
        "tof",
        ":",
        "fromlines",
        ",",
        "tolines",
        "=",
        "list",
        "(",
        "fromf",
        "),",
        "list",
        "(",
        "tof",
        ")",
        "if",
        "options",
        ".",
        "u",
        ":",
        "diff",
        "=",
        "difflib",
        ".",
        "unified_diff",
        "(",
        "fromlines",
        ",",
        "tolines",
        ",",
        "fromfile",
        ",",
        "tofile",
        ",",
        "fromdate",
        ",",
        "todate",
        ",",
        "n",
        "=",
        "n",
        ")",
        "elif",
        "options",
        ".",
        "n",
        ":",
        "diff",
        "=",
        "difflib",
        ".",
        "ndiff",
        "(",
        "fromlines",
        ",",
        "tolines",
        ")",
        "elif",
        "options",
        ".",
        "m",
        ":",
        "diff",
        "=",
        "difflib",
        ".",
        "HtmlDiff",
        "()",
        ".",
        "make_file",
        "(",
        "fromlines",
        ",",
        "tolines",
        ",",
        "fromfile",
        ",",
        "tofile",
        ",",
        "context",
        "=",
        "options",
        ".",
        "c",
        ",",
        "numlines",
        "=",
        "n",
        ")",
        "else",
        ":",
        "diff",
        "=",
        "difflib",
        ".",
        "context_diff",
        "(",
        "fromlines",
        ",",
        "tolines",
        ",",
        "fromfile",
        ",",
        "tofile",
        ",",
        "fromdate",
        ",",
        "todate",
        ",",
        "n",
        "=",
        "n",
        ")",
        "# we're using writelines because diff is a generator",
        "sys",
        ".",
        "stdout",
        ".",
        "writelines",
        "(",
        "diff",
        ")",
        "if",
        "__name__",
        "==",
        "'__main__'",
        ":",
        "main",
        "()"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 82,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "3px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "<a href=\"../contents.html\">Table Of Contents</a>",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Table Of Contents"
      ]
    },
    {
      "bound": {
        "height": 180,
        "left": 36,
        "top": 108,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#\">6.3. <tt class=\"docutils literal\"><span class=\"pre\">difflib</span></tt> — Helpers for computing deltas</a><ul>\n<li><a class=\"reference internal\" href=\"#sequencematcher-objects\">6.3.1. SequenceMatcher Objects</a></li>\n<li><a class=\"reference internal\" href=\"#sequencematcher-examples\">6.3.2. SequenceMatcher Examples</a></li>\n<li><a class=\"reference internal\" href=\"#differ-objects\">6.3.3. Differ Objects</a></li>\n<li><a class=\"reference internal\" href=\"#differ-example\">6.3.4. Differ Example</a></li>\n<li><a class=\"reference internal\" href=\"#a-command-line-interface-to-difflib\">6.3.5. A command-line interface to difflib</a></li>\n</ul>\n",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "6.3. ",
        "difflib",
        " — Helpers for computing deltas"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 140,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a class=\"reference internal\" href=\"#sequencematcher-objects\">6.3.1. SequenceMatcher Objects</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1)",
      "text": [
        "6.3.1. SequenceMatcher Objects"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 177,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a class=\"reference internal\" href=\"#sequencematcher-examples\">6.3.2. SequenceMatcher Examples</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(2)",
      "text": [
        "6.3.2. SequenceMatcher Examples"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 214,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(3)",
      "html": "<a class=\"reference internal\" href=\"#differ-objects\">6.3.3. Differ Objects</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(3)",
      "text": [
        "6.3.3. Differ Objects"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 56,
        "top": 235,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(4)",
      "html": "<a class=\"reference internal\" href=\"#differ-example\">6.3.4. Differ Example</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(4)",
      "text": [
        "6.3.4. Differ Example"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 56,
        "top": 256,
        "width": 152
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "square",
        "margin-bottom": "5px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(5)",
      "html": "<a class=\"reference internal\" href=\"#a-command-line-interface-to-difflib\">6.3.5. A command-line interface to difflib</a>",
      "path": "div > div > div > ul > li > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5)",
      "text": [
        "6.3.5. A command-line interface to difflib"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 314,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(1)",
      "html": "Previous topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(1)",
      "text": [
        "Previous topic"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 36,
        "top": 335,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(1)",
      "html": "<a href=\"re.html\" title=\"previous chapter\">6.2. <tt class=\"docutils literal\"><span class=\"pre\">re</span></tt> — Regular expression operations</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(1)",
      "text": [
        "6.2. ",
        "re",
        " — Regular expression operations"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 393,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "17px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "26px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h4:nth-of-type(2)",
      "html": "Next topic",
      "path": "div > div > div > h4",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h4:nth-of-type(2)",
      "text": [
        "Next topic"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 36,
        "top": 414,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "13px",
        "line-height": "16px",
        "margin-bottom": "10px",
        "margin-left": "10px",
        "margin-right": "10px",
        "margin-top": "5px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.topless:nth-of-type(2)",
      "html": "<a href=\"textwrap.html\" title=\"next chapter\">6.4. <tt class=\"docutils literal\"><span class=\"pre\">textwrap</span></tt> — Text wrapping and filling</a>",
      "path": "div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > p.topless:nth-of-type(2)",
      "text": [
        "6.4. ",
        "textwrap",
        " — Text wrapping and filling"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 474,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(2)",
      "html": "This Page",
      "path": "div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > h3:nth-of-type(2)",
      "text": [
        "This Page"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 500,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(1)",
      "html": "<a href=\"../bugs.html\">Report a Bug</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(1)",
      "text": [
        "Report a Bug"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 36,
        "top": 516,
        "width": 182
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "display": "list-item",
        "font-size": "13px",
        "line-height": "16px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "li:nth-of-type(2)",
      "html": "<a href=\"../_sources/library/difflib.txt\" rel=\"nofollow\">Show Source</a>",
      "path": "div > div > div > ul > li",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > ul.this-page-menu:nth-of-type(2) > li:nth-of-type(2)",
      "text": [
        "Show Source"
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 560,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "19px",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "28px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "h3:nth-of-type(1)",
      "html": "Quick search",
      "path": "div > div > div > div > h3",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > h3:nth-of-type(1)",
      "text": [
        "Quick search"
      ]
    },
    {
      "bound": {
        "height": 32,
        "left": 26,
        "top": 623,
        "width": 202
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "font-size": "12px",
        "line-height": "16px",
        "margin-bottom": "12px",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "12px",
        "outline-color": "rgb(68, 68, 68)",
        "word-wrap": "break-word"
      },
      "element": "p.searchtip:nth-of-type(1)",
      "html": "\n    Enter search terms or a module, class or function name.\n    ",
      "path": "div > div > div > div > p",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div.sphinxsidebarwrapper:nth-of-type(1) > div#searchbox:nth-of-type(1) > p.searchtip:nth-of-type(1)",
      "text": [
        "\n    Enter search terms or a module, class or function name.\n    "
      ]
    },
    {
      "bound": {
        "height": 16,
        "left": 235,
        "top": 1990,
        "width": 9
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(68, 68, 68)",
        "border-left-color": "rgb(68, 68, 68)",
        "border-right-color": "rgb(68, 68, 68)",
        "border-top-color": "rgb(68, 68, 68)",
        "color": "rgb(68, 68, 68)",
        "cursor": "pointer",
        "line-height": "16px",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(68, 68, 68)",
        "position": "fixed"
      },
      "element": "span:nth-of-type(1)",
      "html": "«",
      "path": "div > div > div > span",
      "selector": "div.document:nth-of-type(2) > div.sphinxsidebar:nth-of-type(2) > div#sidebarbutton:nth-of-type(2) > span:nth-of-type(1)",
      "text": [
        "«"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1540,
        "top": 10900,
        "width": 34
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "10px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(1)",
      "html": "\n          <a href=\"../genindex.html\" title=\"General Index\">index</a>",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(1)",
      "text": [
        "index"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1473,
        "top": 10900,
        "width": 62
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(2)",
      "html": "\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(2)",
      "text": [
        "modules",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1430,
        "top": 10900,
        "width": 38
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(3)",
      "html": "\n          <a href=\"textwrap.html\" title=\"6.4. textwrap — Text wrapping and filling\">next</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(3)",
      "text": [
        "next",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 1362,
        "top": 10900,
        "width": 63
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "float": "right",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "5px",
        "outline-color": "rgb(102, 102, 102)"
      },
      "element": "li.right:nth-of-type(4)",
      "html": "\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\">previous</a> |",
      "path": "div > ul > li",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li.right:nth-of-type(4)",
      "text": [
        "previous",
        " |"
      ]
    },
    {
      "bound": {
        "height": 30,
        "left": 16,
        "top": 10900,
        "width": 1568
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "outline-color": "rgb(102, 102, 102)",
        "padding-left": "10px"
      },
      "element": "ul:nth-of-type(1)",
      "html": "\n        <li class=\"right\" style=\"margin-right: 10px\">\n          <a href=\"../genindex.html\" title=\"General Index\">index</a></li>\n        <li class=\"right\">\n          <a href=\"../py-modindex.html\" title=\"Python Module Index\">modules</a> |</li>\n        <li class=\"right\">\n          <a href=\"textwrap.html\" title=\"6.4. textwrap — Text wrapping and filling\">next</a> |</li>\n        <li class=\"right\">\n          <a href=\"re.html\" title=\"6.2. re — Regular expression operations\">previous</a> |</li>\n        <li><img src=\"../_static/py.png\" alt=\"\" style=\"vertical-align: middle; margin-top: -1px\"></li>\n        <li><a href=\"http://www.python.org/\">Python</a> »</li>\n        <li>\n          <span class=\"version_switcher_placeholder\"><select><option value=\"3.4\">dev (3.4)</option><option value=\"3.3\" selected=\"selected\">3.3.2</option><option value=\"3.2\">3.2</option><option value=\"2.7\">2.7</option><option value=\"2.6\">2.6</option></select></span>\n          <a href=\"../index.html\">Documentation</a> »\n        </li>\n\n          <li><a href=\"index.html\">The Python Standard Library</a> »</li>\n          <li><a href=\"text.html\">6. Text Processing Services</a> »</li> \n      ",
      "path": "div > ul",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1)",
      "text": [
        "Python",
        " »",
        "Documentation",
        " »\n        ",
        "The Python Standard Library",
        " »",
        "6. Text Processing Services",
        " »"
      ]
    },
    {
      "bound": {
        "height": 90,
        "left": 16,
        "top": 10930,
        "width": 1558
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(85, 85, 85)",
        "border-left-color": "rgb(85, 85, 85)",
        "border-right-color": "rgb(85, 85, 85)",
        "border-top-color": "rgb(85, 85, 85)",
        "color": "rgb(85, 85, 85)",
        "font-size": "12px",
        "line-height": "18px",
        "margin-left": "0px",
        "margin-right": "10px",
        "margin-top": "-24px",
        "outline-color": "rgb(85, 85, 85)",
        "padding-bottom": "9px",
        "padding-top": "9px",
        "text-align": "right"
      },
      "element": "div.footer:nth-of-type(4)",
      "html": "\n    © <a href=\"../copyright.html\">Copyright</a> 1990-2013, Python Software Foundation.\n    <br>\n    The Python Software Foundation is a non-profit corporation.\n    <a href=\"http://www.python.org/psf/donations/\">Please donate.</a>\n    <br>\n    Last updated on Aug 14, 2013.\n    <a href=\"../bugs.html\">Found a bug</a>?\n    <br>\n    Created using <a href=\"http://sphinx.pocoo.org/\">Sphinx</a> 1.0.7.\n    ",
      "path": "div",
      "selector": "div.footer:nth-of-type(4)",
      "text": [
        "\n    © ",
        "Copyright",
        " 1990-2013, Python Software Foundation.\n    ",
        "\n    The Python Software Foundation is a non-profit corporation.\n    ",
        "Please donate.",
        "\n    Last updated on Aug 14, 2013.\n    ",
        "Found a bug",
        "?\n    ",
        "\n    Created using ",
        "Sphinx",
        " 1.0.7.\n    "
      ]
    }
  ],
  "images": [
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 21,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(1) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    },
    {
      "bound": {
        "height": 16,
        "left": 26,
        "top": 10907,
        "width": 16
      },
      "computed": {
        "background-color": "rgba(0, 0, 0, 0)",
        "border-bottom-color": "rgb(102, 102, 102)",
        "border-left-color": "rgb(102, 102, 102)",
        "border-right-color": "rgb(102, 102, 102)",
        "border-top-color": "rgb(102, 102, 102)",
        "color": "rgb(102, 102, 102)",
        "display": "inline",
        "font-size": "14px",
        "line-height": "30px",
        "list-style-type": "none",
        "margin-left": "0px",
        "margin-right": "0px",
        "margin-top": "-1px",
        "outline-color": "rgb(102, 102, 102)",
        "vertical-align": "middle"
      },
      "element": "img:nth-of-type(1)",
      "path": "div > ul > li > img",
      "selector": "div.related:nth-of-type(3) > ul:nth-of-type(1) > li:nth-of-type(5) > img:nth-of-type(1)",
      "src": "http://docs.python.org/3.3/_static/py.png"
    }
  ]
}